Public Class AgregarProyecto

    Private fDone As Boolean = False

    Public susername As String = ""
    Public bactive As Boolean = False
    Public bonline As Boolean = False
    Public suserfullname As String = ""
    Public suseremail As String = ""
    Public susersession As Integer = 0
    Public susermachinename As String = ""
    Public suserip As String = "0.0.0.0"

    Public iprojectid As Integer = 0
    Public iclientid As Integer = 0

    Public isEdit As Boolean = False
    Public isHistoric As Boolean = False
    Public isRecover As Boolean = False

    Public wasCreated As Boolean = False

    Private iprojectmodifieddate As Integer = 0
    Private sprojectmodifiedtime As String = "00:00:00"
    Private slastmodelapplied As String = ""

    Private iselectedcostid As Integer = 0
    Private sselectedcostdescription As String = ""
    Private dselectedcostamount As Double = 0.0

    Private iselectedcardid As Integer = 0
    Private sselectedcardlegacyid As String = ""
    Private dselectedcardqty As Double = 1.0
    Private sselectedcarddescription As String = ""

    Private iselectedinputid As Integer = 0
    Private sselectedinputdescription As String = ""
    Private dselectedinputqty As Double = 0.0

    Private iselectedadmincostid As Integer = 0
    Private sselectedadmincostdescription As String = ""
    Private dselectedadmincostamount As Double = 0.0

    Private dgvReporte As DataGridView
    Private WithEvents reportesTabPage As TabPage
    Private currentSelectedTabtcReportes As String = ""
    Private WithEvents btnExportarReporte As Button

    Private WithEvents txtCantidadDgvCostosIndirectos As TextBox
    Private WithEvents txtNombreDgvCostosIndirectos As TextBox

    Private WithEvents txtCantidadDgvResumenDeTarjetas As TextBox
    Private WithEvents txtNombreDgvResumenDeTarjetas As TextBox
    Private WithEvents txtLegacyIdDgvResumenDeTarjetas As TextBox

    Private WithEvents txtCantidadDgvExplosionDeInsumos As TextBox

    Private WithEvents txtCantidadDgvGastosAdminAsociados As TextBox
    Private WithEvents txtNombreDgvGastosAdminAsociados As TextBox

    Private txtCantidadDgvCostosIndirectos_OldText As String = ""
    Private txtNombreDgvCostosIndirectos_OldText As String = ""

    Private txtCantidadDgvResumenDeTarjetas_OldText As String = ""
    Private txtNombreDgvResumenDeTarjetas_OldText As String = ""
    Private txtLegacyIdDgvResumenDeTarjetas_OldText As String = ""

    Private txtCantidadDgvExplosionDeInsumos_OldText As String = ""

    Private txtCantidadDgvGastosAdminAsociados_OldText As String = ""
    Private txtNombreDgvGastosAdminAsociados_OldText As String = ""

    Private paso2 As Boolean = False
    Private paso3 As Boolean = False
    Private paso4 As Boolean = False

    Public alertaMostrada As Boolean = False

    Private isFormReadyForAction As Boolean = False
    Private isResumenDGVReady As Boolean = False

    Private viewPermission As Boolean = False

    Private addIndirectCosts As Boolean = False
    Private modifyIndirectCosts As Boolean = False
    Private deleteIndirectCosts As Boolean = False

    Private addCards As Boolean = False
    Private openCards As Boolean = False
    Private deleteCards As Boolean = False

    Private modifyCardQty As Boolean = False
    Private viewDgvIndirectCosts As Boolean = False
    Private viewDgvProfits As Boolean = False
    Private viewDgvUnitPrices As Boolean = False
    Private viewDgvAmount As Boolean = False

    Private viewAnalysis As Boolean = False
    Private viewReports As Boolean = False

    Private addExplosion As Boolean = False
    Private modifyExplosion As Boolean = False
    Private deleteExplosion As Boolean = False

    Private exportHojaControlCompras As Boolean = False

    Private addAdminCosts As Boolean = False
    Private modifyAdminCosts As Boolean = False
    Private deleteAdminCosts As Boolean = False

    Public messagesWindowIsAlreadyOpen As Boolean = False


    Private Sub checkMessages(ByVal username As String, ByVal x As Integer, ByVal y As Integer)

        Dim unreadmessagecount As Integer = 0
        unreadmessagecount = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM messages where susername = '" & username & "' AND bread = 0")

        If unreadmessagecount > 0 And messagesWindowIsAlreadyOpen = False Then

            Dim msg As New Mensajes
            Dim pt As Point

            msg.susername = username
            msg.bactive = bactive
            msg.bonline = bonline
            msg.suserfullname = suserfullname
            msg.suseremail = suseremail
            msg.susersession = susersession
            msg.susermachinename = susermachinename
            msg.suserip = suserip

            msg.StartPosition = FormStartPosition.Manual

            Dim tamañoPantalla As Integer = Screen.GetWorkingArea(Me).Height

            Dim tmpPt1 As Point = New Point(Me.Location.X, (tamañoPantalla - Me.Size.Height - msg.Size.Height) / 2) 'msg window
            Dim tmpPt2 As Point = New Point(Me.Location.X, tmpPt1.Y + msg.Size.Height) 'me

            If tmpPt1.Y > Screen.GetWorkingArea(Me).Location.Y Then

                pt = New Point(Me.Location.X, tmpPt1.Y)
                Me.Location = New Point(Me.Location.X, tmpPt2.Y)

            Else

                pt = New Point(x, y)

            End If

            msg.Location = pt
            msg.bAlreadyOpen = True

            messagesWindowIsAlreadyOpen = True

            msg.Show()

        End If

    End Sub


    Private Sub checkForKickoutsAndTimedOuts()

        Dim queryMySession As String = ""
        Dim dsMySession As DataSet

        queryMySession = "SELECT * FROM sessions s WHERE s.susername = '" & susername & "' AND s.susersession = '" & susersession & "' ORDER BY s.ilogindate DESC, s.slogintime DESC LIMIT 1 "

        dsMySession = getSQLQueryAsDataset(0, queryMySession)

        If dsMySession.Tables(0).Rows.Count > 0 Then

            If dsMySession.Tables(0).Rows(0).Item("btimedout") = "1" Then

                MsgBox("Tu sesión ha expirado. Es necesario que entres de nuevo al sistema con tu usuario y contraseña", MsgBoxStyle.Critical, "Sesión expirada")

                susername = ""
                bactive = False
                bonline = False
                suserfullname = ""
                suseremail = ""
                susersession = 0
                susermachinename = ""
                suserip = "0.0.0.0"

                Dim l As New Login

                l.isEdit = True

                l.ShowDialog(Me)

                If l.DialogResult <> Windows.Forms.DialogResult.OK Then

                    MsgBox("Cerrando Aplicación SIN Guardar...", MsgBoxStyle.Critical, "Intento Fallido")
                    System.Environment.Exit(0)

                End If

            End If

            If dsMySession.Tables(0).Rows(0).Item("bkickedout") = "1" Then

                MsgBox("Has sido sacado del sistema. Para continuar es necesario que entres de nuevo al sistema con tu usuario y contraseña", MsgBoxStyle.Critical, "Logged out")

                susername = ""
                bactive = False
                bonline = False
                suserfullname = ""
                suseremail = ""
                susersession = 0
                susermachinename = ""
                suserip = "0.0.0.0"

                Dim l As New Login

                l.isEdit = True

                l.ShowDialog(Me)

                If l.DialogResult <> Windows.Forms.DialogResult.OK Then

                    MsgBox("Cerrando Aplicación SIN Guardar...", MsgBoxStyle.Critical, "Intento Fallido")
                    System.Environment.Exit(0)

                End If

            End If

        End If

    End Sub


    Private Sub setControlsByPermissions(ByVal windowname As String, ByVal username As String)

        'Check for specific permissions on every window, but only for that unique window permissions, not the entire list!!

        Dim dsPermissions As DataSet

        Dim permission As String

        dsPermissions = getSQLQueryAsDataset(0, "SELECT * FROM userpermissions WHERE susername = '" & username & "' AND swindowname = '" & windowname & "'")

        For j = 0 To dsPermissions.Tables(0).Rows.Count - 1

            Try

                permission = dsPermissions.Tables(0).Rows(j).Item("spermission")

                If permission = "Ver" Then
                    viewPermission = True
                End If

                If permission = "Modificar" Then
                    btnPaso2.Enabled = True
                    btnGuardar.Enabled = True
                    btnGuardarYCerrar.Enabled = True
                    btnRealizarObra.Enabled = True
                    btnTerminarObra.Enabled = True
                End If

                If permission = "Editar Datos Iniciales" Then
                    dtFechaPresupuesto.Enabled = True
                    txtNombreProyecto.Enabled = True
                    btnClientes.Enabled = True
                    txtNombreEmpresa.Enabled = True
                    rbCasa.Enabled = True
                    rbOficina.Enabled = True
                    rbOtro.Enabled = True
                    txtAnchoVivienda.Enabled = True
                    txtLongitudVivienda.Enabled = True
                    txtAnchoTerreno.Enabled = True
                    txtLongitudTerreno.Enabled = True
                    btnDireccion.Enabled = True
                    btnAbrirCarpeta.Enabled = True
                End If

                If permission = "Ver Costos Indirectos" Then
                    dgvCostosIndirectos.Visible = True
                    lblTotalIndirectosLbl.Visible = True
                    lblTotalIndirectos.Visible = True
                    lblIngresosIndirectos.Visible = True
                    txtIngresosIndirectos.Visible = True
                    lblPorcentajeIndirectosLbl.Visible = True
                    lblPorcentajeIndirectos.Visible = True
                End If

                If permission = "Agregar Costo Indirecto" Then
                    addIndirectCosts = True
                    btnNuevoCostoIndirecto.Enabled = True
                    dgvCostosIndirectos.Visible = True
                    dgvCostosIndirectos.ReadOnly = False
                    lblTotalIndirectosLbl.Visible = True
                    lblTotalIndirectos.Visible = True
                    lblIngresosIndirectos.Visible = True
                    txtIngresosIndirectos.Visible = True
                    lblPorcentajeIndirectosLbl.Visible = True
                    lblPorcentajeIndirectos.Visible = True
                End If

                If permission = "Modificar Costos Indirectos" Then
                    modifyIndirectCosts = True
                    dgvCostosIndirectos.Visible = True
                    dgvCostosIndirectos.ReadOnly = False
                    lblTotalIndirectosLbl.Visible = True
                    lblTotalIndirectos.Visible = True
                    lblIngresosIndirectos.Visible = True
                    txtIngresosIndirectos.Visible = True
                    lblPorcentajeIndirectosLbl.Visible = True
                    lblPorcentajeIndirectos.Visible = True
                End If

                If permission = "Eliminar Costos Indirectos" Then
                    deleteIndirectCosts = True
                    btnEliminarCostoIndirecto.Enabled = True
                    dgvCostosIndirectos.Visible = True
                    lblTotalIndirectosLbl.Visible = True
                    lblTotalIndirectos.Visible = True
                    lblIngresosIndirectos.Visible = True
                    txtIngresosIndirectos.Visible = True
                    lblPorcentajeIndirectosLbl.Visible = True
                    lblPorcentajeIndirectos.Visible = True
                End If

                If permission = "Ver Resumen de Tarjetas" Then
                    dgvResumenDeTarjetas.Visible = True
                End If

                If permission = "Agregar Tarjeta" Then
                    addCards = True
                    dgvResumenDeTarjetas.Visible = True
                    btnNuevaTarjeta.Enabled = True
                End If

                If permission = "Modificar Resumen de Tarjetas" Then
                    openCards = True
                    modifyCardQty = True
                    dgvResumenDeTarjetas.Visible = True
                    btnInsertarTarjeta.Enabled = True
                End If

                If permission = "Eliminar Tarjeta" Then
                    deleteCards = True
                    dgvResumenDeTarjetas.Visible = True
                    btnEliminarTarjeta.Enabled = True
                End If

                If permission = "Cambiar Defaults e IVA" Then
                    txtPorcentajeIVA.Enabled = True
                    txtPorcentajeUtilidadDefault.Enabled = True
                    txtPorcentajeIndirectosDefault.Enabled = True
                End If

                If permission = "Actualizar Precios" Then
                    btnActualizarPrecios.Enabled = True
                End If

                If permission = "Cambiar Utilidades e Ind" Then
                    btnActualizarUtilidad.Enabled = True
                End If

                If permission = "Generar Contrato Word" Then
                    btnGenerarContratoWord.Enabled = True
                End If

                If permission = "Generar Archivo Excel" Then
                    btnGenerarArchivoExcel.Enabled = True
                End If

                If permission = "Si se hiciera hoy" Then
                    btnCostoHoy.Enabled = True
                End If

                If permission = "Ver Indirectos" Then
                    viewDgvIndirectCosts = True
                End If

                If permission = "Ver Utilidades" Then
                    viewDgvProfits = True
                End If

                If permission = "Ver Precios Unitarios" Then
                    viewDgvUnitPrices = True
                End If

                If permission = "Ver Importes" Then
                    viewDgvAmount = True
                End If

                If permission = "Ver Explosion de Insumos" Then
                    dgvExplosionDeInsumos.Visible = True
                    dgvExplosionDeInsumosPorProveedor.Visible = True
                    dgvInsumosFacturadosNoPresupuestados.Visible = True
                End If

                If permission = "Agregar Explosion de Insumos" Then
                    addExplosion = True
                    btnNuevoInsumo.Enabled = True
                End If

                If permission = "Modificar Explosion de Insumos" Then
                    modifyExplosion = True
                End If

                If permission = "Insertar Explosion de Insumos" Then
                    btnInsertarInsumo.Enabled = True
                End If

                If permission = "Eliminar Explosion de Insumos" Then
                    deleteExplosion = True
                    btnEliminarInsumo.Enabled = True
                End If

                If permission = "Ver Inventario" Then
                    btnVerificarInventario.Enabled = True
                End If

                If permission = "Exportar Explosion de Insumos" Then
                    btnGenerarExplosion.Enabled = True
                End If

                If permission = "Generar Hojas de Control de Compras" Then
                    exportHojaControlCompras = True
                End If

                If permission = "Ver Presupuestos de Compra" Then
                    btnPresupuestosDeCompras.Enabled = True
                End If

                If permission = "Ver Pedidos" Then
                    dgvPedidosDeObra.Visible = True
                End If

                If permission = "Ver Envios" Then
                    dgvEnviosALaObra.Visible = True
                End If

                If permission = "Ver Facturas" Then
                    dgvFacturas.Visible = True
                End If

                If permission = "Ver Vales de Gasolina" Then
                    dgvVales.Visible = True
                End If

                If permission = "Ver Nominas" Then
                    dgvNominas.Visible = True
                End If

                If permission = "Ver Ingresos" Then
                    dgvEntradas.Visible = True
                End If

                If permission = "Ver Egresos" Then
                    dgvSalidas.Visible = True
                End If

                If permission = "Ver Analisis" Then
                    viewAnalysis = True
                End If

                If permission = "Ver Gastos Administrativos Asignados" Then
                    lblFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodolbl.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblGastosAdminAsignados.Visible = True
                    dgvGastosAdminAsociados.Visible = True
                    dgvGastosAdminAsociados.ReadOnly = False
                    lblTotalGastosAdminAsignadoslbl.Visible = True
                    lblTotalGastosAdminAsignados.Visible = True
                End If

                If permission = "Agregar Gasto Administrativo Asignado" Then
                    addAdminCosts = True
                    btnNuevoGastoAdminAsignado.Enabled = True
                    lblFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodolbl.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblGastosAdminAsignados.Visible = True
                    dgvGastosAdminAsociados.Visible = True
                    dgvGastosAdminAsociados.ReadOnly = False
                    lblTotalGastosAdminAsignadoslbl.Visible = True
                    lblTotalGastosAdminAsignados.Visible = True
                End If

                If permission = "Modificar Gasto Administrativo Asignado" Then
                    modifyAdminCosts = True
                    dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodolbl.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblGastosAdminAsignados.Visible = True
                    dgvGastosAdminAsociados.Visible = True
                    dgvGastosAdminAsociados.ReadOnly = False
                    lblTotalGastosAdminAsignadoslbl.Visible = True
                    lblTotalGastosAdminAsignados.Visible = True
                End If

                If permission = "Eliminar Gasto Administrativo Asignado" Then
                    deleteAdminCosts = True
                    btnEliminarGastoAdminAsignado.Enabled = True
                    lblFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodolbl.Visible = True
                    lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Visible = True
                    lblGastosAdminAsignados.Visible = True
                    dgvGastosAdminAsociados.Visible = True
                    dgvGastosAdminAsociados.ReadOnly = False
                    lblTotalGastosAdminAsignadoslbl.Visible = True
                    lblTotalGastosAdminAsignados.Visible = True
                End If

                If permission = "Cambiar Porcentaje de Comision de Obra Presupuestada" Then
                    txtPorcentajeDeComisionDeObraPresupuestada.Enabled = True
                End If

                If permission = "Cambiar Porcentaje de Comision de Obra Real" Then
                    txtPorcentajeDeComisionDeObraReal.Enabled = True
                End If

                If permission = "Cambiar Porcentaje de Cierre de Operacion Presupuestado" Then
                    txtPorcentajePorCierreDeOperacionPresupuestada.Enabled = True
                End If

                If permission = "Cambiar Porcentaje de Cierre de Operacion Real" Then
                    txtPorcentajePorCierreDeOperacionReal.Enabled = True
                End If

                If permission = "Ver Reportes" Then
                    viewReports = True
                End If

                If permission = "Ver Revisiones" Then
                    btnRevisiones.Enabled = True
                End If

            Catch ex As Exception

            End Try

            permission = ""

        Next j


        If viewPermission = False Then

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            executeSQLCommand(0, "INSERT IGNORE INTO logs VALUES (" & fecha & ", '" & hora & "', '" & susername & "', " & susersession & ", '" & suserip & "', '" & susermachinename & "', 'Acceso denegado a la ventana de Agregar Proyecto', 'OK')")

            Dim dsUsuariosSysAdmin As DataSet

            dsUsuariosSysAdmin = getSQLQueryAsDataset(0, "SELECT susername FROM userspecialattributes WHERE bsysadmin = 1")

            If dsUsuariosSysAdmin.Tables(0).Rows.Count > 0 Then

                For i = 0 To dsUsuariosSysAdmin.Tables(0).Rows.Count - 1
                    executeSQLCommand(0, "INSERT INTO messages (susername, susersession, smessage, bread, imessagedatetime, smessagecreatorusername, iupdatedatetime, supdateusername) VALUES ('" & dsUsuariosSysAdmin.Tables(0).Rows(i).Item(0) & "', 0, 'Un usuario ha intentado propasar sus permisos. ¿Podrías revisar?', 0, '" & convertYYYYMMDDtoYYYYhyphenMMhyphenDD(fecha) & " " & hora & "', 'SYSTEM', '" & convertYYYYMMDDtoYYYYhyphenMMhyphenDD(fecha) & " " & hora & "', 'SYSTEM')")
                Next i

            End If

            MsgBox("No tienes los permisos necesarios para abrir esta Ventana. Este intento ha sido notificado al administrador.", MsgBoxStyle.Exclamation, "Access Denied")

            Me.DialogResult = Windows.Forms.DialogResult.Cancel
            Me.Close()

        End If

    End Sub


    Private Sub AgregarProyecto_FormClosing(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim conteo1 As Integer = 0
        Dim conteo2 As Integer = 0
        Dim conteo3 As Integer = 0
        Dim conteo4 As Integer = 0
        Dim conteo5 As Integer = 0
        Dim conteo6 As Integer = 0
        Dim conteo7 As Integer = 0
        Dim conteo8 As Integer = 0
        Dim conteo9 As Integer = 0
        Dim conteo10 As Integer = 0
        Dim conteo11 As Integer = 0
        Dim conteo12 As Integer = 0
        Dim conteo13 As Integer = 0
        Dim conteo14 As Integer = 0
        Dim conteo15 As Integer = 0
        Dim conteo16 As Integer = 0
        Dim conteo17 As Integer = 0
        Dim conteo18 As Integer = 0
        Dim conteo19 As Integer = 0
        Dim conteo20 As Integer = 0
        Dim conteo21 As Integer = 0
        Dim conteo22 As Integer = 0
        Dim conteo23 As Integer = 0
        Dim conteo24 As Integer = 0
        Dim conteo25 As Integer = 0
        Dim conteo26 As Integer = 0
        Dim conteo27 As Integer = 0
        Dim conteo28 As Integer = 0
        Dim conteo29 As Integer = 0
        Dim conteo30 As Integer = 0
        Dim conteo31 As Integer = 0
        Dim conteo32 As Integer = 0
        Dim conteo33 As Integer = 0
        Dim conteo34 As Integer = 0
        Dim conteo35 As Integer = 0
        Dim conteo36 As Integer = 0
        Dim conteo37 As Integer = 0
        Dim conteo38 As Integer = 0
        Dim conteo39 As Integer = 0
        Dim conteo40 As Integer = 0
        Dim conteo41 As Integer = 0
        Dim conteo42 As Integer = 0
        Dim conteo43 As Integer = 0
        Dim conteo44 As Integer = 0
        Dim conteo45 As Integer = 0
        Dim conteo46 As Integer = 0
        Dim conteo47 As Integer = 0
        Dim conteo48 As Integer = 0

        Dim unsaved As Boolean = False

        Dim baseid As Integer = 0

        baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

        If baseid = 0 Then
            baseid = 99999
        End If

        conteo1 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projects " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp WHERE projects.iprojectid = tp.iprojectid) ")

        conteo2 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projectindirectcosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic WHERE projectindirectcosts.iprojectid = tpic.iprojectid AND projectindirectcosts.icostid = tpic.icostid) ")

        conteo3 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projectcards " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc WHERE projectcards.iprojectid = tpc.iprojectid AND projectcards.icardid = tpc.icardid) ")

        conteo4 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projectcardinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci WHERE projectcardinputs.iprojectid = tpci.iprojectid AND projectcardinputs.icardid = tpci.icardid AND projectcardinputs.iinputid = tpci.iinputid) ")

        conteo5 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projectcardcompoundinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci WHERE projectcardcompoundinputs.iprojectid = tpcci.iprojectid AND projectcardcompoundinputs.icardid = tpcci.icardid AND projectcardcompoundinputs.iinputid = tpcci.iinputid AND projectcardcompoundinputs.icompoundinputid = tpcci.icompoundinputid) ")

        conteo6 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projectprices " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp WHERE projectprices.iprojectid = tpp.iprojectid AND projectprices.iinputid = tpp.iinputid AND projectprices.iupdatedate = tpp.iupdatedate AND projectprices.supdatetime = tpp.supdatetime) ")

        conteo7 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projectexplosion " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex WHERE projectexplosion.iprojectid = tpex.iprojectid AND projectexplosion.iinputid = tpex.iinputid) ")

        conteo40 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projecttimber " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt WHERE projecttimber.iprojectid = tpt.iprojectid AND projecttimber.iinputid = tpt.iinputid) ")

        conteo46 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM projectadmincosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac WHERE projectadmincosts.iprojectid = tpac.iprojectid AND projectadmincosts.iadmincostid = tpac.iadmincostid) ")

        conteo8 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tp.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp JOIN projects p ON tp.iprojectid = p.iprojectid WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') ")

        conteo9 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpic.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic JOIN projectindirectcosts pic ON tpic.iprojectid = pic.iprojectid AND tpic.icostid = pic.icostid WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') ")

        conteo10 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpc.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc JOIN projectcards pc ON tpc.iprojectid = pc.iprojectid AND tpc.icardid = pc.icardid WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') ")

        conteo11 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpci.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci JOIN projectcardinputs pci ON tpci.iprojectid = pci.iprojectid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') ")

        conteo12 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpcci.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci JOIN projectcardcompoundinputs pcci ON tpcci.iprojectid = pcci.iprojectid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') ")

        conteo13 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpp.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp JOIN projectprices pp ON tpp.iprojectid = pp.iprojectid AND tpp.iinputid = pp.iinputid WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') ")

        conteo14 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpex.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex JOIN projectexplosion pex ON tpex.iprojectid = pex.iprojectid AND tpex.iinputid = pex.iinputid WHERE STR_TO_DATE(CONCAT(tpex.iupdatedate, ' ', tpex.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pex.iupdatedate, ' ', pex.supdatetime), '%Y%c%d %T') ")

        conteo41 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpt.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt JOIN projecttimber pt ON tpt.iprojectid = pt.iprojectid AND tpt.iinputid = pt.iinputid WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') ")

        conteo47 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpac.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac JOIN projectadmincosts pac ON tpac.iprojectid = pac.iprojectid AND tpac.iadmincostid = pac.iadmincostid WHERE STR_TO_DATE(CONCAT(tpac.iupdatedate, ' ', tpac.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pac.iupdatedate, ' ', pac.supdatetime), '%Y%c%d %T') ")

        conteo15 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp " & _
        "WHERE NOT EXISTS (SELECT * FROM projects p WHERE p.iprojectid = tp.iprojectid AND p.iprojectid = " & iprojectid & ") ")

        conteo16 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic " & _
        "WHERE NOT EXISTS (SELECT * FROM projectindirectcosts pic WHERE pic.iprojectid = tpic.iprojectid AND pic.icostid = tpic.icostid AND pic.iprojectid = " & iprojectid & ") ")

        conteo17 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcards pc WHERE pc.iprojectid = tpc.iprojectid AND pc.icardid = tpc.icardid AND pc.iprojectid = " & iprojectid & ") ")

        conteo18 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardinputs pci WHERE pci.iprojectid = tpci.iprojectid AND pci.icardid = tpci.icardid AND pci.iinputid = tpci.iinputid AND pci.iprojectid = " & iprojectid & ") ")

        conteo19 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardcompoundinputs pcci WHERE pcci.iprojectid = tpcci.iprojectid AND pcci.icardid = tpcci.icardid AND pcci.iinputid = tpcci.iinputid AND pcci.icompoundinputid = tpcci.icompoundinputid AND pcci.iprojectid = " & iprojectid & ") ")

        conteo20 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tp " & _
        "WHERE NOT EXISTS (SELECT * FROM projectprices pp WHERE pp.iprojectid = tpp.iprojectid AND pp.iinputid = tpp.iinputid AND pp.iupdatedate = tpp.iupdatedate AND pp.supdatetime = tp.supdatetime) ")

        conteo21 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex " & _
        "WHERE NOT EXISTS (SELECT * FROM projectexplosion pex WHERE pex.iprojectid = tpex.iprojectid AND pex.iinputid = tpex.iinputid) ")

        conteo42 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt " & _
        "WHERE NOT EXISTS (SELECT * FROM projecttimber pt WHERE pt.iprojectid = tpt.iprojectid AND pt.iinputid = tpt.iinputid) ")

        conteo48 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac " & _
        "WHERE NOT EXISTS (SELECT * FROM projectadmincosts pac WHERE pac.iprojectid = tpac.iprojectid AND pac.iadmincostid = tpac.iadmincostid AND pac.iprojectid = " & iprojectid & ") ")

        'conteo22 = getSQLQueryAsInteger(0, "" & _
        '"SELECT COUNT(*) " & _
        '"FROM base " & _
        '"WHERE ibaseid = " & baseid & " AND " & _
        '"NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb WHERE base.ibaseid = tb.ibaseid) ")

        'conteo23 = getSQLQueryAsInteger(0, "" & _
        '"SELECT COUNT(*) " & _
        '"FROM baseindirectcosts " & _
        '"WHERE ibaseid = " & baseid & " AND " & _
        '"NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic WHERE baseindirectcosts.ibaseid = tbic.ibaseid AND baseindirectcosts.icostid = tbic.icostid) ")

        'conteo24 = getSQLQueryAsInteger(0, "" & _
        '"SELECT COUNT(*) " & _
        '"FROM basecards " & _
        '"WHERE ibaseid = " & baseid & " AND " & _
        '"NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) ")

        'conteo25 = getSQLQueryAsInteger(0, "" & _
        '"SELECT COUNT(*) " & _
        '"FROM basecardinputs " & _
        '"WHERE ibaseid = " & baseid & " AND " & _
        '"NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci WHERE basecardinputs.ibaseid = tbci.ibaseid AND basecardinputs.icardid = tbci.icardid AND basecardinputs.iinputid = tbci.iinputid) ")

        'conteo26 = getSQLQueryAsInteger(0, "" & _
        '"SELECT COUNT(*) " & _
        '"FROM basecardcompoundinputs " & _
        '"WHERE ibaseid = " & baseid & " AND " & _
        '"NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci WHERE basecardcompoundinputs.ibaseid = tbcci.ibaseid AND basecardcompoundinputs.icardid = tbcci.icardid AND basecardcompoundinputs.iinputid = tbcci.iinputid AND basecardcompoundinputs.icompoundinputid = tbcci.icompoundinputid) ")

        'conteo27 = getSQLQueryAsInteger(0, "" & _
        '"SELECT COUNT(*) " & _
        '"FROM baseprices " & _
        '"WHERE ibaseid = " & baseid & " AND " & _
        '"NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp WHERE baseprices.ibaseid = tbp.ibaseid AND baseprices.iinputid = tbp.iinputid AND baseprices.iupdatedate = tbp.iupdatedate AND baseprices.supdatetime = tbp.supdatetime) ")

        'conteo43 = getSQLQueryAsInteger(0, "" & _
        '"SELECT COUNT(*) " & _
        '"FROM basetimber " & _
        '"WHERE ibaseid = " & baseid & " AND " & _
        '"NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt WHERE basetimber.ibaseid = tbt.ibaseid AND basetimber.iinputid = tbt.iinputid) ")

        conteo28 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tp.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tp JOIN base p ON tp.ibaseid = p.ibaseid WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') ")

        conteo29 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpic.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tpic JOIN baseindirectcosts pic ON tpic.ibaseid = pic.ibaseid AND tpic.icostid = pic.icostid WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') ")

        conteo30 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpc.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tpc JOIN basecards pc ON tpc.ibaseid = pc.ibaseid AND tpc.icardid = pc.icardid WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') ")

        conteo31 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpci.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tpci JOIN basecardinputs pci ON tpci.ibaseid = pci.ibaseid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') ")

        conteo32 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpcci.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tpcci JOIN basecardcompoundinputs pcci ON tpcci.ibaseid = pcci.ibaseid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') ")

        conteo33 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpp.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tpp JOIN baseprices pp ON tpp.ibaseid = pp.ibaseid AND tpp.iinputid = pp.iinputid WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') ")

        conteo44 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(tpt.*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tpt JOIN basetimber pt ON tpt.ibaseid = pt.ibaseid AND tpt.iinputid = pt.iinputid WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') ")

        conteo34 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb " & _
        "WHERE NOT EXISTS (SELECT * FROM base b WHERE b.ibaseid = tb.ibaseid AND b.ibaseid = " & baseid & ") ")

        conteo35 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic " & _
        "WHERE NOT EXISTS (SELECT * FROM baseindirectcosts bic WHERE tbic.ibaseid = bic.ibaseid AND tbic.icostid = bic.icostid AND bic.ibaseid = " & baseid & ") ")

        conteo36 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc " & _
        "WHERE NOT EXISTS (SELECT * FROM basecards bc WHERE tbc.ibaseid = bc.ibaseid AND tbc.icardid = bc.icardid AND bc.ibaseid = " & baseid & ") ")

        conteo37 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardinputs bci WHERE tbci.ibaseid = bci.ibaseid AND tbci.icardid = bci.icardid AND tbci.iinputid = bci.iinputid AND bci.ibaseid = " & baseid & ") ")

        conteo38 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardcompoundinputs bcci WHERE tbcci.ibaseid = bcci.ibaseid AND tbcci.icardid = bcci.icardid AND tbcci.iinputid = bcci.iinputid AND tbcci.icompoundinputid = bcci.icompoundinputid AND bcci.ibaseid = " & baseid & ") ")

        conteo39 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp " & _
        "WHERE NOT EXISTS (SELECT * FROM baseprices bp WHERE tbp.ibaseid = bp.ibaseid AND tbp.iinputid = bp.iinputid AND tbp.iupdatedate = bp.iupdatedate AND tbp.supdatetime = bp.supdatetime AND bp.ibaseid = " & baseid & ") ")

        conteo45 = getSQLQueryAsInteger(0, "" & _
        "SELECT COUNT(*) " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt " & _
        "WHERE NOT EXISTS (SELECT * FROM basetimber bt WHERE tbt.ibaseid = bt.ibaseid AND tbt.iinputid = bt.iinputid AND bt.ibaseid = " & baseid & ") ")

        If conteo1 + conteo2 + conteo3 + conteo4 + conteo5 + conteo6 + conteo7 + conteo8 + conteo10 + conteo11 + conteo12 + conteo13 + conteo14 + conteo15 + conteo16 + conteo17 + conteo18 + conteo19 + conteo20 + conteo21 + conteo22 + conteo23 + conteo24 + conteo25 + conteo26 + conteo27 + conteo28 + conteo29 + conteo30 + conteo31 + conteo32 + conteo33 + conteo34 + conteo35 + conteo36 + conteo37 + conteo38 + conteo39 + conteo40 + conteo41 + conteo42 + conteo43 + conteo44 + conteo45 + conteo46 + conteo47 + conteo48 > 0 Then

            unsaved = True

        End If


        Dim incomplete As Boolean = False
        Dim msg As String = ""
        Dim result As Integer = 0

        If (validaDatosIniciales(True, True) = False Or validaCostosIndirectos(True) = False Or validaResumenDeTarjetas(True) = False) And Me.DialogResult <> Windows.Forms.DialogResult.OK And isHistoric = False Then
            incomplete = True
        End If


        Cursor.Current = System.Windows.Forms.Cursors.Default

        If incomplete = True Then
            result = MsgBox("Este Proyecto está incompleto. Si sales ahora, se perderán los cambios que hayas hecho." & Chr(13) & "¿Realmente deseas Salir de esta ventana ahora?", MsgBoxStyle.YesNo, "Confirmación Salida")
        ElseIf unsaved = True Then
            result = MsgBox("Tienes datos sin guardar! Tienes 3 opciones: " & Chr(13) & "Guardar los cambios (Sí), Regresar a revisar los cambios y guardarlos manualmente (Cancelar) o No guardarlos (No)", MsgBoxStyle.YesNoCancel, "Confirmación Salida")
        End If

        If result = MsgBoxResult.No And incomplete = True Then

            If viewPermission = True Then

                Cursor.Current = System.Windows.Forms.Cursors.Default
                e.Cancel = True
                Exit Sub

            End If

        ElseIf result = MsgBoxResult.Yes And incomplete = False And isHistoric = False Then


            Dim timesProjectIsOpen As Integer = 1

            timesProjectIsOpen = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid & "'")

            If timesProjectIsOpen > 1 And isEdit = True Then

                Cursor.Current = System.Windows.Forms.Cursors.Default

                If MsgBox("Otro usuario tiene abierto el mismo Proyecto. Guardar podría significar que esa persona perdiera sus cambios. ¿Deseas continuar guardando?", MsgBoxStyle.YesNo, "Confirmación Guardado") = MsgBoxResult.No Then

                    e.Cancel = True
                    Exit Sub

                Else

                    Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                End If

            ElseIf timesProjectIsOpen > 1 And isEdit = False Then

                Dim newIdAddition As Integer = 1

                Do While getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid + newIdAddition & "'") > 1 And isEdit = False
                    newIdAddition = newIdAddition + 1
                Loop

                'I got the new id (previousId + newIdAddition)

                Dim queriesNewId(33) As String

                queriesNewId(0) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition
                queriesNewId(1) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts"
                queriesNewId(2) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards"
                queriesNewId(3) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs"
                queriesNewId(4) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs"
                queriesNewId(5) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices"
                queriesNewId(6) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion"
                queriesNewId(7) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber"
                queriesNewId(8) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts"
                queriesNewId(9) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition
                queriesNewId(10) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts"
                queriesNewId(11) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards"
                queriesNewId(12) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs"
                queriesNewId(13) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs"
                queriesNewId(14) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices"
                queriesNewId(15) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber"
                queriesNewId(16) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardsAux"
                queriesNewId(17) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & " SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(18) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(19) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(20) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(21) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(22) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(23) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(24) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(25) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
                queriesNewId(26) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & " SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
                queriesNewId(27) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
                queriesNewId(28) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
                queriesNewId(29) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
                queriesNewId(30) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
                queriesNewId(31) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
                queriesNewId(32) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid

                If executeTransactedSQLCommand(0, queriesNewId) = True Then
                    iprojectid = iprojectid + newIdAddition
                End If

            End If

            Dim queries(50) As String

            queries(0) = "" & _
            "DELETE " & _
            "FROM projects " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp WHERE projects.iprojectid = tp.iprojectid) "

            queries(1) = "" & _
            "DELETE " & _
            "FROM projectindirectcosts " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic WHERE projectindirectcosts.iprojectid = tpic.iprojectid AND projectindirectcosts.icostid = tpic.icostid) "

            queries(2) = "" & _
            "DELETE " & _
            "FROM projectcards " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc WHERE projectcards.iprojectid = tpc.iprojectid AND projectcards.icardid = tpc.icardid) "

            queries(3) = "" & _
            "DELETE " & _
            "FROM projectcardinputs " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci WHERE projectcardinputs.iprojectid = tpci.iprojectid AND projectcardinputs.icardid = tpci.icardid AND projectcardinputs.iinputid = tpci.iinputid) "

            queries(4) = "" & _
            "DELETE " & _
            "FROM projectcardcompoundinputs " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci WHERE projectcardcompoundinputs.iprojectid = tpcci.iprojectid AND projectcardcompoundinputs.icardid = tpcci.icardid AND projectcardcompoundinputs.iinputid = tpcci.iinputid AND projectcardcompoundinputs.icompoundinputid = tpcci.icompoundinputid) "

            queries(5) = "" & _
            "DELETE " & _
            "FROM projectprices " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp WHERE projectprices.iprojectid = tpp.iprojectid AND projectprices.iinputid = tpp.iinputid AND projectprices.iupdatedate = tpp.iupdatedate AND projectprices.supdatetime = tpp.supdatetime) "

            queries(6) = "" & _
            "DELETE " & _
            "FROM projectexplosion " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex WHERE projectexplosion.iprojectid = tpex.iprojectid AND projectexplosion.iinputid = tpex.iinputid) "

            queries(7) = "" & _
            "DELETE " & _
            "FROM projecttimber " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt WHERE projecttimber.iprojectid = tpt.iprojectid AND projecttimber.iinputid = tpt.iinputid) "

            queries(47) = "" & _
            "DELETE " & _
            "FROM projectadmincosts " & _
            "WHERE iprojectid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac WHERE projectadmincosts.iprojectid = tpac.iprojectid AND projectadmincosts.iadmincostid = tpac.iadmincostid) "

            queries(8) = "" & _
            "UPDATE projects p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp ON tp.iprojectid = p.iprojectid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.iprojectdate = tp.iprojectdate, p.sprojecttime = tp.sprojecttime, p.sprojectname = tp.sprojectname, p.sprojecttype = tp.sprojecttype, p.ipeopleid = tp.ipeopleid, p.sprojectcompanyname = tp.sprojectcompanyname, p.dprojectlength = tp.dprojectlength, p.dprojectwidth = tp.dprojectwidth, p.dterrainlength = tp.dterrainlength, p.dterrainwidth = tp.dterrainwidth, p.sterrainlocation = tp.sterrainlocation, p.sprojectfileslocation = tp.sprojectfileslocation, p.slastmodelapplied = tp.slastmodelapplied, p.dprojectindirectpercentagedefault = tp.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault = tp.dprojectgainpercentagedefault, p.dprojectbuildingcommission = tp.dprojectbuildingcommission, p.dprojectclosingcommission = tp.dprojectclosingcommission, p.dprojectrealbuildingcommission = tp.dprojectrealbuildingcommission, p.dprojectrealclosingcommission = tp.dprojectrealclosingcommission, p.dprojectIVApercentage = tp.dprojectIVApercentage, p.iprojectstarteddate = tp.iprojectstarteddate, p.sprojectstartedtime = tp.sprojectstartedtime, p.iprojectforecastedclosingdate = tp.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime = tp.sprojectforecastedclosingtime, p.iprojectrealclosingdate = tp.iprojectrealclosingdate, p.sprojectrealclosingtime = tp.sprojectrealclosingtime, p.sprojectTaxApplicable = tp.sprojectTaxApplicable WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

            queries(9) = "" & _
            "UPDATE projectindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic ON tpic.iprojectid = pic.iprojectid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sprojectcostname = tpic.sprojectcostname, pic.dprojectcost = tpic.dprojectcost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

            queries(10) = "" & _
            "UPDATE projectcards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc ON tpc.iprojectid = pc.iprojectid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

            queries(11) = "" & _
            "UPDATE projectcardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci ON tpci.iprojectid = pci.iprojectid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

            queries(12) = "" & _
            "UPDATE projectcardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci ON tpcci.iprojectid = pcci.iprojectid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.iinputid = tpcci.iinputid, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

            queries(13) = "" & _
            "UPDATE projectprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp ON tpp.iprojectid = pp.iprojectid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

            queries(14) = "" & _
            "UPDATE projectexplosion pex JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex ON tpex.iprojectid = pex.iprojectid AND tpex.iinputid = pex.iinputid SET pex.iupdatedate = tpex.iupdatedate, pex.supdatetime = tpex.supdatetime, pex.supdateusername = tpex.supdateusername, pex.dinputrealqty = tpex.dinputrealqty WHERE STR_TO_DATE(CONCAT(tpex.iupdatedate, ' ', tpex.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pex.iupdatedate, ' ', pex.supdatetime), '%Y%c%d %T') "

            queries(15) = "" & _
            "UPDATE projecttimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt ON tpt.iprojectid = pt.iprojectid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

            queries(48) = "" & _
            "UPDATE projectadmincosts pac JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac ON tpac.iprojectid = pac.iprojectid AND tpac.iadmincostid = pac.iadmincostid SET pac.iupdatedate = tpac.iupdatedate, pac.supdatetime = tpac.supdatetime, pac.supdateusername = tpac.supdateusername, pac.sprojectadmincostname = tpac.sprojectadmincostname, pac.dprojectadmincost = tpac.dprojectadmincost WHERE STR_TO_DATE(CONCAT(tpac.iupdatedate, ' ', tpac.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pac.iupdatedate, ' ', pac.supdatetime), '%Y%c%d %T') "

            queries(16) = "" & _
            "INSERT INTO projects " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp " & _
            "WHERE NOT EXISTS (SELECT * FROM projects p WHERE p.iprojectid = tp.iprojectid AND p.iprojectid = " & iprojectid & ") "

            queries(17) = "" & _
            "INSERT INTO projectindirectcosts " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic " & _
            "WHERE NOT EXISTS (SELECT * FROM projectindirectcosts pic WHERE pic.iprojectid = tpic.iprojectid AND pic.icostid = tpic.icostid AND pic.iprojectid = " & iprojectid & ") "

            queries(18) = "" & _
            "INSERT INTO projectcards " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc " & _
            "WHERE NOT EXISTS (SELECT * FROM projectcards pc WHERE pc.iprojectid = tpc.iprojectid AND pc.icardid = tpc.icardid AND pc.iprojectid = " & iprojectid & ") "

            queries(19) = "" & _
            "INSERT INTO projectcardinputs " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci " & _
            "WHERE NOT EXISTS (SELECT * FROM projectcardinputs pci WHERE pci.iprojectid = tpci.iprojectid AND pci.icardid = tpci.icardid AND pci.iinputid = tpci.iinputid AND pci.iprojectid = " & iprojectid & ") "

            queries(20) = "" & _
            "INSERT INTO projectcardcompoundinputs " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci " & _
            "WHERE NOT EXISTS (SELECT * FROM projectcardcompoundinputs pcci WHERE pcci.iprojectid = tpcci.iprojectid AND pcci.icardid = tpcci.icardid AND pcci.iinputid = tpcci.iinputid AND pcci.icompoundinputid = tpcci.icompoundinputid AND pcci.iprojectid = " & iprojectid & ") "

            queries(21) = "" & _
            "INSERT INTO projectprices " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp " & _
            "WHERE NOT EXISTS (SELECT * FROM projectprices pp WHERE pp.iprojectid = tpp.iprojectid AND pp.iinputid = tpp.iinputid AND pp.iupdatedate = tpp.iupdatedate AND pp.supdatetime = tpp.supdatetime) "

            queries(22) = "" & _
            "INSERT INTO projectexplosion " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex " & _
            "WHERE NOT EXISTS (SELECT * FROM projectexplosion pex WHERE pex.iprojectid = tpex.iprojectid AND pex.iinputid = tpex.iinputid) "

            queries(23) = "" & _
            "INSERT INTO projecttimber " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt " & _
            "WHERE NOT EXISTS (SELECT * FROM projecttimber pt WHERE pt.iprojectid = tpt.iprojectid AND pt.iinputid = tpt.iinputid) "

            queries(49) = "" & _
            "INSERT INTO projectadmincosts " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac " & _
            "WHERE NOT EXISTS (SELECT * FROM projectadmincosts pac WHERE pac.iprojectid = tpac.iprojectid AND pac.iadmincostid = tpac.iadmincostid AND pac.iprojectid = " & iprojectid & ") "

            queries(24) = "" & _
            "DELETE " & _
            "FROM base " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb WHERE base.ibaseid = tb.ibaseid) "

            queries(25) = "" & _
            "DELETE " & _
            "FROM baseindirectcosts " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic WHERE baseindirectcosts.ibaseid = tbic.ibaseid AND baseindirectcosts.icostid = tbic.icostid) "

            queries(26) = "" & _
            "DELETE " & _
            "FROM basecards " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

            queries(27) = "" & _
            "DELETE " & _
            "FROM basecards " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

            queries(28) = "" & _
            "DELETE " & _
            "FROM basecardinputs " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci WHERE basecardinputs.ibaseid = tbci.ibaseid AND basecardinputs.icardid = tbci.icardid AND basecardinputs.iinputid = tbci.iinputid) "

            queries(29) = "" & _
            "DELETE " & _
            "FROM basecardcompoundinputs " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci WHERE basecardcompoundinputs.ibaseid = tbcci.ibaseid AND basecardcompoundinputs.icardid = tbcci.icardid AND basecardcompoundinputs.iinputid = tbcci.iinputid AND basecardcompoundinputs.icompoundinputid = tbcci.icompoundinputid) "

            queries(30) = "" & _
            "DELETE " & _
            "FROM baseprices " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp WHERE baseprices.ibaseid = tbp.ibaseid AND baseprices.iinputid = tbp.iinputid AND baseprices.iupdatedate = tbp.iupdatedate AND baseprices.supdatetime = tbp.supdatetime) "

            queries(31) = "" & _
            "DELETE " & _
            "FROM basetimber " & _
            "WHERE ibaseid = " & iprojectid & " AND " & _
            "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt WHERE basetimber.ibaseid = tbt.ibaseid AND basetimber.iinputid = tbt.iinputid) "

            queries(32) = "" & _
            "UPDATE base p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tp ON tp.ibaseid = p.ibaseid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.sbasefileslocation = tp.sbasefileslocation, p.dbaseindirectpercentagedefault = tp.dbaseindirectpercentagedefault, p.dbasegainpercentagedefault = tp.dbasegainpercentagedefault, p.dbaseIVApercentage = tp.dbaseIVApercentage WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

            queries(33) = "" & _
            "UPDATE baseindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tpic ON tpic.ibaseid = pic.ibaseid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sbasecostname = tpic.sbasecostname, pic.dbasecost = tpic.dbasecost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

            queries(34) = "" & _
            "UPDATE basecards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tpc ON tpc.ibaseid = pc.ibaseid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

            queries(35) = "" & _
            "UPDATE basecardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tpci ON tpci.ibaseid = pci.ibaseid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

            queries(36) = "" & _
            "UPDATE basecardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tpcci ON tpcci.ibaseid = pcci.ibaseid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

            queries(37) = "" & _
            "UPDATE baseprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tpp ON tpp.ibaseid = pp.ibaseid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

            queries(38) = "" & _
            "UPDATE basetimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tpt ON tpt.ibaseid = pt.ibaseid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

            queries(39) = "" & _
            "INSERT INTO base " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb " & _
            "WHERE NOT EXISTS (SELECT * FROM base b WHERE b.ibaseid = tb.ibaseid AND b.ibaseid = " & baseid & ") "

            queries(40) = "" & _
            "INSERT INTO baseindirectcosts " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic " & _
            "WHERE NOT EXISTS (SELECT * FROM baseindirectcosts bic WHERE tbic.ibaseid = bic.ibaseid AND tbic.icostid = bic.icostid AND bic.ibaseid = " & baseid & ") "

            queries(41) = "" & _
            "INSERT INTO basecards " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc " & _
            "WHERE NOT EXISTS (SELECT * FROM basecards bc WHERE tbc.ibaseid = bc.ibaseid AND tbc.icardid = bc.icardid AND bc.ibaseid = " & baseid & ") "

            queries(42) = "" & _
            "INSERT INTO basecardinputs " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci " & _
            "WHERE NOT EXISTS (SELECT * FROM basecardinputs bci WHERE tbci.ibaseid = bci.ibaseid AND tbci.icardid = bci.icardid AND tbci.iinputid = bci.iinputid AND bci.ibaseid = " & baseid & ") "

            queries(43) = "" & _
            "INSERT INTO basecardcompoundinputs " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci " & _
            "WHERE NOT EXISTS (SELECT * FROM basecardcompoundinputs bcci WHERE tbcci.ibaseid = bcci.ibaseid AND tbcci.icardid = bcci.icardid AND tbcci.iinputid = bcci.iinputid AND tbcci.icompoundinputid = bcci.icompoundinputid AND bcci.ibaseid = " & baseid & ") "

            queries(44) = "" & _
            "INSERT INTO baseprices " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp " & _
            "WHERE NOT EXISTS (SELECT * FROM baseprices bp WHERE tbp.ibaseid = bp.ibaseid AND tbp.iinputid = bp.iinputid AND tbp.iupdatedate = bp.iupdatedate AND tbp.supdatetime = bp.supdatetime AND bp.ibaseid = " & baseid & ") "

            queries(45) = "" & _
            "INSERT INTO basetimber " & _
            "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt " & _
            "WHERE NOT EXISTS (SELECT * FROM basetimber bt WHERE tbt.ibaseid = bt.ibaseid AND tbt.iinputid = bt.iinputid AND bt.ibaseid = " & baseid & ") "

            queries(46) = "INSERT IGNORE INTO logs VALUES (" & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "', " & susersession & ", '" & suserip & "', '" & susermachinename & "', 'Guardó cambios al Proyecto " & iprojectid & ": " & txtNombreProyecto.Text.Replace("--", "").Replace("'", "") & "', 'OK')"

            If executeTransactedSQLCommand(0, queries) = True Then
                MsgBox("Guardado exitosamente", MsgBoxStyle.OkOnly, "")
            Else
                MsgBox("Hubo un error al Guardar. Probablemente un error de Red. Intenta nuevamente", MsgBoxStyle.OkOnly, "")
                Cursor.Current = System.Windows.Forms.Cursors.Default
                e.Cancel = True
                Exit Sub
            End If

            wasCreated = True

        ElseIf result = MsgBoxResult.Cancel Then

            Cursor.Current = System.Windows.Forms.Cursors.Default
            e.Cancel = True
            Exit Sub

        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim fecha As Integer = getMySQLDate()
        Dim hora As String = getAppTime()

        Dim queriesDelete(20) As String

        queriesDelete(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid
        queriesDelete(1) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts"
        queriesDelete(2) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards"
        queriesDelete(3) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
        queriesDelete(4) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs"
        queriesDelete(5) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs"
        queriesDelete(6) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices"
        queriesDelete(7) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion"
        queriesDelete(8) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber"
        queriesDelete(9) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts"
        queriesDelete(10) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid
        queriesDelete(11) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts"
        queriesDelete(12) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards"
        queriesDelete(13) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardsAux"
        queriesDelete(14) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs"
        queriesDelete(15) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs"
        queriesDelete(16) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices"
        queriesDelete(17) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber"
        queriesDelete(18) = "INSERT IGNORE INTO logs VALUES (" & fecha & ", '" & hora & "', '" & susername & "', " & susersession & ", '" & suserip & "', '" & susermachinename & "', 'Cerró el Proyecto " & iprojectid & ": " & txtNombreProyecto.Text.Replace("--", "").Replace("'", "") & "', 'OK')"
        queriesDelete(19) = "INSERT INTO recentlyopenedfiles VALUES ('" & susername & "', '" & susersession & "', 'Project', 'Proyecto', '" & iprojectid & "', '" & txtNombreProyecto.Text.Replace("'", "").Replace("--", "") & "', 0, " & fecha & ", '" & hora & "', '" & susername & "')"

        executeTransactedSQLCommand(0, queriesDelete)

        verifySuspiciousData()

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub AgregarProyecto_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown




        If e.KeyCode = Keys.F5 Then

            If My.Computer.Info.OSFullName.StartsWith("Microsoft Windows 7") = True Then
                NotifyIcon1.Icon = Oversight.My.Resources.winmineVista16x16
            Else
                NotifyIcon1.Icon = Oversight.My.Resources.winmineXP16x16
            End If

            NotifyIcon1.Text = "Buscaminas"

            NotifyIcon1.Visible = True

            Me.Visible = False
            Do While Not fDone
                System.Windows.Forms.Application.DoEvents()
            Loop
            fDone = False
            Me.Visible = True

        End If

    End Sub


    Private Sub AgregarProyecto_Resize(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Resize

        If tcProyecto.SelectedTab.Text = "Reportes" Then

            If viewReports = False Then
                tcProyecto.SelectedTab = tpDatosIniciales
            End If

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            Dim dsReportes As DataSet
            dsReportes = getSQLQueryAsDataset(0, "SELECT * FROM projectreports WHERE iprojectid = " & iprojectid)

            If dsReportes.Tables(0).Rows.Count < 1 Then
                Exit Sub
            End If

            tcReportes.TabPages.Clear()

            For i = 0 To dsReportes.Tables(0).Rows.Count - 1

                If dsReportes.Tables(0).Rows(i).Item("sreportquery") = "" Then
                    Continue For
                End If

                Dim tb As New TabPage
                tb.Name = dsReportes.Tables(0).Rows(i).Item("stabid")
                tb.Text = dsReportes.Tables(0).Rows(i).Item("stabname")
                tb.Dock = DockStyle.None
                tb.Location = New Point(0, 24)

                dgvReporte = New DataGridView
                btnExportarReporte = New Button

                dgvReporte.Location = New Drawing.Point(5, 5)

                dgvReporte.Height = tcReportes.Height - 40
                dgvReporte.Width = tcReportes.Width - 48

                btnExportarReporte.Enabled = True
                btnExportarReporte.Visible = True
                btnExportarReporte.Image = Global.Oversight.My.Resources.Resources.excel12x12
                btnExportarReporte.Location = New System.Drawing.Point(5 + dgvReporte.Width + 4, 5)
                btnExportarReporte.Name = "btnExportarReporte"
                btnExportarReporte.Size = New System.Drawing.Size(28, 23)
                btnExportarReporte.TabIndex = 0
                btnExportarReporte.TabStop = False
                btnExportarReporte.UseVisualStyleBackColor = True
                btnExportarReporte.Text = ""

                tb.Controls.Add(Me.btnExportarReporte)

                Dim dsReportesColumnsSizes As DataSet
                dsReportesColumnsSizes = getSQLQueryAsDataset(0, "SELECT icolumnid, columnwidth FROM projectreportcolumnssizes WHERE iprojectid = " & iprojectid & " AND ireportid = " & dsReportes.Tables(0).Rows(i).Item("ireportid"))

                executeSQLCommand(0, dsReportes.Tables(0).Rows(i).Item("sreportbeforequery"))

                setDataGridView(dgvReporte, dsReportes.Tables(0).Rows(i).Item("sreportquery"), True)

                executeSQLCommand(0, dsReportes.Tables(0).Rows(i).Item("sreportafterquery"))

                dgvReporte.AllowUserToAddRows = False
                dgvReporte.AllowUserToDeleteRows = False
                dgvReporte.MultiSelect = False
                dgvReporte.SelectionMode = DataGridViewSelectionMode.FullRowSelect
                dgvReporte.RowHeadersVisible = False
                dgvReporte.AutoResizeColumns(DataGridViewAutoSizeColumnsMode.None)

                Dim alto As Integer = 20

                Try
                    alto = dsReportes.Tables(0).Rows(i).Item("rowheight")
                Catch ex As Exception

                End Try

                dgvReporte.ColumnHeadersHeight = alto

                tb.Controls.Add(dgvReporte)

                tcReportes.TabPages.Add(tb)

                If dsReportesColumnsSizes.Tables(0).Rows.Count > 0 Then

                    For j = 0 To dsReportesColumnsSizes.Tables(0).Rows.Count - 1

                        Dim columna As Integer = 0
                        Dim ancho As Integer = 70

                        Try
                            columna = dsReportesColumnsSizes.Tables(0).Rows(j).Item("icolumnid")
                            ancho = dsReportesColumnsSizes.Tables(0).Rows(j).Item("columnwidth")
                        Catch ex As Exception

                        End Try

                        dgvReporte.Columns(j).Width = ancho

                    Next j

                End If

                dsReportesColumnsSizes.Clear()
                dsReportesColumnsSizes.Dispose()

            Next i

            currentSelectedTabtcReportes = dsReportes.Tables(0).Rows(0).Item("stabname")

        End If

    End Sub


    Private Sub AgregarProyecto_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Me.KeyPreview = True

        closeTimedOutConnections()
        checkForKickoutsAndTimedOuts()
        checkMessages(susername, Me.Location.X, Me.Location.Y)
        setControlsByPermissions(Me.Name, susername)

        loadProgramSettings()

        Dim timesProjectIsOpen As Integer = 0

        timesProjectIsOpen = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid & "'")

        If timesProjectIsOpen > 0 And isEdit = True Then

            Cursor.Current = System.Windows.Forms.Cursors.Default

            If MsgBox("Otro usuario tiene abierto el mismo Proyecto. Esto podría causar que alguno de ustedes perdiera los cambios que hiciera. ¿Deseas seguir abriendo el Proyecto?", MsgBoxStyle.YesNo, "Confirmación Apertura") = MsgBoxResult.No Then

                Me.DialogResult = Windows.Forms.DialogResult.Cancel
                Me.Close()

                Cursor.Current = System.Windows.Forms.Cursors.Default
                Exit Sub

            Else

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            End If

        End If

        Dim baseid As Integer = 0

        baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

        If baseid = 0 Then
            baseid = 99999
        End If

        If isRecover = False Then

            Dim queriesCreation(32) As String

            queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid
            queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " ( `iprojectid` int(11) NOT NULL AUTO_INCREMENT, `iprojectdate` int(11) NOT NULL, `sprojecttime` varchar(11) CHARACTER SET latin1 NOT NULL, `sprojectname` varchar(200) CHARACTER SET latin1 NOT NULL, `sprojecttype` varchar(200) CHARACTER SET latin1 NOT NULL, `ipeopleid` int(11) NOT NULL COMMENT 'Client Id', `sprojectcompanyname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dprojectwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `sterrainlocation` varchar(400) CHARACTER SET latin1 NOT NULL, `sprojectfileslocation` varchar(1000) CHARACTER SET latin1 NOT NULL, `slastmodelapplied` varchar(200) CHARACTER SET latin1 NOT NULL, `dprojectindirectpercentagedefault` decimal(20,5) NOT NULL, `dprojectgainpercentagedefault` decimal(20,5) NOT NULL, `dprojectbuildingcommission` decimal(20,5) NOT NULL, `dprojectclosingcommission` decimal(20,5) NOT NULL, `dprojectrealbuildingcommission` decimal(20,5) DEFAULT NULL, `dprojectrealclosingcommission` decimal(20,5) DEFAULT NULL, `dprojectIVApercentage` decimal(20,5) NOT NULL DEFAULT '0.16000', `iprojectstarteddate` int(11) DEFAULT NULL, `sprojectstartedtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectforecastedclosingdate` int(11) DEFAULT NULL, `sprojectforecastedclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectrealclosingdate` int(11) DEFAULT NULL, `sprojectrealclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `sprojectTaxApplicable` int(1) DEFAULT 1, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`), KEY `peopleid` (`ipeopleid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(2) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts"
            queriesCreation(3) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts ( `iprojectid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sprojectcostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectcost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icostid`), KEY `projectid` (`iprojectid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(4) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards"
            queriesCreation(5) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `legacycategoryid` (`scardlegacycategoryid`), KEY `legacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(6) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs"
            queriesCreation(7) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(8) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs"
            queriesCreation(9) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(10) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices"
            queriesCreation(11) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `inputid` (`iinputid`), KEY `projectid` (`iprojectid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(12) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion"
            queriesCreation(13) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputrealqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(14) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber"
            queriesCreation(15) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(16) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts"
            queriesCreation(17) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts ( `iprojectid` int(11) NOT NULL, `iadmincostid` int(11) NOT NULL, `sprojectadmincostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectadmincost` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iadmincostid`), KEY `projectid` (`iprojectid`), KEY `admincostid` (`iadmincostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(18) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs"
            queriesCreation(19) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(20) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs"
            queriesCreation(21) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(22) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards"
            queriesCreation(23) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `cardlegacycategoryid` (`scardlegacycategoryid`), KEY `cardlegacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(24) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts"
            queriesCreation(25) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts ( `ibaseid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sbasecostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dbasecost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icostid`), KEY `baseid` (`ibaseid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(26) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices"
            queriesCreation(27) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `baseid` (`ibaseid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(28) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid
            queriesCreation(29) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " ( `ibaseid` int(11) NOT NULL AUTO_INCREMENT, `sbasefileslocation` varchar(400) CHARACTER SET latin1 NOT NULL, `dbaseindirectpercentagedefault` decimal(20,5) NOT NULL, `dbasegainpercentagedefault` decimal(20,5) NOT NULL, `dbaseIVApercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesCreation(30) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber"
            queriesCreation(31) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            executeTransactedSQLCommand(0, queriesCreation)

        End If

        If isEdit = False Then

            'Proyecto nuevo

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            tcProyecto.SelectedTab = tpDatosIniciales

            iprojectmodifieddate = getMySQLDate()
            sprojectmodifiedtime = getAppTime()
            dtFechaPresupuesto.Value = convertYYYYMMDDtoDDhyphenMMhyphenYYYY(getMySQLDate()) & " " & sprojectmodifiedtime
            txtNombreProyecto.Text = ""
            txtNombreCliente.Text = ""
            txtNombreEmpresa.Text = ""
            rbCasa.Checked = True
            rbOficina.Checked = False
            rbOtro.Checked = False

            txtLugar.Text = ""
            txtRuta.Text = ""
            txtPrecioProyectadoSubTotal.Text = ""
            txtIVA.Text = ""
            txtPrecioProyectadoTotal.Text = ""
            txtPrecioPresupuestado.Text = ""
            txtCostoPresupuestado.Text = ""
            txtUtilidadPrevistaDeEjecucion.Text = ""
            txtImporteComisionDeObraPresupuestada.Text = ""
            txtImportePorCierreDeOperacionPresupuestada.Text = ""
            txtUtilidadFinalPrevista.Text = ""
            dtFechaTerminoPrevista.Value = Now
            txtEntradas.Text = ""
            txtCostoRealDeLaObra.Text = ""
            txtUtilidadDeEjecucionDeObraReal.Text = ""
            txtImporteComisiónDeObraReal.Text = ""
            txtImportePorCierreDeOperacionReal.Text = ""
            txtUtilidadFinalReal.Text = ""
            dtFechaTerminoReal.Value = Now
            btnRealizarObra.Visible = True
            btnTerminarObra.Visible = True

            btnRevisiones.Enabled = False

            Me.Text = "Proyecto Nuevo"

            txtNombreProyecto.Select()
            txtNombreProyecto.Focus()

            Cursor.Current = System.Windows.Forms.Cursors.Default

        Else

            'Revisar/Modificar


            'Tab de Datos Iniciales


            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            Dim alertaProyectoIncompleto As Boolean = False
            Dim mensajeAlerta As String = ""

            If isRecover = False Then

                Dim queriesInsert(16) As String

                queriesInsert(0) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SELECT * FROM projects WHERE iprojectid = " & iprojectid
                queriesInsert(1) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts SELECT * FROM projectindirectcosts WHERE iprojectid = " & iprojectid
                queriesInsert(2) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SELECT * FROM projectcards WHERE iprojectid = " & iprojectid
                queriesInsert(3) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs SELECT * FROM projectcardinputs WHERE iprojectid = " & iprojectid
                queriesInsert(4) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs SELECT * FROM projectcardcompoundinputs WHERE iprojectid = " & iprojectid
                queriesInsert(5) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices SELECT * FROM projectprices WHERE iprojectid = " & iprojectid
                queriesInsert(6) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SELECT * FROM projectexplosion WHERE iprojectid = " & iprojectid
                queriesInsert(7) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber SELECT * FROM projecttimber WHERE iprojectid = " & iprojectid
                queriesInsert(8) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts SELECT * FROM projectadmincosts WHERE iprojectid = " & iprojectid
                queriesInsert(9) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs SELECT * FROM basecardcompoundinputs WHERE ibaseid = " & baseid
                queriesInsert(10) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs SELECT * FROM basecardinputs WHERE ibaseid = " & baseid
                queriesInsert(11) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards SELECT * FROM basecards WHERE ibaseid = " & baseid
                queriesInsert(12) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts SELECT * FROM baseindirectcosts WHERE ibaseid = " & baseid
                queriesInsert(13) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices SELECT * FROM baseprices WHERE ibaseid = " & baseid
                queriesInsert(14) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " SELECT * FROM base WHERE ibaseid = " & baseid
                queriesInsert(15) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber SELECT * FROM basetimber WHERE ibaseid = " & baseid

                executeTransactedSQLCommand(0, queriesInsert)

            End If


            Dim dsProyecto As DataSet
            dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
            "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
            "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
            "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, " & _
            "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
            "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)


            Try

                If dsProyecto.Tables(0).Rows.Count > 0 Then

                    iprojectmodifieddate = dsProyecto.Tables(0).Rows(0).Item("iprojectdate")
                    sprojectmodifiedtime = dsProyecto.Tables(0).Rows(0).Item("sprojecttime")

                    dtFechaPresupuesto.Value = convertYYYYMMDDtoDDhyphenMMhyphenYYYY(dsProyecto.Tables(0).Rows(0).Item("iprojectdate")) & " " & dsProyecto.Tables(0).Rows(0).Item("sprojecttime")
                    txtNombreProyecto.Text = dsProyecto.Tables(0).Rows(0).Item("sprojectname")

                    If txtNombreProyecto.Text.Trim = "" And alertaProyectoIncompleto = False Then
                        alertaProyectoIncompleto = True
                        mensajeAlerta = "¿Podrías ponerle nombre al Proyecto?"
                    Else
                        Me.Text = "Proyecto " & txtNombreProyecto.Text
                    End If

                    Try
                        txtNombreCliente.Text = dsProyecto.Tables(0).Rows(0).Item("speoplefullname")
                    Catch ex As Exception

                    End Try

                    Try
                        iclientid = CInt(dsProyecto.Tables(0).Rows(0).Item("ipeopleid"))
                    Catch ex As Exception

                    End Try

                    If (txtNombreCliente.Text.Trim = "" And alertaProyectoIncompleto = False) Or (iclientid = 0 And alertaProyectoIncompleto = False) Then
                        alertaProyectoIncompleto = True
                        mensajeAlerta = "¿Podrías asignarle un cliente al Proyecto?"
                    End If

                    Dim tipoConstruccion As String = dsProyecto.Tables(0).Rows(0).Item("sprojecttype")

                    If tipoConstruccion = "Casa Habitación" Then
                        rbCasa.Checked = True
                    ElseIf tipoConstruccion = "Oficina" Then
                        rbOficina.Checked = True
                    ElseIf tipoConstruccion = "Otro" Then
                        rbOtro.Checked = True
                    End If

                    If rbCasa.Checked = False And rbOficina.Checked = False And rbOtro.Checked = False And alertaProyectoIncompleto = False Then
                        alertaProyectoIncompleto = True
                        mensajeAlerta = "¿Podrías escoger de qué tipo de Construcción se trata el Proyecto?"
                    End If

                    Try
                        txtNombreEmpresa.Text = dsProyecto.Tables(0).Rows(0).Item("sprojectcompanyname")
                    Catch ex As Exception

                    End Try

                    If txtNombreEmpresa.Text.Trim = "" And rbOficina.Checked = True And alertaProyectoIncompleto = False Then
                        alertaProyectoIncompleto = True
                        mensajeAlerta = "¿Podrías escribir la Empresa Cliente a la que se le hará el Proyecto?"
                    End If

                    slastmodelapplied = dsProyecto.Tables(0).Rows(0).Item("slastmodelapplied")

                    txtLongitudVivienda.Text = dsProyecto.Tables(0).Rows(0).Item("dprojectlength")
                    txtAnchoVivienda.Text = dsProyecto.Tables(0).Rows(0).Item("dprojectwidth")

                    If (txtLongitudVivienda.Text.Trim = "" Or txtAnchoVivienda.Text.Trim = "" Or txtLongitudVivienda.Text.Trim = "0" Or txtAnchoVivienda.Text.Trim = "0") And alertaProyectoIncompleto = False Then
                        alertaProyectoIncompleto = True
                        mensajeAlerta = "¿Qué medidas tiene la construcción del Proyecto?"
                    End If

                    Try
                        txtLongitudTerreno.Text = dsProyecto.Tables(0).Rows(0).Item("dterrainlength")
                        txtAnchoTerreno.Text = dsProyecto.Tables(0).Rows(0).Item("dterrainwidth")
                    Catch ex As Exception

                    End Try

                    If (txtLongitudTerreno.Text.Trim = "" Or txtAnchoTerreno.Text.Trim = "" Or txtLongitudTerreno.Text.Trim = "0" Or txtAnchoTerreno.Text.Trim = "0") And alertaProyectoIncompleto = False Then
                        alertaProyectoIncompleto = True
                        mensajeAlerta = "¿Qué medidas tiene el terreno donde se construirá el Proyecto?"
                    End If

                    Try
                        txtLugar.Text = dsProyecto.Tables(0).Rows(0).Item("sterrainlocation")
                    Catch ex As Exception

                    End Try

                    If txtLugar.Text.Trim = "" And alertaProyectoIncompleto = False Then
                        alertaProyectoIncompleto = True
                        mensajeAlerta = "¿En dónde se va a llevar a cabo el Proyecto?"
                    End If

                    Try
                        txtRuta.Text = dsProyecto.Tables(0).Rows(0).Item("sprojectfileslocation")
                        txtRuta.Text = txtRuta.Text.Replace("/", "\")
                    Catch ex As Exception

                    End Try

                    Dim porcentajeIVA As Double
                    Try
                        porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
                    Catch ex As Exception
                        porcentajeIVA = 0.0
                    End Try

                    txtPorcentajeIVA.Text = porcentajeIVA * 100




                    'Revisión de Completitud de Datos


                    If alertaProyectoIncompleto = True Then

                        Select Case mensajeAlerta

                            Case "¿Podrías ponerle nombre al Proyecto?"

                                tcProyecto.SelectedTab = tpDatosIniciales
                                txtNombreProyecto.Select()
                                txtNombreProyecto.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿Podrías asignarle un cliente al Proyecto?"

                                tcProyecto.SelectedTab = tpDatosIniciales
                                txtNombreCliente.Select()
                                txtNombreCliente.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿Podrías escoger de qué tipo de Construcción se trata el Proyecto?"

                                tcProyecto.SelectedTab = tpDatosIniciales
                                rbCasa.Select()
                                rbCasa.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿Podrías escribir la Empresa Cliente a la que se le hará el Proyecto?"

                                tcProyecto.SelectedTab = tpDatosIniciales
                                txtNombreEmpresa.Select()
                                txtNombreEmpresa.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿Qué medidas tiene la construcción del Proyecto?"

                                tcProyecto.SelectedTab = tpDatosIniciales
                                txtLongitudVivienda.Select()
                                txtLongitudVivienda.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿En dónde se va a llevar a cabo el Proyecto?"

                                tcProyecto.SelectedTab = tpDatosIniciales
                                txtLugar.Select()
                                txtLugar.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿Qué medidas tiene el terreno donde se construirá el Proyecto?"

                                tcProyecto.SelectedTab = tpDatosIniciales
                                txtLongitudTerreno.Select()
                                txtLongitudTerreno.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿Podrías hacer el cálculo de costos indirectos del Proyecto?"

                                tcProyecto.SelectedTab = tpCostosIndirectos
                                dgvCostosIndirectos.Select()
                                dgvCostosIndirectos.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")

                            Case "¿Podrías poner el porcentaje de IVA aplicable a las Tarjetas del Proyecto?"

                                tcProyecto.SelectedTab = tpResumenTarjetas
                                txtPorcentajeIVA.Select()
                                txtPorcentajeIVA.Focus()
                                Cursor.Current = System.Windows.Forms.Cursors.Default
                                MsgBox(mensajeAlerta, MsgBoxStyle.OkOnly, "Dato Faltante")


                        End Select

                        Cursor.Current = System.Windows.Forms.Cursors.Default

                    Else

                        tcProyecto.SelectedTab = tpDatosIniciales
                        txtNombreProyecto.Select()
                        txtNombreProyecto.Focus()
                        Cursor.Current = System.Windows.Forms.Cursors.Default

                    End If

                End If

            Catch ex As Exception

            End Try

        End If

        Dim fecha As Integer = getMySQLDate()
        Dim hora As String = getAppTime()

        executeSQLCommand(0, "INSERT IGNORE INTO logs VALUES (" & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "', " & susersession & ", '" & suserip & "', '" & susermachinename & "', 'Abrió el Proyecto " & iprojectid & ": " & txtNombreProyecto.Text.Replace("--", "").Replace("'", "") & "', 'OK')")
        executeSQLCommand(0, "INSERT INTO recentlyopenedfiles VALUES ('" & susername & "', '" & susersession & "', 'Project', 'Proyecto', '" & iprojectid & "', '" & txtNombreProyecto.Text.Replace("'", "").Replace("--", "") & "', 1, " & fecha & ", '" & hora & "', '" & susername & "')")

        isFormReadyForAction = True
        isResumenDGVReady = True

        'If verifyLicense(False, True) = False And isEdit = False And contarProyectos() >= 3 Then

        '    btnGuardar.Enabled = False
        '    btnGuardarYCerrar.Enabled = False
        '    btnPaso2.Enabled = False

        'End If

        txtNombreProyecto.Select()
        txtNombreProyecto.Focus()
        txtNombreProyecto.SelectionStart() = txtNombreProyecto.Text.Length

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub NotifyIcon1_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles NotifyIcon1.DoubleClick

        Dim n As New Loader

        n.isEdit = True

        n.ShowDialog()

        If n.DialogResult = Windows.Forms.DialogResult.OK Then

            fDone = True

        End If

    End Sub


    Public Function contarProyectos() As Integer

        Return getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "")

    End Function


    Private Sub dtFechaPresupuesto_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles dtFechaPresupuesto.ValueChanged

        txtNombreProyecto.Text = txtNombreProyecto.Text.Replace("--", "").Replace("|", "").Replace("'", "")
        txtNombreEmpresa.Text = txtNombreEmpresa.Text.Replace("--", "").Replace("|", "").Replace("'", "")

        If dataLocation.Replace("/", "\").EndsWith("\") = True Then
            txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
        Else
            txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
        End If

        If txtNombreEmpresa.Text <> "" And txtNombreCliente.Text = "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            End If
        ElseIf txtNombreCliente.Text <> "" And txtNombreEmpresa.Text = "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreCliente.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        ElseIf txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreEmpresa.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        End If


    End Sub


    Private Sub txtNombreProyecto_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtNombreProyecto.KeyUp

        Dim strcaracteresprohibidos As String = "|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtNombreProyecto.Text.Contains(arrayCaractProhib(carp)) Then
                txtNombreProyecto.Text = txtNombreProyecto.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If resultado = True Then
            txtNombreProyecto.Select(txtNombreProyecto.Text.Length, 0)
        End If

        txtNombreProyecto.Text = txtNombreProyecto.Text.Replace("--", "").Replace("'", "").Replace("@", "")

        If dataLocation.Replace("/", "\").EndsWith("\") = True Then
            txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
        Else
            txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
        End If

        If txtNombreEmpresa.Text <> "" And txtNombreCliente.Text = "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            End If
        ElseIf txtNombreCliente.Text <> "" And txtNombreEmpresa.Text = "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreCliente.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        ElseIf txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreEmpresa.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        End If

    End Sub


    Private Sub btnClientes_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClientes.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        txtNombreCliente.Text = txtNombreCliente.Text.Trim.Replace("--", "").Replace("'", "").Replace("@", "")

        Dim bp As New BuscaPersonas

        bp.susername = susername
        bp.bactive = bactive
        bp.bonline = bonline
        bp.suserfullname = suserfullname
        bp.suseremail = suseremail
        bp.susersession = susersession
        bp.susermachinename = susermachinename
        bp.suserip = suserip

        bp.querystring = txtNombreCliente.Text.Trim

        bp.isEdit = False

        If Me.WindowState = FormWindowState.Maximized Then
            bp.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        bp.ShowDialog(Me)
        Me.Visible = True

        If bp.DialogResult = Windows.Forms.DialogResult.OK Then

            txtNombreCliente.Text = bp.speoplefullname
            iclientid = bp.ipeopleid

            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
            End If

            If txtNombreEmpresa.Text <> "" And txtNombreCliente.Text = "" And txtNombreProyecto.Text = "" Then
                If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                    txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
                Else
                    txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
                End If
            ElseIf txtNombreCliente.Text <> "" And txtNombreEmpresa.Text = "" And txtNombreProyecto.Text = "" Then
                If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                    txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
                Else
                    txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
                End If
            ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text = "" Then
                If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                    txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
                Else
                    txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
                End If
            ElseIf txtNombreEmpresa.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreCliente.Text = "" Then
                If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                    txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
                Else
                    txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
                End If
            ElseIf txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreEmpresa.Text = "" Then
                If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                    txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
                Else
                    txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
                End If
            ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" Then
                If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                    txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
                Else
                    txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
                End If
            End If

            txtNombreEmpresa.Focus()

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtNombreEmpresa_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtNombreEmpresa.KeyUp

        Dim strcaracteresprohibidos As String = "|°$%&/()=?¡*¨[]_:;-{}+´¿'¬^`~\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtNombreEmpresa.Text.Contains(arrayCaractProhib(carp)) Then
                txtNombreEmpresa.Text = txtNombreEmpresa.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If resultado = True Then
            txtNombreEmpresa.Select(txtNombreEmpresa.Text.Length, 0)
        End If

        txtNombreEmpresa.Text = txtNombreEmpresa.Text.Replace("--", "").Replace("|", "").Replace("'", "")

        If dataLocation.Replace("/", "\").EndsWith("\") = True Then
            txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
        Else
            txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\"
        End If

        If txtNombreEmpresa.Text <> "" And txtNombreCliente.Text = "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            End If
        ElseIf txtNombreCliente.Text <> "" And txtNombreEmpresa.Text = "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreCliente.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        ElseIf txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" And txtNombreEmpresa.Text = "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreCliente.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        ElseIf txtNombreEmpresa.Text <> "" And txtNombreCliente.Text <> "" And txtNombreProyecto.Text <> "" Then
            If dataLocation.Replace("/", "\").EndsWith("\") = True Then
                txtRuta.Text = dataLocation.Replace("/", "\") & "Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            Else
                txtRuta.Text = dataLocation.Replace("/", "\") & "\Clientes\" & dtFechaPresupuesto.Value.Year & "\" & dtFechaPresupuesto.Value.ToString("MMMM").Substring(0, 1).ToUpper & dtFechaPresupuesto.Value.ToString("MMMM").Substring(1) & "\" & txtNombreEmpresa.Text & "\" & txtNombreProyecto.Text & "\"
            End If
        End If


    End Sub


    Private Sub txtLongitudVivienda_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtLongitudVivienda.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtLongitudVivienda.Text.Contains(arrayCaractProhib(carp)) Then
                txtLongitudVivienda.Text = txtLongitudVivienda.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtLongitudVivienda.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtLongitudVivienda.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtLongitudVivienda.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtLongitudVivienda.Text.Length

                    If longitud > (lugar + 1) Then
                        txtLongitudVivienda.Text = txtLongitudVivienda.Text.Substring(0, lugar) & txtLongitudVivienda.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtLongitudVivienda.Text = txtLongitudVivienda.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtLongitudVivienda.Select(txtLongitudVivienda.Text.Length, 0)
        End If

        txtLongitudVivienda.Text = txtLongitudVivienda.Text.Replace("--", "").Replace("'", "").Replace("@", "")

    End Sub


    Private Sub txtAnchoVivienda_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtAnchoVivienda.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtAnchoVivienda.Text.Contains(arrayCaractProhib(carp)) Then
                txtAnchoVivienda.Text = txtAnchoVivienda.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtAnchoVivienda.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtAnchoVivienda.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtAnchoVivienda.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtAnchoVivienda.Text.Length

                    If longitud > (lugar + 1) Then
                        txtAnchoVivienda.Text = txtAnchoVivienda.Text.Substring(0, lugar) & txtAnchoVivienda.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtAnchoVivienda.Text = txtAnchoVivienda.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtAnchoVivienda.Select(txtAnchoVivienda.Text.Length, 0)
        End If

        txtAnchoVivienda.Text = txtAnchoVivienda.Text.Replace("--", "").Replace("'", "").Replace("@", "")

    End Sub


    Private Sub txtLongitudTerreno_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtLongitudTerreno.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtLongitudTerreno.Text.Contains(arrayCaractProhib(carp)) Then
                txtLongitudTerreno.Text = txtLongitudTerreno.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtLongitudTerreno.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtLongitudTerreno.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtLongitudTerreno.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtLongitudTerreno.Text.Length

                    If longitud > (lugar + 1) Then
                        txtLongitudTerreno.Text = txtLongitudTerreno.Text.Substring(0, lugar) & txtLongitudTerreno.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtLongitudTerreno.Text = txtLongitudTerreno.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtLongitudTerreno.Select(txtLongitudTerreno.Text.Length, 0)
        End If

        txtLongitudTerreno.Text = txtLongitudTerreno.Text.Replace("--", "").Replace("'", "").Replace("@", "")

    End Sub


    Private Sub txtAnchoTerreno_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtAnchoTerreno.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtAnchoTerreno.Text.Contains(arrayCaractProhib(carp)) Then
                txtAnchoTerreno.Text = txtAnchoTerreno.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtAnchoTerreno.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtAnchoTerreno.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtAnchoTerreno.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtAnchoTerreno.Text.Length

                    If longitud > (lugar + 1) Then
                        txtAnchoTerreno.Text = txtAnchoTerreno.Text.Substring(0, lugar) & txtAnchoTerreno.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtAnchoTerreno.Text = txtAnchoTerreno.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtAnchoTerreno.Select(txtAnchoTerreno.Text.Length, 0)
        End If

        txtAnchoTerreno.Text = txtAnchoTerreno.Text.Replace("--", "").Replace("'", "").Replace("@", "")

    End Sub


    Private Sub txtLugar_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtLugar.KeyUp

        Dim strcaracteresprohibidos As String = "|°!#$%&/()=?¡*¨[]_:;-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtLugar.Text.Contains(arrayCaractProhib(carp)) Then
                txtLugar.Text = txtLugar.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If resultado = True Then
            txtLugar.Select(txtLugar.Text.Length, 0)
        End If

        txtLugar.Text = txtLugar.Text.Replace("--", "").Replace("'", "").Replace("@", "")

    End Sub


    Private Sub btnDireccion_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDireccion.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim bd As New BuscaDirecciones
        bd.susername = susername
        bd.bactive = bactive
        bd.bonline = bonline
        bd.suserfullname = suserfullname
        bd.suseremail = suseremail
        bd.susersession = susersession
        bd.susermachinename = susermachinename
        bd.suserip = suserip

        bd.querystring = txtLugar.Text

        If Me.WindowState = FormWindowState.Maximized Then
            bd.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        bd.ShowDialog(Me)
        Me.Visible = True

        If bd.DialogResult = Windows.Forms.DialogResult.OK Then

            txtLugar.Text = bd.sdireccion


        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnPaso2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPaso2.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        paso2 = True

        If validaDatosIniciales(False, True) = False Then

            paso2 = False
            Exit Sub

        End If

        If isEdit = False Then

            Dim fecha As Integer = getMySQLDate()
            Dim hora As String = getAppTime()

            iprojectid = getSQLQueryAsInteger(0, "SELECT IF(MAX(iprojectid) + 1 IS NULL, 1, MAX(iprojectid) + 1) AS iprojectid FROM projects")

            Dim queriesDropCreate(35) As String

            queriesDropCreate(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0"
            queriesDropCreate(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " ( `iprojectid` int(11) NOT NULL AUTO_INCREMENT, `iprojectdate` int(11) NOT NULL, `sprojecttime` varchar(11) CHARACTER SET latin1 NOT NULL, `sprojectname` varchar(200) CHARACTER SET latin1 NOT NULL, `sprojecttype` varchar(200) CHARACTER SET latin1 NOT NULL, `ipeopleid` int(11) NOT NULL COMMENT 'Client Id', `sprojectcompanyname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dprojectwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `sterrainlocation` varchar(400) CHARACTER SET latin1 NOT NULL, `sprojectfileslocation` varchar(1000) CHARACTER SET latin1 NOT NULL, `slastmodelapplied` varchar(200) CHARACTER SET latin1 NOT NULL, `dprojectindirectpercentagedefault` decimal(20,5) NOT NULL, `dprojectgainpercentagedefault` decimal(20,5) NOT NULL, `dprojectbuildingcommission` decimal(20,5) NOT NULL, `dprojectclosingcommission` decimal(20,5) NOT NULL, `dprojectrealbuildingcommission` decimal(20,5) DEFAULT NULL, `dprojectrealclosingcommission` decimal(20,5) DEFAULT NULL, `dprojectIVApercentage` decimal(20,5) NOT NULL DEFAULT '0.16000', `iprojectstarteddate` int(11) DEFAULT NULL, `sprojectstartedtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectforecastedclosingdate` int(11) DEFAULT NULL, `sprojectforecastedclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectrealclosingdate` int(11) DEFAULT NULL, `sprojectrealclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `sprojectTaxApplicable` int(1) DEFAULT 1, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`), KEY `peopleid` (`ipeopleid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(2) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0IndirectCosts"
            queriesDropCreate(3) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts" & " ( `iprojectid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sprojectcostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectcost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icostid`), KEY `projectid` (`iprojectid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(4) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Cards"
            queriesDropCreate(5) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `legacycategoryid` (`scardlegacycategoryid`), KEY `legacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(6) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardInputs"
            queriesDropCreate(7) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(8) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardCompoundInputs"
            queriesDropCreate(9) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(10) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Prices"
            queriesDropCreate(11) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices" & " ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `inputid` (`iinputid`), KEY `projectid` (`iprojectid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(12) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Explosion"
            queriesDropCreate(13) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputrealqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(14) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Timber"
            queriesDropCreate(15) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(16) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0AdminCosts"
            queriesDropCreate(17) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts ( `iprojectid` int(11) NOT NULL, `iadmincostid` int(11) NOT NULL, `sprojectadmincostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectadmincost` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iadmincostid`), KEY `projectid` (`iprojectid`), KEY `admincostid` (`iadmincostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(18) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0CardCompoundInputs"
            queriesDropCreate(19) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(20) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0CardInputs"
            queriesDropCreate(21) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(22) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0Cards"
            queriesDropCreate(23) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `cardlegacycategoryid` (`scardlegacycategoryid`), KEY `cardlegacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(24) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0IndirectCosts"
            queriesDropCreate(25) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts ( `ibaseid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sbasecostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dbasecost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icostid`), KEY `baseid` (`ibaseid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(26) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0Prices"
            queriesDropCreate(27) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `baseid` (`ibaseid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(28) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0"
            queriesDropCreate(29) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " ( `ibaseid` int(11) NOT NULL AUTO_INCREMENT, `sbasefileslocation` varchar(400) CHARACTER SET latin1 NOT NULL, `dbaseindirectpercentagedefault` decimal(20,5) NOT NULL, `dbasegainpercentagedefault` decimal(20,5) NOT NULL, `dbaseIVApercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(30) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0Timber"
            queriesDropCreate(31) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(32) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardsAux"

            queriesDropCreate(33) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " VALUES (" & iprojectid & ", " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", '00:00:00', '" & txtNombreProyecto.Text & "', '" & validaTipoDeConstruccion() & "', " & iclientid & ", '" & txtNombreEmpresa.Text & "', " & txtLongitudVivienda.Text & ", " & txtAnchoVivienda.Text & ", " & txtLongitudTerreno.Text & ", " & txtAnchoTerreno.Text & ", '" & txtLugar.Text & "', '" & txtRuta.Text.Replace("\", "/") & "', '', " & txtPorcentajeIndirectosDefault.Text & ", " & txtPorcentajeUtilidadDefault.Text & ", " & txtPorcentajeDeComisionDeObraPresupuestada.Text & ", " & txtPorcentajePorCierreDeOperacionPresupuestada.Text & ", " & txtPorcentajeDeComisionDeObraReal.Text & ", " & txtPorcentajePorCierreDeOperacionReal.Text & ", " & txtPorcentajeIVA.Text & ", 0, '00:00:00', 0, '00:00:00', 0, '00:00:00', 1, " & fecha & ", '" & hora & "', '" & susername & "')"

            queriesDropCreate(34) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts VALUES (" & iprojectid & ", 1, 'DATO FALSO - SOLO PARA ACELERAR LA CAPTURA DE LOS PROYECTOS', 40000, 400000, " & fecha & ", '" & hora & "', '" & susername & "')"

            executeTransactedSQLCommand(0, queriesDropCreate)

            Dim queryCostosProyecto As String = ""

            queryCostosProyecto = "SELECT pc.iprojectid, pc.icostid, pc.sprojectcostname AS 'Nombre del Costo', " & _
            "FORMAT(pc.dprojectcost, 2) AS 'Importe del Costo', pc.dcompanyprojectedearnings " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc " & _
            "WHERE pc.iprojectid = " & iprojectid

            setDataGridView(dgvCostosIndirectos, queryCostosProyecto, False)

            dgvCostosIndirectos.Columns(0).Visible = False
            dgvCostosIndirectos.Columns(1).Visible = False
            dgvCostosIndirectos.Columns(4).Visible = False

            dgvCostosIndirectos.Columns(0).ReadOnly = True
            dgvCostosIndirectos.Columns(1).ReadOnly = True
            dgvCostosIndirectos.Columns(4).ReadOnly = True

            dgvCostosIndirectos.Columns(0).Width = 30
            dgvCostosIndirectos.Columns(1).Width = 30
            dgvCostosIndirectos.Columns(2).Width = 200
            dgvCostosIndirectos.Columns(3).Width = 100
            dgvCostosIndirectos.Columns(4).Width = 30


            'Dim dsCategorias As DataSet
            'Dim contadorCategorias As Integer = 0
            'Dim resumenDeTarjetas As String = ""
            'dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
            'contadorCategorias = dsCategorias.Tables(0).Rows.Count

            'Dim queriesFill(contadorCategorias) As String

            'Dim queriesCreation(2) As String

            'queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
            'queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            'executeTransactedSQLCommand(0, queriesCreation)

            'Try

            '    For i As Integer = 0 To contadorCategorias - 1

            '        Dim queryContadorDeTarjetas As String = "" & _
            '        "SELECT COUNT(*) " & _
            '        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            '        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            '        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            '        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            '        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            '        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

            '        Dim contadorDeTarjetas As Integer = 0

            '        contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

            '        If contadorDeTarjetas > 0 Then

            '            queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
            '            "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
            '            "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
            '            "UNION " & _
            '            "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
            '            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
            '            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
            '            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
            '            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
            '            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            '            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            '            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            '            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
            '            "UNION " & _
            '            "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
            '            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
            '            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
            '            "'' AS dcardunitaryprice, " & _
            '            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
            '            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            '            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            '            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            '            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
            '            "UNION " & _
            '            "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
            '            "ORDER BY scardlegacyid "

            '        End If

            '    Next i

            '    executeTransactedSQLCommand(0, queriesFill)

            'Catch ex As Exception

            'End Try


            'setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

            'dgvResumenDeTarjetas.Columns(0).Visible = False

            'If viewDgvIndirectCosts = False Then
            '    dgvResumenDeTarjetas.Columns(5).Visible = False
            'End If

            'If viewDgvProfits = False Then
            '    dgvResumenDeTarjetas.Columns(6).Visible = False
            'End If

            'If viewDgvUnitPrices = False Then
            '    dgvResumenDeTarjetas.Columns(7).Visible = False
            'End If

            'If viewDgvAmount = False Then
            '    dgvResumenDeTarjetas.Columns(8).Visible = False
            'End If

            'dgvResumenDeTarjetas.Columns(0).ReadOnly = True
            'dgvResumenDeTarjetas.Columns(2).ReadOnly = True
            'dgvResumenDeTarjetas.Columns(3).ReadOnly = True
            'dgvResumenDeTarjetas.Columns(5).ReadOnly = True
            'dgvResumenDeTarjetas.Columns(6).ReadOnly = True
            'dgvResumenDeTarjetas.Columns(7).ReadOnly = True
            'dgvResumenDeTarjetas.Columns(8).ReadOnly = True

            'dgvResumenDeTarjetas.Columns(0).Width = 30
            'dgvResumenDeTarjetas.Columns(1).Width = 60
            'dgvResumenDeTarjetas.Columns(2).Width = 200
            'dgvResumenDeTarjetas.Columns(3).Width = 60
            'dgvResumenDeTarjetas.Columns(4).Width = 70
            'dgvResumenDeTarjetas.Columns(5).Width = 70
            'dgvResumenDeTarjetas.Columns(6).Width = 70
            'dgvResumenDeTarjetas.Columns(7).Width = 70
            'dgvResumenDeTarjetas.Columns(8).Width = 70


        Else

            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET iprojectdate = " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", sprojecttime = '00:00:00', sprojectname = '" & txtNombreProyecto.Text & "', sprojecttype = '" & validaTipoDeConstruccion() & "', ipeopleid = " & iclientid & ", sprojectcompanyname = '" & txtNombreEmpresa.Text & "', dprojectlength = " & txtLongitudVivienda.Text & ", dprojectwidth = " & txtLongitudVivienda.Text & ", dterrainlength = " & txtLongitudTerreno.Text & ", dterrainwidth = " & txtLongitudTerreno.Text & ", sterrainlocation = '" & txtLugar.Text & "', sprojectfileslocation = '" & txtRuta.Text.Replace("\", "/") & "', slastmodelapplied = '', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)

        End If


        tcProyecto.SelectedTab = tpCostosIndirectos
        dgvCostosIndirectos.Select()
        dgvCostosIndirectos.Focus()

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnAbrirCarpeta_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAbrirCarpeta.Click

        If txtRuta.Text.Trim = "" Then
            Exit Sub
        Else

            Try
                MkDir(txtRuta.Text)
            Catch ex As Exception

            End Try

            Try
                System.Diagnostics.Process.Start(txtRuta.Text)
            Catch ex As Exception

            End Try

        End If

    End Sub


    Private Sub tcProyecto_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tcProyecto.SelectedIndexChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        If validaDatosIniciales(True, True) = True And (tcProyecto.SelectedTab Is tpDatosIniciales) = False Then
            'Continue

            'If verifyLicense(False, True) = False And isEdit = False And contarProyectos() >= 3 Then

            '    If verifyLicense(False, False) = False Then

            '        Exit Sub

            '    End If

            'End If

            If validaCostosIndirectos(True) = True And (tcProyecto.SelectedTab Is tpDatosIniciales) = False And (tcProyecto.SelectedTab Is tpCostosIndirectos) = False Then
                'Continue
                If validaResumenDeTarjetas(True) = True Then
                    'Continue
                    'If validaAnalisisUtilidades(True) = True Then
                    '    'Continue
                    'Else
                    '    tcProyecto.SelectedTab = tpAnalisisUtilidades
                    'End If
                Else
                    tcProyecto.SelectedTab = tpResumenTarjetas
                End If

            Else
                tcProyecto.SelectedTab = tpCostosIndirectos
            End If


            If tcProyecto.SelectedTab Is tpCostosIndirectos Then


                Dim queryCostosProyecto As String = ""

                queryCostosProyecto = "SELECT pc.iprojectid, pc.icostid, pc.sprojectcostname AS 'Nombre del Costo', " & _
                "FORMAT(pc.dprojectcost, 2) AS 'Importe del Costo', pc.dcompanyprojectedearnings " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc " & _
                "WHERE pc.iprojectid = " & iprojectid

                setDataGridView(dgvCostosIndirectos, queryCostosProyecto, False)

                dgvCostosIndirectos.Columns(0).Visible = False
                dgvCostosIndirectos.Columns(1).Visible = False
                dgvCostosIndirectos.Columns(4).Visible = False

                dgvCostosIndirectos.Columns(0).ReadOnly = True
                dgvCostosIndirectos.Columns(1).ReadOnly = True
                dgvCostosIndirectos.Columns(4).ReadOnly = True

                dgvCostosIndirectos.Columns(0).Width = 30
                dgvCostosIndirectos.Columns(1).Width = 30
                dgvCostosIndirectos.Columns(2).Width = 200
                dgvCostosIndirectos.Columns(3).Width = 100
                dgvCostosIndirectos.Columns(4).Width = 30


                Dim sumaCostosProyectos As Double = 0.0
                Dim querySumaCostosProyectos As String = ""
                querySumaCostosProyectos = "SELECT SUM(pc.dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc WHERE pc.iprojectid = " & iprojectid & " GROUP BY iprojectid"

                sumaCostosProyectos = getSQLQueryAsDouble(0, querySumaCostosProyectos)
                lblTotalIndirectos.Text = FormatCurrency(sumaCostosProyectos, 2, TriState.True, TriState.False, TriState.True)

                Dim ingresosIndirectos As Double = 0.0
                Try
                    If dgvCostosIndirectos.RowCount > 0 Then
                        ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                    End If
                Catch ex As Exception

                End Try

                txtIngresosIndirectos.Text = ingresosIndirectos

                Dim porcentajeIndirectoSugerido As Double = 0.0
                Try
                    porcentajeIndirectoSugerido = sumaCostosProyectos / ingresosIndirectos
                Catch ex As Exception

                End Try

                lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "


            ElseIf tcProyecto.SelectedTab Is tpResumenTarjetas Then


                'Check/Save/Update First Project page

                If iclientid = 0 Or iprojectid = 0 Then

                    Dim fecha As Integer = getMySQLDate()
                    Dim hora As String = getAppTime()

                    iprojectid = getSQLQueryAsInteger(0, "SELECT IF(MAX(iprojectid) + 1 IS NULL, 1, MAX(iprojectid) + 1) AS iprojectid FROM projects")

                    Dim queriesDropCreate(34) As String

                    queriesDropCreate(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0"
                    queriesDropCreate(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " ( `iprojectid` int(11) NOT NULL AUTO_INCREMENT, `iprojectdate` int(11) NOT NULL, `sprojecttime` varchar(11) CHARACTER SET latin1 NOT NULL, `sprojectname` varchar(200) CHARACTER SET latin1 NOT NULL, `sprojecttype` varchar(200) CHARACTER SET latin1 NOT NULL, `ipeopleid` int(11) NOT NULL COMMENT 'Client Id', `sprojectcompanyname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dprojectwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `sterrainlocation` varchar(400) CHARACTER SET latin1 NOT NULL, `sprojectfileslocation` varchar(1000) CHARACTER SET latin1 NOT NULL, `slastmodelapplied` varchar(200) CHARACTER SET latin1 NOT NULL, `dprojectindirectpercentagedefault` decimal(20,5) NOT NULL, `dprojectgainpercentagedefault` decimal(20,5) NOT NULL, `dprojectbuildingcommission` decimal(20,5) NOT NULL, `dprojectclosingcommission` decimal(20,5) NOT NULL, `dprojectrealbuildingcommission` decimal(20,5) DEFAULT NULL, `dprojectrealclosingcommission` decimal(20,5) DEFAULT NULL, `dprojectIVApercentage` decimal(20,5) NOT NULL DEFAULT '0.16000', `iprojectstarteddate` int(11) DEFAULT NULL, `sprojectstartedtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectforecastedclosingdate` int(11) DEFAULT NULL, `sprojectforecastedclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectrealclosingdate` int(11) DEFAULT NULL, `sprojectrealclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `sprojectTaxApplicable` int(1) DEFAULT 1, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`), KEY `peopleid` (`ipeopleid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(2) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0IndirectCosts"
                    queriesDropCreate(3) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts" & " ( `iprojectid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sprojectcostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectcost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icostid`), KEY `projectid` (`iprojectid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(4) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Cards"
                    queriesDropCreate(5) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `legacycategoryid` (`scardlegacycategoryid`), KEY `legacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(6) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardInputs"
                    queriesDropCreate(7) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(8) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardCompoundInputs"
                    queriesDropCreate(9) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(10) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Prices"
                    queriesDropCreate(11) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices" & " ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `inputid` (`iinputid`), KEY `projectid` (`iprojectid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(12) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Explosion"
                    queriesDropCreate(13) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputrealqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(14) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Timber"
                    queriesDropCreate(15) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(16) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0AdminCosts"
                    queriesDropCreate(17) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts ( `iprojectid` int(11) NOT NULL, `iadmincostid` int(11) NOT NULL, `sprojectadmincostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectadmincost` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iadmincostid`), KEY `projectid` (`iprojectid`), KEY `admincostid` (`iadmincostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(18) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs"
                    queriesDropCreate(19) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(20) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs"
                    queriesDropCreate(21) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(22) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards"
                    queriesDropCreate(23) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `cardlegacycategoryid` (`scardlegacycategoryid`), KEY `cardlegacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(24) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts"
                    queriesDropCreate(25) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts ( `ibaseid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sbasecostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dbasecost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icostid`), KEY `baseid` (`ibaseid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(26) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices"
                    queriesDropCreate(27) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `baseid` (`ibaseid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(28) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid
                    queriesDropCreate(29) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " ( `ibaseid` int(11) NOT NULL AUTO_INCREMENT, `sbasefileslocation` varchar(400) CHARACTER SET latin1 NOT NULL, `dbaseindirectpercentagedefault` decimal(20,5) NOT NULL, `dbasegainpercentagedefault` decimal(20,5) NOT NULL, `dbaseIVApercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(30) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber"
                    queriesDropCreate(31) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                    queriesDropCreate(32) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardsAux"

                    queriesDropCreate(33) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " VALUES (" & iprojectid & ", " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", '00:00:00', '" & txtNombreProyecto.Text & "', '" & validaTipoDeConstruccion() & "', " & iclientid & ", '" & txtNombreEmpresa.Text & "', " & txtLongitudVivienda.Text & ", " & txtAnchoVivienda.Text & ", " & txtLongitudTerreno.Text & ", " & txtAnchoTerreno.Text & ", '" & txtLugar.Text & "', '" & txtRuta.Text.Replace("\", "/") & "', '', " & txtPorcentajeIndirectosDefault.Text & ", " & txtPorcentajeUtilidadDefault.Text & ", " & txtPorcentajeDeComisionDeObraPresupuestada.Text & ", " & txtPorcentajePorCierreDeOperacionPresupuestada.Text & ", " & txtPorcentajeDeComisionDeObraReal.Text & ", " & txtPorcentajePorCierreDeOperacionReal.Text & ", " & txtPorcentajeIVA.Text & ", 0, '00:00:00', 0, '00:00:00', 0, '00:00:00', 1, " & fecha & ", '" & hora & "', '" & susername & "')"

                    executeTransactedSQLCommand(0, queriesDropCreate)

                Else

                    executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET iprojectdate = " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", sprojecttime = '00:00:00', sprojectname = '" & txtNombreProyecto.Text & "', sprojecttype = '" & validaTipoDeConstruccion() & "', ipeopleid = " & iclientid & ", sprojectcompanyname = '" & txtNombreEmpresa.Text & "', dprojectlength = " & txtLongitudVivienda.Text & ", dprojectwidth = " & txtLongitudVivienda.Text & ", dterrainlength = " & txtLongitudTerreno.Text & ", dterrainwidth = " & txtLongitudTerreno.Text & ", sterrainlocation = '" & txtLugar.Text & "', sprojectfileslocation = '" & txtRuta.Text.Replace("\", "/") & "', slastmodelapplied = '', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)

                End If



                'Empieza la carga del grid

                Dim dsCategorias As DataSet
                Dim contadorCategorias As Integer = 0
                Dim resumenDeTarjetas As String = ""
                dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
                contadorCategorias = dsCategorias.Tables(0).Rows.Count

                Dim queriesFill(contadorCategorias) As String

                Dim queriesCreation(2) As String

                queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
                queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                executeTransactedSQLCommand(0, queriesCreation)

                Try

                    For i As Integer = 0 To contadorCategorias - 1

                        Dim queryContadorDeTarjetas As String = "" & _
                        "SELECT COUNT(*) " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                        Dim contadorDeTarjetas As Integer = 0

                        contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                        If contadorDeTarjetas > 0 Then

                            queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                            "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                            "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                            "'' AS dcardunitaryprice, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                            "ORDER BY scardlegacyid "

                        End If

                    Next i

                    executeTransactedSQLCommand(0, queriesFill)

                Catch ex As Exception

                End Try


                setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

                dgvResumenDeTarjetas.Columns(0).Visible = False

                If viewDgvIndirectCosts = False Then
                    dgvResumenDeTarjetas.Columns(5).Visible = False
                End If

                If viewDgvProfits = False Then
                    dgvResumenDeTarjetas.Columns(6).Visible = False
                End If

                If viewDgvUnitPrices = False Then
                    dgvResumenDeTarjetas.Columns(7).Visible = False
                End If

                If viewDgvAmount = False Then
                    dgvResumenDeTarjetas.Columns(8).Visible = False
                End If

                dgvResumenDeTarjetas.Columns(0).ReadOnly = True
                dgvResumenDeTarjetas.Columns(2).ReadOnly = True
                dgvResumenDeTarjetas.Columns(3).ReadOnly = True
                dgvResumenDeTarjetas.Columns(5).ReadOnly = True
                dgvResumenDeTarjetas.Columns(6).ReadOnly = True
                dgvResumenDeTarjetas.Columns(7).ReadOnly = True
                dgvResumenDeTarjetas.Columns(8).ReadOnly = True

                dgvResumenDeTarjetas.Columns(0).Width = 30
                dgvResumenDeTarjetas.Columns(1).Width = 60
                dgvResumenDeTarjetas.Columns(2).Width = 200
                dgvResumenDeTarjetas.Columns(3).Width = 60
                dgvResumenDeTarjetas.Columns(4).Width = 70
                dgvResumenDeTarjetas.Columns(5).Width = 70
                dgvResumenDeTarjetas.Columns(6).Width = 70
                dgvResumenDeTarjetas.Columns(7).Width = 70
                dgvResumenDeTarjetas.Columns(8).Width = 70


                Dim dsProyecto As DataSet
                dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
                "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
                "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
                "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, " & _
                "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
                "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)


                Dim porcentajeIVA As Double
                Try
                    porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
                Catch ex As Exception
                    porcentajeIVA = 0.0
                End Try

                txtPorcentajeIVA.Text = porcentajeIVA * 100

                Dim taxApplicable As Integer = 1
                Try
                    taxApplicable = CInt(dsProyecto.Tables(0).Rows(0).Item("sprojectTaxApplicable"))
                Catch ex As Exception
                    taxApplicable = 1
                End Try

                If taxApplicable = 1 Then
                    chkDoNOTApplyTax.Checked = False
                Else
                    chkDoNOTApplyTax.Checked = True
                End If

                Dim porcentajeIndirectosDefault As Double
                Try
                    porcentajeIndirectosDefault = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectindirectpercentagedefault"))
                Catch ex As Exception
                    porcentajeIndirectosDefault = 0.0
                End Try

                txtPorcentajeIndirectosDefault.Text = porcentajeIndirectosDefault * 100

                Dim porcentajeUtilidadDefault As Double
                Try
                    porcentajeUtilidadDefault = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectgainpercentagedefault"))
                Catch ex As Exception
                    porcentajeUtilidadDefault = 0.0
                End Try

                txtPorcentajeUtilidadDefault.Text = porcentajeUtilidadDefault * 100


                Dim queryIndirectosSubTotal As String
                Dim indirectosSubTotal As Double = 0.0
                queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim queryPrecioSubTotal As String
                Dim precioSubTotal As Double = 0.0
                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim precioTotal As Double = 0.0

                If chkDoNOTApplyTax.Checked = True Then
                    txtIVA.Text = FormatCurrency(0.0, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                    precioTotal = precioSubTotal
                    txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                Else
                    txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                    precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)
                    txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                End If

                txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                If dsProyecto.Tables(0).Rows(0).Item("iprojectforecastedclosingdate") = "0" Then

                    btnRealizarObra.Visible = True
                    btnCostoHoy.Visible = False

                Else

                    btnRealizarObra.Visible = False
                    btnCostoHoy.Visible = True

                End If



            ElseIf tcProyecto.SelectedTab Is tpExplosionDeInsumos Then



                Dim queryExplosionInsumos As String = ""

                queryExplosionInsumos = "" & _
                "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', t2.sinputunit AS 'Unidad de Medida', " & _
                "FORMAT(SUM(t2.dcardinputqty), 3) AS 'Cantidad Requerida', " & _
                "FORMAT(SUM(t2.ipidinputqty), 3) AS 'Cantidad En Inventario', " & _
                "t2.ipisinputlocation AS 'Guardado en', " & _
                "t2.ipifecharecibido AS 'Fecha Ultimo Mov', " & _
                "t2.ipistatus AS 'Status', " & _
                "FORMAT(SUM(t2.cantidadapedir), 3) AS 'Cantidad Sugerida a Pedir', " & _
                "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir' " & _
                "FROM ( " & _
                "SELECT " & _
                "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
                "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
                "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
                "t1.pexdinputrealqty AS cantidadajustada " & _
                "FROM ( " & _
                "SELECT " & _
                "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
                "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
                "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
                "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
                "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
                "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
                "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
                "FROM " & _
                "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
                "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
                "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
                "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
                "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
                "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
                "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
                "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
                "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
                "UNION " & _
                "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
                "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
                "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
                "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
                "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
                "FROM " & _
                "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
                "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
                "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
                "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
                "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
                "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
                "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
                "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
                "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
                "UNION " & _
                "SELECT " & _
                "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
                "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty " & _
                "FROM " & _
                "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
                "JOIN inputs i ON pex.iinputid = i.iinputid " & _
                "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
                "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
                "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
                "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
                "GROUP BY pex.iprojectid, i.iinputid " & _
                ") t1 " & _
                ")t2 " & _
                "GROUP BY t2.iinputid " & _
                "ORDER BY 3 "


                executeSQLCommand(0, queryExplosionInsumos)

                setDataGridView(dgvExplosionDeInsumos, queryExplosionInsumos, False)

                dgvExplosionDeInsumos.Columns(0).Visible = False
                dgvExplosionDeInsumos.Columns(1).Visible = False

                dgvExplosionDeInsumos.Columns(1).ReadOnly = True
                dgvExplosionDeInsumos.Columns(2).ReadOnly = True
                dgvExplosionDeInsumos.Columns(3).ReadOnly = True
                dgvExplosionDeInsumos.Columns(4).ReadOnly = True
                dgvExplosionDeInsumos.Columns(5).ReadOnly = True
                dgvExplosionDeInsumos.Columns(6).ReadOnly = True
                dgvExplosionDeInsumos.Columns(7).ReadOnly = True
                dgvExplosionDeInsumos.Columns(8).ReadOnly = True
                dgvExplosionDeInsumos.Columns(9).ReadOnly = True
                dgvExplosionDeInsumos.Columns(10).ReadOnly = False

                dgvExplosionDeInsumos.Columns(1).Width = 30
                dgvExplosionDeInsumos.Columns(2).Width = 300
                dgvExplosionDeInsumos.Columns(3).Width = 70
                dgvExplosionDeInsumos.Columns(4).Width = 70
                dgvExplosionDeInsumos.Columns(5).Width = 70
                dgvExplosionDeInsumos.Columns(6).Width = 150
                dgvExplosionDeInsumos.Columns(7).Width = 130
                dgvExplosionDeInsumos.Columns(8).Width = 100
                dgvExplosionDeInsumos.Columns(9).Width = 70
                dgvExplosionDeInsumos.Columns(10).Width = 70



                Dim queryExplosionInsumosPorProveedor As String = ""

                queryExplosionInsumosPorProveedor = "" & _
                "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', " & _
                "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir', " & _
                "t2.sinputunit AS 'Unidad de Medida', " & _
                "t2.ssuppliername AS 'Proveedor que nos ha surtido este Insumo Antes' " & _
                "FROM ( " & _
                "SELECT " & _
                "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
                "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
                "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
                "t1.pexdinputrealqty AS cantidadajustada, t1.ssuppliername " & _
                "FROM ( " & _
                "SELECT " & _
                "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
                "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
                "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
                "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
                "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
                "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
                "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty, sp.ssuppliername " & _
                "FROM " & _
                "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
                "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
                "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
                "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
                "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
                "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
                "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
                "LEFT JOIN supplierinvoiceinputs sii ON i.iinputid = sii.iinputid " & _
                "LEFT JOIN supplierinvoices siv ON siv.isupplierinvoiceid = sii.isupplierinvoiceid " & _
                "LEFT JOIN suppliers sp ON siv.isupplierid = sp.isupplierid " & _
                "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
                "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
                "UNION " & _
                "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
                "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
                "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
                "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
                "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty, sp.ssuppliername " & _
                "FROM " & _
                "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
                "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
                "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
                "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
                "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
                "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
                "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
                "LEFT JOIN supplierinvoiceinputs sii ON i.iinputid = sii.iinputid " & _
                "LEFT JOIN supplierinvoices siv ON siv.isupplierinvoiceid = sii.isupplierinvoiceid " & _
                "LEFT JOIN suppliers sp ON siv.isupplierid = sp.isupplierid " & _
                "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
                "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
                "UNION " & _
                "SELECT " & _
                "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
                "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty, sp.ssuppliername " & _
                "FROM " & _
                "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
                "JOIN inputs i ON pex.iinputid = i.iinputid " & _
                "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
                "LEFT JOIN supplierinvoiceinputs sii ON i.iinputid = sii.iinputid " & _
                "LEFT JOIN supplierinvoices siv ON siv.isupplierinvoiceid = sii.isupplierinvoiceid " & _
                "LEFT JOIN suppliers sp ON siv.isupplierid = sp.isupplierid " & _
                "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
                "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
                "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
                "GROUP BY pex.iprojectid, i.iinputid " & _
                ") t1 " & _
                ")t2 " & _
                "WHERE t2.cantidadajustada > 0 " & _
                "GROUP BY t2.iinputid " & _
                "ORDER BY 3 "

                executeSQLCommand(0, queryExplosionInsumosPorProveedor)

                setDataGridView(dgvExplosionDeInsumosPorProveedor, queryExplosionInsumosPorProveedor, True)

                dgvExplosionDeInsumosPorProveedor.Columns(0).Visible = False
                dgvExplosionDeInsumosPorProveedor.Columns(1).Visible = False

                dgvExplosionDeInsumosPorProveedor.Columns(1).Width = 30
                dgvExplosionDeInsumosPorProveedor.Columns(2).Width = 300
                dgvExplosionDeInsumosPorProveedor.Columns(3).Width = 70
                dgvExplosionDeInsumosPorProveedor.Columns(4).Width = 70
                dgvExplosionDeInsumosPorProveedor.Columns(5).Width = 100



                Dim queryInsumosNoFacturados As String

                queryInsumosNoFacturados = "" & _
                "SELECT i.iinputid, i.sinputdescription AS 'Insumo', " & _
                "i.sinputunit AS 'Unidad de Medida', FORMAT(SUM(suii.dinputqty), 2) AS 'Cantidad Comprada' " & _
                "FROM inputs i " & _
                "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
                "JOIN supplierinvoiceinputs suii ON i.iinputid = suii.iinputid " & _
                "JOIN supplierinvoices si ON suii.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceprojects sip ON suii.isupplierinvoiceid = sip.isupplierinvoiceid " & _
                "WHERE it.sinputtypedescription = 'MATERIALES' AND sip.iprojectid = " & iprojectid & " " & _
                "AND i.iinputid NOT IN (SELECT pex.iinputid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex WHERE pex.iprojectid = " & iprojectid & ") " & _
                "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
                "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
                "GROUP BY i.iinputid "

                setDataGridView(dgvInsumosFacturadosNoPresupuestados, queryInsumosNoFacturados, True)

                dgvInsumosFacturadosNoPresupuestados.Columns(0).Visible = False

                dgvInsumosFacturadosNoPresupuestados.Columns(1).Width = 200
                dgvInsumosFacturadosNoPresupuestados.Columns(2).Width = 70
                dgvInsumosFacturadosNoPresupuestados.Columns(3).Width = 70



                Dim queryPedidos As String = ""
                queryPedidos = "SELECT oi.iinputid, STR_TO_DATE(CONCAT(oi.iupdatedate, ' ', oi.supdatetime), '%Y%c%d %T') AS 'Fecha Ultima Mod', " & _
                "i.sinputdescription AS 'Material', FORMAT(oi.dinputqty, 3) AS 'Cantidad', pe.speoplefullname AS 'Persona que hizo el Pedido' " & _
                "FROM orders o " & _
                "JOIN orderinputs oi ON o.iorderid = oi.iorderid " & _
                "JOIN inputs i ON oi.iinputid = i.iinputid " & _
                "LEFT JOIN people pe ON o.ipeopleid = pe.ipeopleid " & _
                "WHERE o.iprojectid = " & iprojectid & " " & _
                "ORDER BY o.iupdatedate, o.supdatetime, i.sinputdescription, oi.dinputqty "

                setDataGridView(dgvPedidosDeObra, queryPedidos, True)

                dgvPedidosDeObra.Columns(0).Visible = False

                dgvPedidosDeObra.Columns(0).Width = 30
                dgvPedidosDeObra.Columns(1).Width = 70
                dgvPedidosDeObra.Columns(2).Width = 300
                dgvPedidosDeObra.Columns(3).Width = 70
                dgvPedidosDeObra.Columns(4).Width = 100



                Dim queryEnvios As String = ""
                queryEnvios = "SELECT si.iinputid, STR_TO_DATE(CONCAT(si.iupdatedate, ' ', si.supdatetime), '%Y%c%d %T') AS 'Fecha Ultima Mod', " & _
                "i.sinputdescription AS 'Material', FORMAT(si.dinputqty, 3) AS 'Cantidad', pe1.speoplefullname AS 'Chofer', pe2.speoplefullname AS 'Persona que recibio el Envio' " & _
                "FROM shipments s " & _
                "JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid " & _
                "JOIN inputs i ON si.iinputid = i.iinputid " & _
                "LEFT JOIN people pe1 ON s.idriverid = pe1.ipeopleid " & _
                "LEFT JOIN people pe2 ON s.ireceiverid = pe2.ipeopleid " & _
                "WHERE s.iprojectid = " & iprojectid & " " & _
                "ORDER BY si.iupdatedate, si.supdatetime, i.sinputdescription, si.dinputqty "

                setDataGridView(dgvEnviosALaObra, queryEnvios, True)

                dgvEnviosALaObra.Columns(0).Visible = False

                dgvEnviosALaObra.Columns(0).Width = 30
                dgvEnviosALaObra.Columns(1).Width = 70
                dgvEnviosALaObra.Columns(2).Width = 300
                dgvEnviosALaObra.Columns(3).Width = 70
                dgvEnviosALaObra.Columns(4).Width = 100
                dgvEnviosALaObra.Columns(5).Width = 100



            ElseIf tcProyecto.SelectedTab Is tpDetalleCostosReales Then



                Dim queryFacturas As String = ""

                queryFacturas = "" & _
                "SELECT tmpA.isupplierinvoiceid, STR_TO_DATE(CONCAT(tmpA.iinvoicedate, ' ', tmpA.sinvoicetime), '%Y%c%d %T') AS 'Fecha', " & _
                "sit.ssupplierinvoicetypedescription AS 'Tipo Factura', s.ssuppliername AS 'Proveedor', tmpA.ssupplierinvoicefolio AS 'Folio Factura', " & _
                "tmpA.sexpensedescription AS 'Descripcion', FORMAT(tmpA.total, 2) AS 'Total Factura', " & _
                "tmpA.sexpenselocation AS 'Lugar donde se hizo la compra', pe.speoplefullname AS 'Persona que recibio la Factura' " & _
                "FROM ( " & _
                "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                "UNION " & _
                "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "GROUP BY si.isupplierinvoiceid " & _
                ") tmpA " & _
                "JOIN supplierinvoicetypes sit ON tmpA.isupplierinvoicetypeid = sit.isupplierinvoicetypeid " & _
                "JOIN suppliers s ON tmpA.isupplierid = s.isupplierid " & _
                "JOIN people pe ON tmpA.ipeopleid = pe.ipeopleid " & _
                "ORDER BY 2 "

                setDataGridView(dgvFacturas, queryFacturas, True)

                dgvFacturas.Columns(0).Visible = False

                dgvFacturas.Columns(0).Width = 30
                dgvFacturas.Columns(1).Width = 70
                dgvFacturas.Columns(2).Width = 150
                dgvFacturas.Columns(3).Width = 200
                dgvFacturas.Columns(4).Width = 100
                dgvFacturas.Columns(5).Width = 200
                dgvFacturas.Columns(6).Width = 70
                dgvFacturas.Columns(7).Width = 150
                dgvFacturas.Columns(8).Width = 150


                Dim sumaFacturas As Double = 0.0
                Dim querySumaFacturas As String = ""
                querySumaFacturas = "SELECT SUM(total) FROM ( " & _
                "SELECT sip.iprojectid, sip.isupplierinvoiceid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                "UNION " & _
                "SELECT sip.iprojectid, sip.isupplierinvoiceid, IF((SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "GROUP BY si.isupplierinvoiceid " & _
                ") tmpA"

                sumaFacturas = getSQLQueryAsDouble(0, querySumaFacturas)
                lblTotalFacturas.Text = FormatCurrency(sumaFacturas, 2, TriState.True, TriState.False, TriState.True)



                Dim queryValesCombustible As String = ""

                queryValesCombustible = "" & _
                "SELECT gv.igasvoucherid, gv.iassetid, STR_TO_DATE(CONCAT(gv.igasdate, ' ', gv.sgastime), '%Y%c%d %T') AS 'Fecha', a.sassetdescription AS 'Auto', " & _
                "gv.scarmileageatrequest AS 'Kms al momento', gv.scarorigindestination AS 'Origen Destino', gv.svouchercomment AS 'Comentarios', gv.ipeopleid, " & _
                "p.speoplefullname AS 'Persona', FORMAT(gvp.dliters, 4) AS 'Litros', gt.sgastype AS 'Tipo', FORMAT((gv.dgasvoucheramount/gv.dlitersdispensed)*gvp.dliters, 2) AS 'Monto del Vale' " & _
                "FROM gasvouchers gv " & _
                "JOIN gasvoucherprojects gvp ON gv.igasvoucherid = gvp.igasvoucherid " & _
                "JOIN gastypes gt ON gv.igastypeid = gt.igastypeid " & _
                "JOIN assets a ON gv.iassetid = a.iassetid " & _
                "LEFT JOIN people p ON gv.ipeopleid = p.ipeopleid " & _
                "WHERE gvp.iprojectid = " & iprojectid

                setDataGridView(dgvVales, queryValesCombustible, True)

                dgvVales.Columns(0).Visible = False
                dgvVales.Columns(1).Visible = False
                dgvVales.Columns(7).Visible = False

                dgvVales.Columns(0).Width = 30
                dgvVales.Columns(1).Width = 30
                dgvVales.Columns(2).Width = 70
                dgvVales.Columns(3).Width = 200
                dgvVales.Columns(4).Width = 70
                dgvVales.Columns(5).Width = 200
                dgvVales.Columns(6).Width = 200
                dgvVales.Columns(7).Width = 30
                dgvVales.Columns(8).Width = 200
                dgvVales.Columns(9).Width = 70
                dgvVales.Columns(10).Width = 100
                dgvVales.Columns(11).Width = 100

                Dim sumaVales As Double = 0.0
                Dim querySumaVales As String = ""

                querySumaVales = "" & _
                "SELECT FORMAT(IF(SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed) IS NULL, 0, SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed)), 2) AS totalvalesasignados " & _
                "FROM gasvoucherprojects gvp " & _
                "JOIN gasvouchers gv ON gvp.igasvoucherid = gv.igasvoucherid " & _
                "WHERE gvp.iprojectid = " & iprojectid & " "

                sumaVales = getSQLQueryAsDouble(0, querySumaVales)
                lblTotalVales.Text = FormatCurrency(sumaVales, 2, TriState.True, TriState.False, TriState.True)



                Dim queryFacturasNoAsignadasAProyectoDuranteElMismoPeriodo As String = ""

                queryFacturasNoAsignadasAProyectoDuranteElMismoPeriodo = "" & _
                "SELECT tmpA.isupplierinvoiceid, STR_TO_DATE(CONCAT(tmpA.iinvoicedate, ' ', tmpA.sinvoicetime), '%Y%c%d %T') AS 'Fecha', " & _
                "sit.ssupplierinvoicetypedescription AS 'Tipo Factura', s.ssuppliername AS 'Proveedor', tmpA.ssupplierinvoicefolio AS 'Folio Factura', " & _
                "tmpA.sexpensedescription AS 'Descripcion', FORMAT(tmpA.total, 2) AS 'Total Factura', " & _
                "tmpA.sexpenselocation AS 'Lugar donde se hizo la compra', pe.speoplefullname AS 'Persona que recibio la Factura' " & _
                "FROM ( " & _
                "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty)*(1+si.dIVApercentage) as total " & _
                "FROM supplierinvoices si " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
                "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
                "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
                "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                "UNION " & _
                "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
                "FROM supplierinvoices si " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
                "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
                "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                ") tmpA " & _
                "JOIN supplierinvoicetypes sit ON tmpA.isupplierinvoicetypeid = sit.isupplierinvoicetypeid " & _
                "JOIN suppliers s ON tmpA.isupplierid = s.isupplierid " & _
                "JOIN people pe ON tmpA.ipeopleid = pe.ipeopleid " & _
                "ORDER BY 2 "

                setDataGridView(dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo, queryFacturasNoAsignadasAProyectoDuranteElMismoPeriodo, True)

                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(0).Visible = False

                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(0).Width = 30
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(1).Width = 70
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(2).Width = 150
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(3).Width = 200
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(4).Width = 70
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(5).Width = 200
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(6).Width = 70
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(7).Width = 150
                dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(8).Width = 150


                Dim sumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo As Double = 0.0
                Dim querySumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo As String = ""

                querySumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo = "" & _
                "SELECT FORMAT(SUM(tmpA.total), 2) AS 'Total Factura' " & _
                "FROM ( " & _
                "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty)*(1+si.dIVApercentage) as total " & _
                "FROM supplierinvoices si " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
                "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
                "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
                "AND si.iinvoicedate > (SELECT iprojectstarteddate from projects where iprojectid = " & iprojectid & ") " & _
                "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                "UNION " & _
                "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
                "FROM supplierinvoices si " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
                "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
                "AND si.iinvoicedate > (SELECT iprojectstarteddate from projects where iprojectid = " & iprojectid & ") " & _
                "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                ") tmpA"

                sumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo = getSQLQueryAsDouble(0, querySumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo)
                lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Text = FormatCurrency(sumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo, 2, TriState.True, TriState.False, TriState.True)


                Dim queryGastosAdminAsociadosProyecto As String = ""
                queryGastosAdminAsociadosProyecto = "SELECT pc.iprojectid, pc.iadmincostid, pc.sprojectadmincostname AS 'Nombre del Costo', " & _
                "FORMAT(pc.dprojectadmincost, 2) AS 'Importe del Costo' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts pc WHERE pc.iprojectid = " & iprojectid

                setDataGridView(dgvGastosAdminAsociados, queryGastosAdminAsociadosProyecto, False)

                dgvGastosAdminAsociados.Columns(0).Visible = False
                dgvGastosAdminAsociados.Columns(1).Visible = False

                dgvGastosAdminAsociados.Columns(0).ReadOnly = True
                dgvGastosAdminAsociados.Columns(1).ReadOnly = True

                dgvGastosAdminAsociados.Columns(0).Width = 30
                dgvGastosAdminAsociados.Columns(1).Width = 30
                dgvGastosAdminAsociados.Columns(2).Width = 200
                dgvGastosAdminAsociados.Columns(3).Width = 100


                Dim sumaGastosAdminAsociadosProyecto As Double = 0.0
                sumaGastosAdminAsociadosProyecto = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
                lblTotalGastosAdminAsignados.Text = FormatCurrency(sumaGastosAdminAsociadosProyecto, 2, TriState.True, TriState.False, TriState.True)




                Dim queryNominas As String = ""

                queryNominas = "" & _
                "SELECT pr.ipayrollid, STR_TO_DATE(CONCAT(pr.ipayrolldate, ' ', pr.spayrolltime), '%Y%c%d %T') AS 'Fecha Nomina', " & _
                "pr.spayrollfrequency AS 'Frecuencia', pr.spayrolltype AS 'Tipo Nomina', p.sprojectname AS 'Proyecto', " & _
                "IF(pr.spayrolldescription IS NULL, '', pr.spayrolldescription) AS 'Descripcion Nomina', " & _
                "STR_TO_DATE(CONCAT(pr.ipayrollstartdate, ' ', pr.spayrollstarttime), '%Y%c%d %T') AS 'Desde', " & _
                "STR_TO_DATE(CONCAT(pr.ipayrollenddate, ' ', pr.spayrollendtime), '%Y%c%d %T') AS 'Hasta', " & _
                "IF(pe.speoplefullname IS NULL, '', pe.speoplefullname) AS 'Supervisor', " & _
                "FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS 'Total Nomina' " & _
                "FROM payrolls pr " & _
                "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
                "JOIN projects p ON pr.iprojectid = p.iprojectid " & _
                "JOIN people pe ON pr.ipeopleid = pe.ipeopleid " & _
                "WHERE pr.iprojectid = " & iprojectid & " " & _
                "GROUP BY 1 "

                setDataGridView(dgvNominas, queryNominas, True)

                dgvNominas.Columns(0).Visible = False

                dgvNominas.Columns(0).Width = 30
                dgvNominas.Columns(1).Width = 70
                dgvNominas.Columns(2).Width = 100
                dgvNominas.Columns(3).Width = 100
                dgvNominas.Columns(4).Width = 200
                dgvNominas.Columns(5).Width = 200
                dgvNominas.Columns(6).Width = 70
                dgvNominas.Columns(7).Width = 70
                dgvNominas.Columns(8).Width = 150
                dgvNominas.Columns(9).Width = 70

                Dim sumaNominas As Double = 0.0
                Dim querySumaNominas As String = ""

                querySumaNominas = "" & _
                "SELECT FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) - prpe.ddiscountamount)), 2) AS total " & _
                "FROM payrolls pr " & _
                "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
                "WHERE pr.iprojectid = " & iprojectid & " "

                sumaNominas = getSQLQueryAsDouble(0, querySumaNominas)
                lblTotalNominas.Text = FormatCurrency(sumaNominas, 2, TriState.True, TriState.False, TriState.True)



                Dim queryEntradas As String = ""
                queryEntradas = "SELECT ic.iincomeid, STR_TO_DATE(CONCAT(ic.iupdatedate, ' ', ic.supdatetime), '%Y%c%d %T') AS 'Fecha Ultima Mod', " & _
                "FORMAT(ic.dincomeamount, 2) AS 'Importe', ca.scompanyaccountname AS 'Cuenta Destino', " & _
                "ic.sincomedescription AS 'Descripcion del Pago', ict.sincometypedescription AS 'Tipo de Pago' " & _
                "FROM incomes ic " & _
                "LEFT JOIN incometypes ict ON ic.iincometypeid = ict.iincometypeid " & _
                "LEFT JOIN companyaccounts ca ON ic.idestinationaccountid = ca.iaccountid " & _
                "JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid " & _
                "WHERE icp.iprojectid = " & iprojectid

                setDataGridView(dgvEntradas, queryEntradas, True)

                dgvEntradas.Columns(0).Width = 30
                dgvEntradas.Columns(1).Width = 70
                dgvEntradas.Columns(2).Width = 70
                dgvEntradas.Columns(3).Width = 150
                dgvEntradas.Columns(4).Width = 200
                dgvEntradas.Columns(5).Width = 150

                dgvEntradas.Columns(0).Visible = False

                Dim sumaEntradas As Double = 0.0
                Dim querySumaEntradas As String = ""
                querySumaEntradas = "SELECT SUM(ic.dincomeamount) " & _
                "FROM incomes ic " & _
                "JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid " & _
                "WHERE icp.iprojectid = " & iprojectid & " " & _
                "GROUP BY icp.iprojectid "

                sumaEntradas = getSQLQueryAsDouble(0, querySumaEntradas)
                lblTotalEntradas.Text = FormatCurrency(sumaEntradas, 2, TriState.True, TriState.False, TriState.True)



                Dim querySalidas As String = ""
                querySalidas = "SELECT tmpA.isupplierinvoiceid, STR_TO_DATE(CONCAT(tmpA.iupdatedate, ' ', tmpA.supdatetime), '%Y%c%d %T') AS 'Fecha Pago', " & _
                "s.ssuppliername AS 'Proveedor', tmpA.ssupplierinvoicefolio AS 'Folio Factura', " & _
                "STR_TO_DATE(CONCAT(tmpA.iinvoicedate, ' ', tmpA.sinvoicetime), '%Y%c%d %T') AS 'Fecha Factura', " & _
                "sit.ssupplierinvoicetypedescription AS 'Tipo Factura', tmpA.sexpensedescription AS 'Descripcion', FORMAT(tmpA.total, 2) AS 'Total Factura', " & _
                "FORMAT(py.dpaymentamount, 2) AS 'Importe Pagado', pyt.spaymenttypedescription AS 'Tipo de Pago', " & _
                "IF(ba.sbankname IS NULL, '', ba.sbankname) AS 'Banco Destino', py.sdestinationaccount AS 'Cuenta Destino', " & _
                "py.sdestinationreference AS 'Referencia', py.spaymentdescription AS 'Descripcion del Pago' " & _
                "FROM ( " & _
                "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                "UNION " & _
                "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "GROUP BY si.isupplierinvoiceid " & _
                ") tmpA " & _
                "JOIN supplierinvoicetypes sit ON tmpA.isupplierinvoicetypeid = sit.isupplierinvoicetypeid " & _
                "JOIN suppliers s ON tmpA.isupplierid = s.isupplierid " & _
                "JOIN supplierinvoicepayments sipy ON tmpA.isupplierinvoiceid = sipy.isupplierinvoiceid " & _
                "JOIN payments py ON sipy.ipaymentid = py.ipaymentid " & _
                "JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid " & _
                "JOIN banks ba ON py.idestinationbankid = ba.ibankid " & _
                "ORDER BY 2 "

                setDataGridView(dgvSalidas, querySalidas, True)

                dgvSalidas.Columns(0).Visible = False

                dgvSalidas.Columns(0).Width = 30
                dgvSalidas.Columns(1).Width = 70
                dgvSalidas.Columns(2).Width = 70
                dgvSalidas.Columns(3).Width = 100
                dgvSalidas.Columns(4).Width = 150
                dgvSalidas.Columns(5).Width = 150
                dgvSalidas.Columns(6).Width = 200
                dgvSalidas.Columns(7).Width = 200
                dgvSalidas.Columns(8).Width = 100
                dgvSalidas.Columns(9).Width = 70


                Dim sumaSalidas As Double = 0.0
                Dim querySumaSalidas As String = ""
                querySumaSalidas = "SELECT FORMAT(SUM(py.dpaymentamount), 2) AS 'Importe Pagado' " & _
                "FROM ( " & _
                "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                "UNION " & _
                "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
                "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "GROUP BY si.isupplierinvoiceid " & _
                ") tmpA " & _
                "JOIN supplierinvoicepayments sipy ON tmpA.isupplierinvoiceid = sipy.isupplierinvoiceid " & _
                "JOIN payments py ON sipy.ipaymentid = py.ipaymentid " & _
                "JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid " & _
                "JOIN banks ba ON py.idestinationbankid = ba.ibankid "

                sumaSalidas = getSQLQueryAsDouble(0, querySumaSalidas)
                lblTotalSalidas.Text = FormatCurrency(sumaSalidas, 2, TriState.True, TriState.False, TriState.True)



            ElseIf tcProyecto.SelectedTab Is tpAnalisisUtilidades Then


                If viewAnalysis = False Then
                    tcProyecto.SelectedTab = tpDatosIniciales
                End If

                Dim dsProyecto As DataSet
                dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
                "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
                "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
                "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, p.iprojectstarteddate, p.sprojectstartedtime, " & _
                "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
                "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)


                Dim porcentajeIVA As Double
                Try
                    porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
                Catch ex As Exception
                    porcentajeIVA = 0.0
                End Try


                Dim taxApplicable As Integer = 1
                Try
                    taxApplicable = CInt(dsProyecto.Tables(0).Rows(0).Item("sprojectTaxApplicable"))
                Catch ex As Exception
                    taxApplicable = 1
                End Try

                If taxApplicable = 1 Then
                    chkDoNOTApplyTax.Checked = False
                Else
                    chkDoNOTApplyTax.Checked = True
                End If

                Dim queryPrecioSubTotal As String
                Dim precioSubTotal As Double = 0.0
                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                Dim precioTotal As Double = 0.0

                If chkDoNOTApplyTax.Checked = True Then
                    precioTotal = precioSubTotal
                Else
                    precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)
                End If

                txtPrecioPresupuestado.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                Dim queryCostoPresupuestado As String
                Dim costoPresupuestado As Double = 0.0

                'queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo)))) AS dcardamount " & _
                queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON p.iprojectid = ptf.iprojectid " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid
                costoPresupuestado = getSQLQueryAsDouble(0, queryCostoPresupuestado)

                txtCostoPresupuestado.Text = FormatCurrency(costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                txtUtilidadPrevistaDeEjecucion.Text = FormatCurrency(precioTotal - costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtPorcentajePrevistoDeUtilidadEnObra.Text = FormatCurrency((1 - (costoPresupuestado / precioTotal)) * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim porcentajeComisionObra As Double = 0.0
                Dim porcentajeComisionCierre As Double = 0.0

                Try
                    porcentajeComisionObra = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectbuildingcommission"))
                Catch ex As Exception
                    porcentajeComisionObra = 0.0
                End Try

                Try
                    porcentajeComisionCierre = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectclosingcommission"))
                Catch ex As Exception
                    porcentajeComisionCierre = 0.0
                End Try

                txtPorcentajeDeComisionDeObraPresupuestada.Text = FormatCurrency(porcentajeComisionObra * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtImporteComisionDeObraPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtPorcentajePorCierreDeOperacionPresupuestada.Text = FormatCurrency(porcentajeComisionCierre * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtImportePorCierreDeOperacionPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionCierre, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtUtilidadFinalPrevista.Text = FormatCurrency((precioTotal - costoPresupuestado) - ((precioTotal - costoPresupuestado) * porcentajeComisionObra) - ((precioTotal - costoPresupuestado) * porcentajeComisionCierre), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim querySumaEntradas As String = ""
                Dim querySumaSalidas As String = ""
                Dim querySumaFacturasAsignadas As String = ""
                Dim querySumaValesCombustible As String = ""
                Dim querySumaNominas As String = ""
                Dim querySumaGastosAdminAsignados As String = ""

                querySumaFacturasAsignadas = "SELECT SUM(total) FROM ( " & _
                "SELECT sip.iprojectid, sip.isupplierinvoiceid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
                "GROUP BY si.isupplierinvoiceid " & _
                "UNION " & _
                "SELECT sip.iprojectid, sip.isupplierinvoiceid, IF((SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
                "FROM supplierinvoiceprojects sip " & _
                "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
                "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
                "WHERE sip.iprojectid = " & iprojectid & " " & _
                "GROUP BY si.isupplierinvoiceid " & _
                ") tmpA"

                querySumaValesCombustible = "" & _
                "SELECT FORMAT(IF(SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed) IS NULL, 0, SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed)), 2) AS totalvalesasignados " & _
                "FROM gasvoucherprojects gvp " & _
                "JOIN gasvouchers gv ON gvp.igasvoucherid = gv.igasvoucherid " & _
                "WHERE gvp.iprojectid = " & iprojectid & " "

                querySumaNominas = "" & _
                "SELECT FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS total " & _
                "FROM payrolls pr " & _
                "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
                "WHERE pr.iprojectid = " & iprojectid & " "

                querySumaGastosAdminAsignados = "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid

                querySumaEntradas = "SELECT SUM(ic.dincomeamount) FROM incomes ic JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid WHERE icp.iprojectid = " & iprojectid & " GROUP BY icp.iprojectid "
                querySumaSalidas = "SELECT SUM(py.dpaymentamount) FROM payments py LEFT JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid JOIN supplierinvoicepayments sipy ON py.ipaymentid = sipy.ipaymentid LEFT JOIN supplierinvoiceprojects sip ON sipy.isupplierinvoiceid = sip.isupplierinvoiceid WHERE sip.iprojectid = " & iprojectid & " GROUP BY sip.iprojectid"

                Dim sumaFacturasAsignadas As Double = 0.0
                Dim sumaEntradas As Double = 0.0
                Dim sumaSalidas As Double = 0.0
                Dim sumaFacturasCombustible As Double = 0.0
                Dim sumaNominas As Double = 0.0
                Dim sumaGastosAdminAsignados As Double = 0.0

                sumaFacturasAsignadas = getSQLQueryAsDouble(0, querySumaFacturasAsignadas)
                sumaEntradas = getSQLQueryAsDouble(0, querySumaEntradas)
                sumaSalidas = getSQLQueryAsDouble(0, querySumaSalidas)
                sumaFacturasCombustible = getSQLQueryAsDouble(0, querySumaValesCombustible)
                sumaNominas = getSQLQueryAsDouble(0, querySumaNominas)
                sumaGastosAdminAsignados = getSQLQueryAsDouble(0, querySumaGastosAdminAsignados)

                txtEntradas.Text = FormatCurrency(sumaEntradas, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtCostoRealDeLaObra.Text = FormatCurrency(sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtUtilidadDeEjecucionDeObraReal.Text = FormatCurrency(sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                Dim porcentajeDeAvanceDeObra As Double = 0.0
                Try
                    porcentajeDeAvanceDeObra = ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / costoPresupuestado) * 100
                Catch ex As Exception

                End Try

                lblPorcentajeDeAvanceDeObra.Text = FormatCurrency(porcentajeDeAvanceDeObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

                If porcentajeDeAvanceDeObra < 25 Then
                    lblPorcentajeDeAvanceDeObra.ForeColor = Color.Blue
                ElseIf porcentajeDeAvanceDeObra > 25 And porcentajeDeAvanceDeObra < 50 Then
                    lblPorcentajeDeAvanceDeObra.ForeColor = Color.Green
                ElseIf porcentajeDeAvanceDeObra > 50 And porcentajeDeAvanceDeObra < 75 Then
                    lblPorcentajeDeAvanceDeObra.ForeColor = Color.GreenYellow
                ElseIf porcentajeDeAvanceDeObra > 75 And porcentajeDeAvanceDeObra < 90 Then
                    lblPorcentajeDeAvanceDeObra.ForeColor = Color.OrangeRed
                ElseIf porcentajeDeAvanceDeObra > 90 Then
                    lblPorcentajeDeAvanceDeObra.ForeColor = Color.Red
                End If

                Dim porcentajeDeUtilidadEnObraReal As Double = 0.0
                Try
                    porcentajeDeUtilidadEnObraReal = (1 - ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / sumaEntradas)) * 100
                Catch ex As Exception

                End Try

                txtPorcentajeDeUtilidadEnObraReal.Text = FormatCurrency(porcentajeDeUtilidadEnObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim porcentajeComisionObraReal As Double = 0.0
                Dim porcentajeComisionCierreReal As Double = 0.0

                Try
                    porcentajeComisionObraReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealbuildingcommission"))
                Catch ex As Exception
                    porcentajeComisionObraReal = 0.0
                End Try

                Try
                    porcentajeComisionCierreReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealclosingcommission"))
                Catch ex As Exception
                    porcentajeComisionCierreReal = 0.0
                End Try

                txtPorcentajeDeComisionDeObraReal.Text = FormatCurrency(porcentajeComisionObraReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtImporteComisiónDeObraReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtPorcentajePorCierreDeOperacionReal.Text = FormatCurrency(porcentajeComisionCierreReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtImportePorCierreDeOperacionReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtUtilidadFinalReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim fechaTerminoPrevista As Integer = 0
                Dim fechaInicio As Integer = 0
                Dim fechaTerminoReal As Integer = 0

                Try
                    fechaInicio = dsProyecto.Tables(0).Rows(0).Item("iprojectstarteddate")
                    fechaTerminoPrevista = dsProyecto.Tables(0).Rows(0).Item("iprojectforecastedclosingdate")
                    fechaTerminoReal = dsProyecto.Tables(0).Rows(0).Item("iprojectrealclosingdate")
                Catch ex As Exception
                    fechaTerminoReal = 0
                End Try

                If fechaTerminoPrevista > 0 Then
                    dtFechaInicio1.Value = convertYYYYMMDDtoDDhyphenMMhyphenYYYY(fechaInicio)
                    dtFechaInicio2.Value = convertYYYYMMDDtoDDhyphenMMhyphenYYYY(fechaInicio)
                    dtFechaTerminoPrevista.Value = convertYYYYMMDDtoDDhyphenMMhyphenYYYY(fechaTerminoPrevista)
                End If

                If fechaTerminoPrevista = 0 Then

                    lblStatusProyecto.Text = "NO SE HA DEFINIDO FECHA DE TÉRMINO PREVISTA"
                    lblStatusProyecto.ForeColor = Color.Red

                ElseIf fechaTerminoPrevista > 0 And fechaTerminoReal = 0 Then

                    If fechaTerminoPrevista > getMySQLDate() Then

                        lblStatusProyecto.Text = "Quedan " & howManyDaysBetween(convertYYYYMMDDtoDDhyphenMMhyphenYYYY(getMySQLDate()), dtFechaTerminoPrevista.Value) & " días para terminar el proyecto"
                        lblStatusProyecto.ForeColor = Color.Green

                    ElseIf fechaTerminoPrevista < getMySQLDate() Then

                        lblStatusProyecto.Text = "El proyecto lleva " & howManyDaysBetween(dtFechaTerminoPrevista.Value, convertYYYYMMDDtoDDhyphenMMhyphenYYYY(getMySQLDate())) & " días de retraso"
                        lblStatusProyecto.ForeColor = Color.Red

                    Else

                        lblStatusProyecto.Text = "Hoy se entrega el proyecto"
                        lblStatusProyecto.ForeColor = Color.Red

                    End If

                    lblFechaInicio2.Visible = False
                    lblFechaTerminoReal.Visible = False
                    dtFechaInicio2.Visible = False
                    dtFechaTerminoReal.Visible = False

                    btnTerminarObra.Visible = True

                ElseIf fechaTerminoPrevista > 0 And fechaTerminoReal > 0 Then

                    dtFechaTerminoReal.Value = convertYYYYMMDDtoDDhyphenMMhyphenYYYY(fechaTerminoReal)

                    If fechaTerminoReal > fechaTerminoPrevista Then

                        If (fechaTerminoReal - fechaTerminoPrevista) = 1 Then

                            lblStatusProyecto.Text = "Proyecto Terminado con 1 día de retraso"
                            lblStatusProyecto.ForeColor = Color.Red

                        Else

                            lblStatusProyecto.Text = "Proyecto Terminado con " & howManyDaysBetween(dtFechaTerminoPrevista.Value, dtFechaTerminoReal.Value) & " días de retraso"
                            lblStatusProyecto.ForeColor = Color.Red

                        End If

                    ElseIf fechaTerminoReal < fechaTerminoPrevista Then

                        lblStatusProyecto.Text = "Proyecto Terminado con " & howManyDaysBetween(dtFechaTerminoReal.Value, dtFechaTerminoPrevista.Value) & " días de anticipación! Felicidades!"
                        lblStatusProyecto.ForeColor = Color.Green

                    End If

                    btnTerminarObra.Visible = False
                    isHistoric = True

                End If



            ElseIf tcProyecto.SelectedTab Is tpReportes Then



                If viewReports = False Then
                    tcProyecto.SelectedTab = tpDatosIniciales
                End If

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                Dim dsReportes As DataSet
                dsReportes = getSQLQueryAsDataset(0, "SELECT * FROM projectreports WHERE iprojectid = " & iprojectid)

                If dsReportes.Tables(0).Rows.Count < 1 Then
                    Exit Sub
                End If

                tcReportes.TabPages.Clear()

                For i = 0 To dsReportes.Tables(0).Rows.Count - 1

                    If dsReportes.Tables(0).Rows(i).Item("sreportquery") = "" Then
                        Continue For
                    End If

                    reportesTabPage = New TabPage
                    reportesTabPage.Name = dsReportes.Tables(0).Rows(i).Item("stabid")
                    reportesTabPage.Text = dsReportes.Tables(0).Rows(i).Item("stabname")
                    reportesTabPage.Dock = DockStyle.None
                    reportesTabPage.Location = New Point(0, 24)

                    dgvReporte = New DataGridView
                    btnExportarReporte = New Button

                    dgvReporte.Location = New Drawing.Point(5, 5)

                    dgvReporte.Height = tcReportes.Height - 40
                    dgvReporte.Width = tcReportes.Width - 48

                    btnExportarReporte.Enabled = True
                    btnExportarReporte.Visible = True
                    btnExportarReporte.Image = Global.Oversight.My.Resources.Resources.excel12x12
                    btnExportarReporte.Location = New System.Drawing.Point(5 + dgvReporte.Width + 4, 5)
                    btnExportarReporte.Name = "btnExportarReporte"
                    btnExportarReporte.Size = New System.Drawing.Size(28, 23)
                    btnExportarReporte.TabIndex = 0
                    btnExportarReporte.TabStop = False
                    btnExportarReporte.UseVisualStyleBackColor = True
                    btnExportarReporte.Text = ""

                    reportesTabPage.Controls.Add(Me.btnExportarReporte)

                    Dim dsReportesColumnsSizes As DataSet
                    dsReportesColumnsSizes = getSQLQueryAsDataset(0, "SELECT icolumnid, columnwidth FROM projectreportcolumnssizes WHERE iprojectid = " & iprojectid & " AND ireportid = " & dsReportes.Tables(0).Rows(i).Item("ireportid"))

                    executeSQLCommand(0, dsReportes.Tables(0).Rows(i).Item("sreportbeforequery"))

                    setDataGridView(dgvReporte, dsReportes.Tables(0).Rows(i).Item("sreportquery"), True)

                    executeSQLCommand(0, dsReportes.Tables(0).Rows(i).Item("sreportafterquery"))

                    dgvReporte.AllowUserToAddRows = False
                    dgvReporte.AllowUserToDeleteRows = False
                    dgvReporte.MultiSelect = False
                    dgvReporte.SelectionMode = DataGridViewSelectionMode.FullRowSelect
                    dgvReporte.RowHeadersVisible = False
                    dgvReporte.AutoResizeColumns(DataGridViewAutoSizeColumnsMode.None)

                    Dim alto As Integer = 20

                    Try
                        alto = dsReportes.Tables(0).Rows(i).Item("rowheight")
                    Catch ex As Exception

                    End Try

                    dgvReporte.ColumnHeadersHeight = alto

                    reportesTabPage.Controls.Add(dgvReporte)

                    tcReportes.TabPages.Add(reportesTabPage)

                    If dsReportesColumnsSizes.Tables(0).Rows.Count > 0 Then

                        For j = 0 To dsReportesColumnsSizes.Tables(0).Rows.Count - 1

                            Dim columna As Integer = 0
                            Dim ancho As Integer = 70

                            Try
                                columna = dsReportesColumnsSizes.Tables(0).Rows(j).Item("icolumnid")
                                ancho = dsReportesColumnsSizes.Tables(0).Rows(j).Item("columnwidth")
                            Catch ex As Exception

                            End Try

                            dgvReporte.Columns(j).Width = ancho

                        Next j

                    End If


                    dsReportesColumnsSizes.Clear()
                    dsReportesColumnsSizes.Dispose()

                Next i

                currentSelectedTabtcReportes = dsReportes.Tables(0).Rows(0).Item("stabname")

            End If

        Else
            tcProyecto.SelectedTab = tpDatosIniciales
        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub tcInsumosObra_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tcInsumosObra.SelectedIndexChanged


        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor


        If tcInsumosObra.SelectedTab Is tpExplosion Then



            Dim queryExplosionInsumos As String = ""

            queryExplosionInsumos = "" & _
            "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', t2.sinputunit AS 'Unidad de Medida', " & _
            "FORMAT(SUM(t2.dcardinputqty), 3) AS 'Cantidad Requerida', " & _
            "FORMAT(SUM(t2.ipidinputqty), 3) AS 'Cantidad En Inventario', " & _
            "t2.ipisinputlocation AS 'Guardado en', " & _
            "t2.ipifecharecibido AS 'Fecha Ultimo Mov', " & _
            "t2.ipistatus AS 'Status', " & _
            "FORMAT(SUM(t2.cantidadapedir), 3) AS 'Cantidad Sugerida a Pedir', " & _
            "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir' " & _
            "FROM ( " & _
            "SELECT " & _
            "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
            "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
            "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
            "t1.pexdinputrealqty AS cantidadajustada " & _
            "FROM ( " & _
            "SELECT " & _
            "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
            "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
            "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
            "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
            "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
            "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
            "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
            "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
            "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
            "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
            "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
            "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
            "UNION " & _
            "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
            "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
            "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
            "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
            "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
            "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
            "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
            "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
            "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
            "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
            "UNION " & _
            "SELECT " & _
            "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
            "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
            "JOIN inputs i ON pex.iinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
            "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
            "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
            "GROUP BY pex.iprojectid, i.iinputid " & _
            ") t1 " & _
            ")t2 " & _
            "GROUP BY t2.iinputid " & _
            "ORDER BY 3 "

            executeSQLCommand(0, queryExplosionInsumos)

            setDataGridView(dgvExplosionDeInsumos, queryExplosionInsumos, False)

            dgvExplosionDeInsumos.Columns(0).Visible = False
            dgvExplosionDeInsumos.Columns(1).Visible = False

            dgvExplosionDeInsumos.Columns(1).ReadOnly = True
            dgvExplosionDeInsumos.Columns(2).ReadOnly = True
            dgvExplosionDeInsumos.Columns(3).ReadOnly = True
            dgvExplosionDeInsumos.Columns(4).ReadOnly = True
            dgvExplosionDeInsumos.Columns(5).ReadOnly = True
            dgvExplosionDeInsumos.Columns(6).ReadOnly = True
            dgvExplosionDeInsumos.Columns(7).ReadOnly = True
            dgvExplosionDeInsumos.Columns(8).ReadOnly = True
            dgvExplosionDeInsumos.Columns(9).ReadOnly = True
            dgvExplosionDeInsumos.Columns(10).ReadOnly = False

            dgvExplosionDeInsumos.Columns(1).Width = 30
            dgvExplosionDeInsumos.Columns(2).Width = 300
            dgvExplosionDeInsumos.Columns(3).Width = 70
            dgvExplosionDeInsumos.Columns(4).Width = 70
            dgvExplosionDeInsumos.Columns(5).Width = 70
            dgvExplosionDeInsumos.Columns(6).Width = 150
            dgvExplosionDeInsumos.Columns(7).Width = 130
            dgvExplosionDeInsumos.Columns(8).Width = 100
            dgvExplosionDeInsumos.Columns(9).Width = 70
            dgvExplosionDeInsumos.Columns(10).Width = 70

            btnGenerarHojaControlCompras.Enabled = False


        ElseIf tcInsumosObra.SelectedTab Is tpExplosionPorProveedor Then



            Dim queryExplosionInsumosPorProveedor As String = ""

            queryExplosionInsumosPorProveedor = "" & _
            "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', " & _
            "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir', " & _
            "t2.sinputunit AS 'Unidad de Medida', " & _
            "t2.ssuppliername AS 'Proveedor que nos ha surtido este Insumo Antes' " & _
            "FROM ( " & _
            "SELECT " & _
            "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
            "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
            "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
            "t1.pexdinputrealqty AS cantidadajustada, t1.ssuppliername " & _
            "FROM ( " & _
            "SELECT " & _
            "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
            "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
            "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
            "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
            "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
            "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
            "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty, sp.ssuppliername " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
            "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
            "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
            "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
            "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
            "LEFT JOIN supplierinvoiceinputs sii ON i.iinputid = sii.iinputid " & _
            "LEFT JOIN supplierinvoices siv ON siv.isupplierinvoiceid = sii.isupplierinvoiceid " & _
            "LEFT JOIN suppliers sp ON siv.isupplierid = sp.isupplierid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
            "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
            "UNION " & _
            "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
            "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
            "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
            "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
            "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty, sp.ssuppliername " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
            "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
            "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
            "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
            "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
            "LEFT JOIN supplierinvoiceinputs sii ON i.iinputid = sii.iinputid " & _
            "LEFT JOIN supplierinvoices siv ON siv.isupplierinvoiceid = sii.isupplierinvoiceid " & _
            "LEFT JOIN suppliers sp ON siv.isupplierid = sp.isupplierid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
            "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
            "UNION " & _
            "SELECT " & _
            "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
            "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty, sp.ssuppliername " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
            "JOIN inputs i ON pex.iinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "LEFT JOIN supplierinvoiceinputs sii ON i.iinputid = sii.iinputid " & _
            "LEFT JOIN supplierinvoices siv ON siv.isupplierinvoiceid = sii.isupplierinvoiceid " & _
            "LEFT JOIN suppliers sp ON siv.isupplierid = sp.isupplierid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
            "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
            "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
            "GROUP BY pex.iprojectid, i.iinputid " & _
            ") t1 " & _
            ")t2 " & _
            "WHERE t2.cantidadajustada > 0 " & _
            "GROUP BY t2.iinputid " & _
            "ORDER BY 3 "



            executeSQLCommand(0, queryExplosionInsumosPorProveedor)

            setDataGridView(dgvExplosionDeInsumosPorProveedor, queryExplosionInsumosPorProveedor, True)

            dgvExplosionDeInsumosPorProveedor.Columns(0).Visible = False
            dgvExplosionDeInsumosPorProveedor.Columns(1).Visible = False

            dgvExplosionDeInsumosPorProveedor.Columns(1).Width = 30
            dgvExplosionDeInsumosPorProveedor.Columns(2).Width = 300
            dgvExplosionDeInsumosPorProveedor.Columns(3).Width = 70
            dgvExplosionDeInsumosPorProveedor.Columns(4).Width = 70
            dgvExplosionDeInsumosPorProveedor.Columns(5).Width = 100

            If exportHojaControlCompras = True Then
                btnGenerarHojaControlCompras.Enabled = True
            End If

        ElseIf tcInsumosObra.SelectedTab Is tpInsumosFacturadosNoPresupuestados Then



            Dim queryInsumosNoFacturados As String

            queryInsumosNoFacturados = "" & _
            "SELECT i.iinputid, i.sinputdescription AS 'Insumo', " & _
            "i.sinputunit AS 'Unidad de Medida', FORMAT(SUM(suii.dinputqty), 2) AS 'Cantidad Comprada' " & _
            "FROM inputs i " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "JOIN supplierinvoiceinputs suii ON i.iinputid = suii.iinputid " & _
            "JOIN supplierinvoices si ON suii.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceprojects sip ON suii.isupplierinvoiceid = sip.isupplierinvoiceid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND sip.iprojectid = " & iprojectid & " " & _
            "AND i.iinputid NOT IN (SELECT pex.iinputid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex WHERE pex.iprojectid = " & iprojectid & ") " & _
            "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
            "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
            "GROUP BY i.iinputid "

            setDataGridView(dgvInsumosFacturadosNoPresupuestados, queryInsumosNoFacturados, True)

            dgvInsumosFacturadosNoPresupuestados.Columns(0).Visible = False

            dgvInsumosFacturadosNoPresupuestados.Columns(1).Width = 200
            dgvInsumosFacturadosNoPresupuestados.Columns(2).Width = 70
            dgvInsumosFacturadosNoPresupuestados.Columns(3).Width = 70

            btnGenerarHojaControlCompras.Enabled = False


        ElseIf tcInsumosObra.SelectedTab Is tpPedidos Then

            Dim queryPedidos As String = ""
            queryPedidos = "SELECT oi.iinputid, STR_TO_DATE(CONCAT(oi.iupdatedate, ' ', oi.supdatetime), '%Y%c%d %T') AS 'Fecha Ultima Mod', " & _
            "i.sinputdescription AS 'Material', FORMAT(oi.dinputqty, 3) AS 'Cantidad', pe.speoplefullname AS 'Persona que hizo el Pedido' " & _
            "FROM orders o " & _
            "JOIN orderinputs oi ON o.iorderid = oi.iorderid " & _
            "JOIN inputs i ON oi.iinputid = i.iinputid " & _
            "LEFT JOIN people pe ON o.ipeopleid = pe.ipeopleid " & _
            "WHERE o.iprojectid = " & iprojectid & " " & _
            "ORDER BY o.iupdatedate, o.supdatetime, i.sinputdescription, oi.dinputqty "

            setDataGridView(dgvPedidosDeObra, queryPedidos, True)

            dgvPedidosDeObra.Columns(0).Visible = False

            dgvPedidosDeObra.Columns(0).Width = 30
            dgvPedidosDeObra.Columns(1).Width = 70
            dgvPedidosDeObra.Columns(2).Width = 300
            dgvPedidosDeObra.Columns(3).Width = 70
            dgvPedidosDeObra.Columns(4).Width = 100

            btnGenerarHojaControlCompras.Enabled = False


        ElseIf tcInsumosObra.SelectedTab Is tpEnvios Then



            Dim queryEnvios As String = ""
            queryEnvios = "SELECT si.iinputid, STR_TO_DATE(CONCAT(si.iupdatedate, ' ', si.supdatetime), '%Y%c%d %T') AS 'Fecha Ultima Mod', " & _
            "i.sinputdescription AS 'Material', FORMAT(si.dinputqty, 3) AS 'Cantidad', pe1.speoplefullname AS 'Chofer', pe2.speoplefullname AS 'Persona que recibio el Envio' " & _
            "FROM shipments s " & _
            "JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid " & _
            "JOIN inputs i ON si.iinputid = i.iinputid " & _
            "LEFT JOIN people pe1 ON s.idriverid = pe1.ipeopleid " & _
            "LEFT JOIN people pe2 ON s.ireceiverid = pe2.ipeopleid " & _
            "WHERE s.iprojectid = " & iprojectid & " " & _
            "ORDER BY si.iupdatedate, si.supdatetime, i.sinputdescription, si.dinputqty "

            setDataGridView(dgvEnviosALaObra, queryEnvios, True)

            dgvEnviosALaObra.Columns(0).Visible = False

            dgvEnviosALaObra.Columns(0).Width = 30
            dgvEnviosALaObra.Columns(1).Width = 70
            dgvEnviosALaObra.Columns(2).Width = 300
            dgvEnviosALaObra.Columns(3).Width = 70
            dgvEnviosALaObra.Columns(4).Width = 100
            dgvEnviosALaObra.Columns(5).Width = 100

            btnGenerarHojaControlCompras.Enabled = False


        End If


        Cursor.Current = System.Windows.Forms.Cursors.Default


    End Sub


    Private Sub tcContables_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tcContables.SelectedIndexChanged


        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor


        If tcContables.SelectedTab Is tpFacturas Then


            Dim queryFacturas As String = ""

            queryFacturas = "" & _
            "SELECT tmpA.isupplierinvoiceid, STR_TO_DATE(CONCAT(tmpA.iinvoicedate, ' ', tmpA.sinvoicetime), '%Y%c%d %T') AS 'Fecha', " & _
            "sit.ssupplierinvoicetypedescription AS 'Tipo Factura', s.ssuppliername AS 'Proveedor', tmpA.ssupplierinvoicefolio AS 'Folio Factura', " & _
            "tmpA.sexpensedescription AS 'Descripcion', FORMAT(tmpA.total, 2) AS 'Total Factura', " & _
            "tmpA.sexpenselocation AS 'Lugar donde se hizo la compra', pe.speoplefullname AS 'Persona que recibio la Factura' " & _
            "FROM ( " & _
            "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            "UNION " & _
            "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "GROUP BY si.isupplierinvoiceid " & _
            ") tmpA " & _
            "JOIN supplierinvoicetypes sit ON tmpA.isupplierinvoicetypeid = sit.isupplierinvoicetypeid " & _
            "JOIN suppliers s ON tmpA.isupplierid = s.isupplierid " & _
            "JOIN people pe ON tmpA.ipeopleid = pe.ipeopleid " & _
            "ORDER BY 2 "

            setDataGridView(dgvFacturas, queryFacturas, True)

            dgvFacturas.Columns(0).Visible = False

            dgvFacturas.Columns(0).Width = 30
            dgvFacturas.Columns(1).Width = 70
            dgvFacturas.Columns(2).Width = 150
            dgvFacturas.Columns(3).Width = 200
            dgvFacturas.Columns(4).Width = 100
            dgvFacturas.Columns(5).Width = 200
            dgvFacturas.Columns(6).Width = 70
            dgvFacturas.Columns(7).Width = 150
            dgvFacturas.Columns(8).Width = 150


            Dim sumaFacturas As Double = 0.0
            Dim querySumaFacturas As String = ""
            querySumaFacturas = "SELECT SUM(total) FROM ( " & _
            "SELECT sip.iprojectid, sip.isupplierinvoiceid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            "UNION " & _
            "SELECT sip.iprojectid, sip.isupplierinvoiceid, IF((SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "GROUP BY si.isupplierinvoiceid " & _
            ") tmpA"

            sumaFacturas = getSQLQueryAsDouble(0, querySumaFacturas)
            lblTotalFacturas.Text = FormatCurrency(sumaFacturas, 2, TriState.True, TriState.False, TriState.True)



        ElseIf tcContables.SelectedTab Is tpCombustible Then


            Dim queryValesCombustible As String = ""

            queryValesCombustible = "" & _
            "SELECT gv.igasvoucherid, gv.iassetid, STR_TO_DATE(CONCAT(gv.igasdate, ' ', gv.sgastime), '%Y%c%d %T') AS 'Fecha', a.sassetdescription AS 'Auto', " & _
            "gv.scarmileageatrequest AS 'Kms al momento', gv.scarorigindestination AS 'Origen Destino', gv.svouchercomment AS 'Comentarios', gv.ipeopleid, " & _
            "p.speoplefullname AS 'Persona', FORMAT(gvp.dliters, 4) AS 'Litros', gt.sgastype AS 'Tipo', FORMAT((gv.dgasvoucheramount/gv.dlitersdispensed)*gvp.dliters, 2) AS 'Monto del Vale' " & _
            "FROM gasvouchers gv " & _
            "JOIN gasvoucherprojects gvp ON gv.igasvoucherid = gvp.igasvoucherid " & _
            "JOIN gastypes gt ON gv.igastypeid = gt.igastypeid " & _
            "JOIN assets a ON gv.iassetid = a.iassetid " & _
            "LEFT JOIN people p ON gv.ipeopleid = p.ipeopleid " & _
            "WHERE gvp.iprojectid = " & iprojectid

            setDataGridView(dgvVales, queryValesCombustible, True)

            dgvVales.Columns(0).Visible = False
            dgvVales.Columns(1).Visible = False
            dgvVales.Columns(7).Visible = False

            dgvVales.Columns(0).Width = 30
            dgvVales.Columns(1).Width = 30
            dgvVales.Columns(2).Width = 70
            dgvVales.Columns(3).Width = 200
            dgvVales.Columns(4).Width = 70
            dgvVales.Columns(5).Width = 200
            dgvVales.Columns(6).Width = 200
            dgvVales.Columns(7).Width = 30
            dgvVales.Columns(8).Width = 200
            dgvVales.Columns(9).Width = 70
            dgvVales.Columns(10).Width = 100
            dgvVales.Columns(11).Width = 100

            Dim sumaVales As Double = 0.0
            Dim querySumaVales As String = ""

            querySumaVales = "" & _
            "SELECT FORMAT(IF(SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed) IS NULL, 0, SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed)), 2) AS totalvalesasignados " & _
            "FROM gasvoucherprojects gvp " & _
            "JOIN gasvouchers gv ON gvp.igasvoucherid = gv.igasvoucherid " & _
            "WHERE gvp.iprojectid = " & iprojectid & " "

            sumaVales = getSQLQueryAsDouble(0, querySumaVales)
            lblTotalVales.Text = FormatCurrency(sumaVales, 2, TriState.True, TriState.False, TriState.True)



        ElseIf tcContables.SelectedTab Is tpGastosAdministrativosAsignados Then


            Dim queryFacturasNoAsignadasAProyectoDuranteElMismoPeriodo As String = ""

            queryFacturasNoAsignadasAProyectoDuranteElMismoPeriodo = "" & _
            "SELECT tmpA.isupplierinvoiceid, STR_TO_DATE(CONCAT(tmpA.iinvoicedate, ' ', tmpA.sinvoicetime), '%Y%c%d %T') AS 'Fecha', " & _
            "sit.ssupplierinvoicetypedescription AS 'Tipo Factura', s.ssuppliername AS 'Proveedor', tmpA.ssupplierinvoicefolio AS 'Folio Factura', " & _
            "tmpA.sexpensedescription AS 'Descripcion', FORMAT(tmpA.total, 2) AS 'Total Factura', " & _
            "tmpA.sexpenselocation AS 'Lugar donde se hizo la compra', pe.speoplefullname AS 'Persona que recibio la Factura' " & _
            "FROM ( " & _
            "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty)*(1+si.dIVApercentage) as total " & _
            "FROM supplierinvoices si " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
            "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
            "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
            "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            "UNION " & _
            "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
            "FROM supplierinvoices si " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
            "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
            "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            ") tmpA " & _
            "JOIN supplierinvoicetypes sit ON tmpA.isupplierinvoicetypeid = sit.isupplierinvoicetypeid " & _
            "JOIN suppliers s ON tmpA.isupplierid = s.isupplierid " & _
            "JOIN people pe ON tmpA.ipeopleid = pe.ipeopleid " & _
            "ORDER BY 2 "

            setDataGridView(dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo, queryFacturasNoAsignadasAProyectoDuranteElMismoPeriodo, True)

            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(0).Visible = False

            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(0).Width = 30
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(1).Width = 120
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(2).Width = 150
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(3).Width = 200
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(4).Width = 70
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(5).Width = 200
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(6).Width = 70
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(7).Width = 150
            dgvFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Columns(8).Width = 150


            Dim sumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo As Double = 0.0
            Dim querySumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo As String = ""

            querySumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo = "" & _
            "SELECT FORMAT(SUM(tmpA.total), 2) AS 'Total Factura' " & _
            "FROM ( " & _
            "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty)*(1+si.dIVApercentage) as total " & _
            "FROM supplierinvoices si " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
            "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
            "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
            "AND si.iinvoicedate > (SELECT iprojectstarteddate from projects where iprojectid = " & iprojectid & ") " & _
            "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            "UNION " & _
            "SELECT si.isupplierid, si.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sii.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
            "FROM supplierinvoices si " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid " & _
            "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "WHERE si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoiceprojects) " & _
            "AND si.iinvoicedate > (SELECT iprojectstarteddate from projects where iprojectid = " & iprojectid & ") " & _
            "AND ((SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ") = 0 OR si.iinvoicedate < (SELECT iprojectrealclosingdate from projects where iprojectid = " & iprojectid & ")) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            ") tmpA"

            sumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo = getSQLQueryAsDouble(0, querySumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo)
            lblTotalFacturasNoAplicablesAProyectosDuranteMismoPeriodo.Text = FormatCurrency(sumaFacturasNoAplicablesAProyectosDuranteMismoPeriodo, 2, TriState.True, TriState.False, TriState.True)


            Dim queryGastosAdminAsociadosProyecto As String = ""
            queryGastosAdminAsociadosProyecto = "SELECT pc.iprojectid, pc.iadmincostid, pc.sprojectadmincostname AS 'Nombre del Costo', " & _
            "FORMAT(pc.dprojectadmincost, 2) AS 'Importe del Costo' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts pc WHERE pc.iprojectid = " & iprojectid

            setDataGridView(dgvGastosAdminAsociados, queryGastosAdminAsociadosProyecto, False)

            dgvGastosAdminAsociados.Columns(0).Visible = False
            dgvGastosAdminAsociados.Columns(1).Visible = False

            dgvGastosAdminAsociados.Columns(0).ReadOnly = True
            dgvGastosAdminAsociados.Columns(1).ReadOnly = True

            dgvGastosAdminAsociados.Columns(0).Width = 30
            dgvGastosAdminAsociados.Columns(1).Width = 30
            dgvGastosAdminAsociados.Columns(2).Width = 200
            dgvGastosAdminAsociados.Columns(3).Width = 100


        ElseIf tcContables.SelectedTab Is tpNominasYAlimentacion Then


            Dim queryNominas As String = ""

            queryNominas = "" & _
            "SELECT pr.ipayrollid, STR_TO_DATE(CONCAT(pr.ipayrolldate, ' ', pr.spayrolltime), '%Y%c%d %T') AS 'Fecha Nomina', " & _
            "pr.spayrollfrequency AS 'Frecuencia', pr.spayrolltype AS 'Tipo Nomina', p.sprojectname AS 'Proyecto', " & _
            "IF(pr.spayrolldescription IS NULL, '', pr.spayrolldescription) AS 'Descripcion Nomina', " & _
            "STR_TO_DATE(CONCAT(pr.ipayrollstartdate, ' ', pr.spayrollstarttime), '%Y%c%d %T') AS 'Desde', " & _
            "STR_TO_DATE(CONCAT(pr.ipayrollenddate, ' ', pr.spayrollendtime), '%Y%c%d %T') AS 'Hasta', " & _
            "IF(pe.speoplefullname IS NULL, '', pe.speoplefullname) AS 'Supervisor', " & _
            "FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS 'Total Nomina' " & _
            "FROM payrolls pr " & _
            "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
            "JOIN projects p ON pr.iprojectid = p.iprojectid " & _
            "JOIN people pe ON pr.ipeopleid = pe.ipeopleid " & _
            "WHERE pr.iprojectid = " & iprojectid & " " & _
            "GROUP BY 1 "

            setDataGridView(dgvNominas, queryNominas, True)

            dgvNominas.Columns(0).Visible = False

            dgvNominas.Columns(0).Width = 30
            dgvNominas.Columns(1).Width = 70
            dgvNominas.Columns(2).Width = 100
            dgvNominas.Columns(3).Width = 100
            dgvNominas.Columns(4).Width = 200
            dgvNominas.Columns(5).Width = 200
            dgvNominas.Columns(6).Width = 70
            dgvNominas.Columns(7).Width = 70
            dgvNominas.Columns(8).Width = 150
            dgvNominas.Columns(9).Width = 70

            Dim sumaNominas As Double = 0.0
            Dim querySumaNominas As String = ""

            querySumaNominas = "" & _
            "SELECT FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS total " & _
            "FROM payrolls pr " & _
            "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
            "WHERE pr.iprojectid = " & iprojectid & " "

            sumaNominas = getSQLQueryAsDouble(0, querySumaNominas)
            lblTotalNominas.Text = FormatCurrency(sumaNominas, 2, TriState.True, TriState.False, TriState.True)



        ElseIf tcContables.SelectedTab Is tpAnticiposYPagos Then


            Dim queryEntradas As String = ""
            queryEntradas = "SELECT ic.iincomeid, STR_TO_DATE(CONCAT(ic.iupdatedate, ' ', ic.supdatetime), '%Y%c%d %T') AS 'Fecha Ultima Mod', " & _
            "FORMAT(ic.dincomeamount, 2) AS 'Importe', ca.scompanyaccountname AS 'Cuenta Destino', " & _
            "ic.sincomedescription AS 'Descripcion del Pago', ict.sincometypedescription AS 'Tipo de Pago' " & _
            "FROM incomes ic " & _
            "LEFT JOIN incometypes ict ON ic.iincometypeid = ict.iincometypeid " & _
            "LEFT JOIN companyaccounts ca ON ic.idestinationaccountid = ca.iaccountid " & _
            "JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid " & _
            "WHERE icp.iprojectid = " & iprojectid

            setDataGridView(dgvEntradas, queryEntradas, True)

            dgvEntradas.Columns(0).Width = 30
            dgvEntradas.Columns(1).Width = 120
            dgvEntradas.Columns(2).Width = 70
            dgvEntradas.Columns(3).Width = 150
            dgvEntradas.Columns(4).Width = 200
            dgvEntradas.Columns(5).Width = 150

            dgvEntradas.Columns(0).Visible = False

            Dim sumaEntradas As Double = 0.0
            Dim querySumaEntradas As String = ""
            querySumaEntradas = "SELECT SUM(ic.dincomeamount) " & _
            "FROM incomes ic " & _
            "LEFT JOIN incometypes ict ON ic.iincometypeid = ict.iincometypeid " & _
            "JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid " & _
            "WHERE icp.iprojectid = " & iprojectid & " " & _
            "GROUP BY icp.iprojectid "

            sumaEntradas = getSQLQueryAsDouble(0, querySumaEntradas)
            lblTotalEntradas.Text = FormatCurrency(sumaEntradas, 2, TriState.True, TriState.False, TriState.True)



        ElseIf tcContables.SelectedTab Is tpPagosFacturas Then



            Dim querySalidas As String = ""
            querySalidas = "SELECT tmpA.isupplierinvoiceid, STR_TO_DATE(CONCAT(tmpA.iupdatedate, ' ', tmpA.supdatetime), '%Y%c%d %T') AS 'Fecha Pago', " & _
            "s.ssuppliername AS 'Proveedor', tmpA.ssupplierinvoicefolio AS 'Folio Factura', " & _
            "STR_TO_DATE(CONCAT(tmpA.iinvoicedate, ' ', tmpA.sinvoicetime), '%Y%c%d %T') AS 'Fecha Factura', " & _
            "sit.ssupplierinvoicetypedescription AS 'Tipo Factura', tmpA.sexpensedescription AS 'Descripcion', FORMAT(tmpA.total, 2) AS 'Total Factura', " & _
            "FORMAT(py.dpaymentamount, 2) AS 'Importe Pagado', pyt.spaymenttypedescription AS 'Tipo de Pago', " & _
            "IF(ba.sbankname IS NULL, '', ba.sbankname) AS 'Banco Destino', py.sdestinationaccount AS 'Cuenta Destino', " & _
            "py.sdestinationreference AS 'Referencia', py.spaymentdescription AS 'Descripcion del Pago' " & _
            "FROM ( " & _
            "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            "UNION " & _
            "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "GROUP BY si.isupplierinvoiceid " & _
            ") tmpA " & _
            "JOIN supplierinvoicetypes sit ON tmpA.isupplierinvoicetypeid = sit.isupplierinvoicetypeid " & _
            "JOIN suppliers s ON tmpA.isupplierid = s.isupplierid " & _
            "JOIN supplierinvoicepayments sipy ON tmpA.isupplierinvoiceid = sipy.isupplierinvoiceid " & _
            "JOIN payments py ON sipy.ipaymentid = py.ipaymentid " & _
            "JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid " & _
            "JOIN banks ba ON py.idestinationbankid = ba.ibankid " & _
            "ORDER BY 2 "

            setDataGridView(dgvSalidas, querySalidas, True)

            dgvSalidas.Columns(0).Visible = False

            dgvSalidas.Columns(0).Width = 30
            dgvSalidas.Columns(1).Width = 120
            dgvSalidas.Columns(2).Width = 200
            dgvSalidas.Columns(3).Width = 70
            dgvSalidas.Columns(4).Width = 120
            dgvSalidas.Columns(5).Width = 130
            dgvSalidas.Columns(6).Width = 130
            dgvSalidas.Columns(7).Width = 130
            dgvSalidas.Columns(8).Width = 150
            dgvSalidas.Columns(9).Width = 100


            Dim sumaSalidas As Double = 0.0
            Dim querySumaSalidas As String = ""
            querySumaSalidas = "SELECT FORMAT(SUM(py.dpaymentamount), 2) AS 'Importe Pagado' " & _
            "FROM ( " & _
            "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
            "GROUP BY si.isupplierinvoiceid " & _
            "UNION " & _
            "SELECT sip.iprojectid, si.isupplierid, sip.isupplierinvoiceid, si.isupplierinvoicetypeid, si.ssupplierinvoicefolio, si.sexpensedescription, " & _
            "si.iinvoicedate, si.sinvoicetime, si.iupdatedate, si.supdatetime, si.sexpenselocation, si.ipeopleid, IF((SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) - (SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
            "FROM supplierinvoiceprojects sip " & _
            "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
            "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
            "WHERE sip.iprojectid = " & iprojectid & " " & _
            "GROUP BY si.isupplierinvoiceid " & _
            ") tmpA " & _
            "JOIN supplierinvoicepayments sipy ON tmpA.isupplierinvoiceid = sipy.isupplierinvoiceid " & _
            "JOIN payments py ON sipy.ipaymentid = py.ipaymentid " & _
            "JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid " & _
            "JOIN banks ba ON py.idestinationbankid = ba.ibankid "

            sumaSalidas = getSQLQueryAsDouble(0, querySumaSalidas)
            lblTotalSalidas.Text = FormatCurrency(sumaSalidas, 2, TriState.True, TriState.False, TriState.True)



        End If


        Cursor.Current = System.Windows.Forms.Cursors.Default


    End Sub


    Private Sub tcReportes_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tcReportes.SelectedIndexChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim dsReportes As DataSet
        dsReportes = getSQLQueryAsDataset(0, "SELECT * FROM projectreports WHERE iprojectid = " & iprojectid)

        If dsReportes.Tables(0).Rows.Count < 1 Then
            Exit Sub
        End If

        If tcReportes.SelectedIndex = -1 Then
            currentSelectedTabtcReportes = dsReportes.Tables(0).Rows(0).Item("stabname")
        Else
            currentSelectedTabtcReportes = dsReportes.Tables(0).Rows(tcReportes.SelectedIndex).Item("stabname")
        End If

        'For i = 0 To dsReportes.Tables(0).Rows.Count - 1

        '    If dsReportes.Tables(0).Rows(i).Item("sreportquery") = "" Then
        '        Continue For
        '    End If

        '    Dim dsReportesColumnsSizes As DataSet
        '    dsReportesColumnsSizes = getSQLQueryAsDataset(0, "SELECT icolumnid, columnwidth FROM projectreportcolumnssizes WHERE iprojectid = " & iprojectid & " AND ireportid = " & dsReportes.Tables(0).Rows(i).Item("ireportid"))

        '    executeSQLCommand(0, dsReportes.Tables(0).Rows(i).Item("sreportbeforequery"))

        '    setDataGridView(dgvReporte, dsReportes.Tables(0).Rows(i).Item("sreportquery"), True)

        '    executeSQLCommand(0, dsReportes.Tables(0).Rows(i).Item("sreportafterquery"))

        '    dgvReporte.AllowUserToAddRows = False
        '    dgvReporte.AllowUserToDeleteRows = False
        '    dgvReporte.MultiSelect = False
        '    dgvReporte.SelectionMode = DataGridViewSelectionMode.FullRowSelect
        '    dgvReporte.RowHeadersVisible = False

        '    Dim alto As Integer = 20

        '    Try
        '        alto = dsReportes.Tables(0).Rows(i).Item("rowheight")
        '    Catch ex As Exception

        '    End Try

        '    dgvReporte.ColumnHeadersHeight = alto

        '    If dsReportesColumnsSizes.Tables(0).Rows.Count > 0 Then

        '        For j = 0 To dsReportesColumnsSizes.Tables(0).Rows.Count - 1

        '            Dim columna As Integer = 0
        '            Dim ancho As Integer = 70

        '            Try
        '                columna = dsReportesColumnsSizes.Tables(0).Rows(j).Item("icolumnid")
        '                ancho = dsReportesColumnsSizes.Tables(0).Rows(j).Item("columnwidth")
        '                dgvReporte.Columns(j).Width = ancho
        '            Catch ex As Exception

        '            End Try

        '        Next j

        '    End If

        '    dsReportesColumnsSizes.Clear()
        '    dsReportesColumnsSizes.Dispose()

        'Next i


    End Sub


    Private Function validaDatosIniciales(ByVal silent As Boolean, ByVal quick As Boolean) As Boolean

        If isFormReadyForAction = False Then
            Exit Function
        End If

        alertaMostrada = False

        txtNombreProyecto.Text = txtNombreProyecto.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")
        txtNombreCliente.Text = txtNombreCliente.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")
        txtNombreEmpresa.Text = txtNombreEmpresa.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")
        txtLongitudVivienda.Text = txtLongitudVivienda.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")
        txtAnchoVivienda.Text = txtAnchoVivienda.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")
        txtLongitudTerreno.Text = txtLongitudTerreno.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")
        txtAnchoTerreno.Text = txtAnchoTerreno.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")
        txtLugar.Text = txtLugar.Text.Trim.Replace("'", "").Replace("--", "").Replace("@", "")

        If quick = False Then

            If txtNombreProyecto.Text = "" Then

                If silent = False Then
                    MsgBox("¿Podrías ponerle nombre al Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
                End If
                tcProyecto.SelectedTab = tpDatosIniciales
                txtNombreProyecto.Select()
                txtNombreProyecto.Focus()
                alertaMostrada = True
                Return False

            End If

        End If

        If txtNombreCliente.Text = "" Or iclientid = 0 Then

            If silent = False Then
                MsgBox("¿Podrías asignarle un cliente al Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
            End If

            tcProyecto.SelectedTab = tpDatosIniciales
            txtNombreCliente.Select()
            txtNombreCliente.Focus()
            alertaMostrada = True
            Return False

        End If


        Dim longitudVivienda As Double = 0.0
        Dim anchoVivienda As Double = 0.0

        Try
            longitudVivienda = CDbl(txtLongitudVivienda.Text)
            anchoVivienda = CDbl(txtAnchoVivienda.Text)
        Catch ex As Exception

        End Try

        If longitudVivienda = 0.0 Or anchoVivienda = 0.0 Then

            If silent = False Then
                MsgBox("¿Qué medidas tiene la construcción del Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
            End If

            tcProyecto.SelectedTab = tpDatosIniciales
            txtLongitudVivienda.Select()
            txtLongitudVivienda.Focus()
            alertaMostrada = True
            Return False

        End If


        Dim longitudTerreno As Double = 0.0
        Dim anchoTerreno As Double = 0.0

        Try
            longitudTerreno = CDbl(txtLongitudTerreno.Text)
            anchoTerreno = CDbl(txtAnchoTerreno.Text)
        Catch ex As Exception

        End Try

        If longitudTerreno = 0.0 Or anchoTerreno = 0.0 Then

            If silent = False Then
                MsgBox("¿Qué medidas tiene el terreno donde se construirá el Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
            End If

            tcProyecto.SelectedTab = tpDatosIniciales
            txtLongitudTerreno.Select()
            txtLongitudTerreno.Focus()
            alertaMostrada = True
            Return False

        End If


        If longitudVivienda > longitudTerreno Or anchoVivienda > anchoTerreno Then

            If silent = False Then
                MsgBox("Las medidas de la Vivienda son más grandes que la del Terreno! Esto no es físicamente posible! (en este universo al menos)", MsgBoxStyle.OkOnly, "Dato Incorrecto")
            End If

            tcProyecto.SelectedTab = tpDatosIniciales
            txtLongitudVivienda.Select()
            txtLongitudVivienda.Focus()
            alertaMostrada = True
            Return False

        End If

        If quick = False Then

            If txtLugar.Text = "" Then

                If silent = False Then
                    MsgBox("¿En dónde se va a llevar a cabo el Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
                End If
                tcProyecto.SelectedTab = tpDatosIniciales
                txtLugar.Select()
                txtLugar.Focus()
                alertaMostrada = True
                Return False

            End If

        End If

        If quick = False Then

            If rbCasa.Checked = False And rbOficina.Checked = False And rbOtro.Checked = False Then

                If silent = False Then
                    MsgBox("¿Podrías escoger de qué tipo de Construcción se trata el Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
                End If
                tcProyecto.SelectedTab = tpDatosIniciales
                rbCasa.Select()
                rbCasa.Focus()
                alertaMostrada = True
                Return False

            End If

        End If


        If quick = False Then

            If rbOficina.Checked = True And txtNombreEmpresa.Text = "" Then

                If silent = False Then
                    MsgBox("¿Podrías escribir la Empresa Cliente o Dependencia a la que se le hará el Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
                End If
                tcProyecto.SelectedTab = tpDatosIniciales
                txtNombreEmpresa.Select()
                txtNombreEmpresa.Focus()
                alertaMostrada = True
                Return False

            End If

        End If

        If rbOtro.Checked = True And txtNombreEmpresa.Text.Trim = "" Then

            txtNombreEmpresa.Text = txtNombreCliente.Text

        End If

        If isEdit = False Then

            If paso2 = False Then

                Return False

            End If

        End If

        Return True

    End Function


    Private Function validaTipoDeConstruccion() As String

        If rbCasa.Checked = True Then
            Return "Casa Habitación"
        ElseIf rbOficina.Checked = True Then
            Return "Oficina"
        ElseIf rbOtro.Checked = True Then
            Return "Otro"
        End If

        Return ""

    End Function


    Private Sub dgvCostosIndirectos_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvCostosIndirectos.CellClick

        Try

            If dgvCostosIndirectos.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcostid = CInt(dgvCostosIndirectos.Rows(e.RowIndex).Cells(1).Value())
            sselectedcostdescription = dgvCostosIndirectos.Rows(e.RowIndex).Cells(2).Value()
            dselectedcostamount = CDbl(dgvCostosIndirectos.Rows(e.RowIndex).Cells(3).Value())

        Catch ex As Exception

            iselectedcostid = 0
            sselectedcostdescription = ""
            dselectedcostamount = 1.0

        End Try

    End Sub


    Private Sub dgvCostosIndirectos_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvCostosIndirectos.CellContentClick

        Try

            If dgvCostosIndirectos.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcostid = CInt(dgvCostosIndirectos.Rows(e.RowIndex).Cells(1).Value())
            sselectedcostdescription = dgvCostosIndirectos.Rows(e.RowIndex).Cells(2).Value()
            dselectedcostamount = CDbl(dgvCostosIndirectos.Rows(e.RowIndex).Cells(3).Value())

        Catch ex As Exception

            iselectedcostid = 0
            sselectedcostdescription = ""
            dselectedcostamount = 1.0

        End Try

    End Sub


    Private Sub dgvCostosIndirectos_SelectionChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgvCostosIndirectos.SelectionChanged

        txtCantidadDgvCostosIndirectos = Nothing
        txtCantidadDgvCostosIndirectos_OldText = Nothing
        txtNombreDgvCostosIndirectos = Nothing
        txtNombreDgvCostosIndirectos_OldText = Nothing

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        If dgvCostosIndirectos.Rows.Count > 0 Then

            If dgvCostosIndirectos.Rows.Count = 1 Then
                Exit Sub
            End If

        End If

        Try

            If dgvCostosIndirectos.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcostid = CInt(dgvCostosIndirectos.CurrentRow.Cells(1).Value)
            sselectedcostdescription = dgvCostosIndirectos.CurrentRow.Cells(2).Value()
            dselectedcostamount = CDbl(dgvCostosIndirectos.CurrentRow.Cells(3).Value)

        Catch ex As Exception

            iselectedcostid = 0
            sselectedcostdescription = ""
            dselectedcostamount = 1.0

        End Try

    End Sub


    Private Sub dgvCostosIndirectos_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvCostosIndirectos.CellEndEdit

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim queryCostosProyecto As String = ""
        queryCostosProyecto = "SELECT pc.iprojectid, pc.icostid, pc.sprojectcostname AS 'Nombre del Costo', " & _
        "FORMAT(pc.dprojectcost, 2) AS 'Importe del Costo', pc.dcompanyprojectedearnings FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc WHERE pc.iprojectid = " & iprojectid
        setDataGridView(dgvCostosIndirectos, queryCostosProyecto, False)

        dgvCostosIndirectos.Columns(0).Visible = False
        dgvCostosIndirectos.Columns(1).Visible = False
        dgvCostosIndirectos.Columns(4).Visible = False

        dgvCostosIndirectos.Columns(0).ReadOnly = True
        dgvCostosIndirectos.Columns(1).ReadOnly = True
        dgvCostosIndirectos.Columns(4).ReadOnly = True

        dgvCostosIndirectos.Columns(0).Width = 30
        dgvCostosIndirectos.Columns(1).Width = 30
        dgvCostosIndirectos.Columns(2).Width = 200
        dgvCostosIndirectos.Columns(3).Width = 100
        dgvCostosIndirectos.Columns(4).Width = 30

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvCostosIndirectos_CellValueChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvCostosIndirectos.CellValueChanged

        If modifyIndirectCosts = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        'LAS UNICAS COLUMNAS EDITABLES SON LAS COLUMNAS 2 Y 3: sprojectcostname y dprojectcost

        If e.ColumnIndex = 2 Then

            If dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value Is DBNull.Value Then

                If MsgBox("¿Estás seguro de que quieres eliminar este Costo Indirecto del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Costo Indirecto del Proyecto") = MsgBoxResult.Yes Then

                    executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid & " AND icostid = " & dgvCostosIndirectos.CurrentRow.Cells(1).Value)

                    Dim total As Double = 0.0
                    total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
                    lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                    Dim ingresosIndirectos As Double = 0.0

                    Try

                        If dgvCostosIndirectos.RowCount > 0 Then
                            ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                        End If

                    Catch ex As Exception

                    End Try

                    txtIngresosIndirectos.Text = ingresosIndirectos

                    Dim porcentajeIndirectoSugerido As Double = 0.0
                    Try
                        porcentajeIndirectoSugerido = total / ingresosIndirectos
                    Catch ex As Exception

                    End Try

                    lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

                Else

                    dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcostdescription

                End If

            Else

                executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts SET sprojectcostname = '" & dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & "', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid & " AND icostid = " & dgvCostosIndirectos.CurrentRow.Cells(1).Value)

            End If

        ElseIf e.ColumnIndex = 3 Then

            If dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value Is DBNull.Value Then

                If MsgBox("¿Estás seguro de que quieres eliminar este Costo Indirecto del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Costo Indirecto del Proyecto") = MsgBoxResult.Yes Then

                    executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid & " AND icostid = " & dgvCostosIndirectos.CurrentRow.Cells(1).Value)

                    Dim total As Double = 0.0
                    total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
                    lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                    Dim ingresosIndirectos As Double = 0.0
                    Try
                        If dgvCostosIndirectos.RowCount > 0 Then
                            ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                        End If
                    Catch ex As Exception

                    End Try

                    txtIngresosIndirectos.Text = ingresosIndirectos

                    Dim porcentajeIndirectoSugerido As Double = 0.0
                    Try
                        porcentajeIndirectoSugerido = total / ingresosIndirectos
                    Catch ex As Exception

                    End Try

                    lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

                Else

                    dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dselectedcostamount

                End If

            ElseIf dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = 0 Then

                If MsgBox("¿Estás seguro de que quieres eliminar este Costo Indirecto del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Costo Indirecto del Proyecto") = MsgBoxResult.Yes Then

                    executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid & " AND icostid = " & dgvCostosIndirectos.CurrentRow.Cells(1).Value)

                    Dim total As Double = 0.0
                    total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
                    lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                    Dim ingresosIndirectos As Double = 0.0
                    Try
                        If dgvCostosIndirectos.RowCount > 0 Then
                            ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                        End If
                    Catch ex As Exception

                    End Try

                    txtIngresosIndirectos.Text = ingresosIndirectos

                    Dim porcentajeIndirectoSugerido As Double = 0.0
                    Try
                        porcentajeIndirectoSugerido = total / ingresosIndirectos
                    Catch ex As Exception

                    End Try

                    lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

                Else

                    dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dselectedcostamount

                End If

            Else

                Dim costoindirecto As Double = 0.0

                Try
                    costoindirecto = CDbl(dgvCostosIndirectos.Rows(e.RowIndex).Cells(3).Value)
                Catch ex As Exception
                    costoindirecto = dselectedcostamount
                End Try

                executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts SET dprojectcost = " & dgvCostosIndirectos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid & " AND icostid = " & dgvCostosIndirectos.CurrentRow.Cells(1).Value)

                Dim total As Double = 0.0
                total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
                lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                Dim ingresosIndirectos As Double = 0.0
                Try
                    If dgvCostosIndirectos.RowCount > 0 Then
                        ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                    End If
                Catch ex As Exception

                End Try

                txtIngresosIndirectos.Text = ingresosIndirectos

                Dim porcentajeIndirectoSugerido As Double = 0.0
                Try
                    porcentajeIndirectoSugerido = total / ingresosIndirectos
                Catch ex As Exception

                End Try

                lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

            End If

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvCostosIndirectos_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgvCostosIndirectos.EditingControlShowing

        If dgvCostosIndirectos.CurrentCell.ColumnIndex = 2 Then

            txtNombreDgvCostosIndirectos = CType(e.Control, TextBox)
            txtNombreDgvCostosIndirectos_OldText = txtNombreDgvCostosIndirectos.Text

        ElseIf dgvCostosIndirectos.CurrentCell.ColumnIndex = 3 Then

            txtCantidadDgvCostosIndirectos = CType(e.Control, TextBox)
            txtCantidadDgvCostosIndirectos_OldText = txtCantidadDgvCostosIndirectos.Text

        Else
            txtCantidadDgvCostosIndirectos = Nothing
            txtCantidadDgvCostosIndirectos_OldText = Nothing
            txtNombreDgvCostosIndirectos = Nothing
            txtNombreDgvCostosIndirectos_OldText = Nothing
        End If

    End Sub


    Private Sub txtNombreDgvCostosIndirectos_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtNombreDgvCostosIndirectos.KeyUp

        txtNombreDgvCostosIndirectos.Text = txtNombreDgvCostosIndirectos.Text.Replace("'", "").Replace("--", "").Replace("@", "").Replace("|", "")

        Dim strForbidden1 As String = "|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayForbidden1 As Char() = strForbidden1.ToCharArray

        For fc = 0 To arrayForbidden1.Length - 1

            If txtNombreDgvCostosIndirectos.Text.Contains(arrayForbidden1(fc)) Then
                txtNombreDgvCostosIndirectos.Text = txtNombreDgvCostosIndirectos.Text.Replace(arrayForbidden1(fc), "")
            End If

        Next fc

    End Sub


    Private Sub txtCantidadDgvCostosIndirectos_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCantidadDgvCostosIndirectos.KeyUp

        If Not IsNumeric(txtCantidadDgvCostosIndirectos.Text) Then

            Dim strForbidden2 As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
            Dim arrayForbidden2 As Char() = strForbidden2.ToCharArray

            For cp = 0 To arrayForbidden2.Length - 1

                If txtCantidadDgvCostosIndirectos.Text.Contains(arrayForbidden2(cp)) Then
                    txtCantidadDgvCostosIndirectos.Text = txtCantidadDgvCostosIndirectos.Text.Replace(arrayForbidden2(cp), "")
                End If

            Next cp

            If txtCantidadDgvCostosIndirectos.Text.Contains(".") Then

                Dim comparaPuntos As Char() = txtCantidadDgvCostosIndirectos.Text.ToCharArray
                Dim cuantosPuntos As Integer = 0


                For letra = 0 To comparaPuntos.Length - 1

                    If comparaPuntos(letra) = "." Then
                        cuantosPuntos = cuantosPuntos + 1
                    End If

                Next

                If cuantosPuntos > 1 Then

                    For cantidad = 1 To cuantosPuntos
                        Dim lugar As Integer = txtCantidadDgvCostosIndirectos.Text.LastIndexOf(".")
                        Dim longitud As Integer = txtCantidadDgvCostosIndirectos.Text.Length

                        If longitud > (lugar + 1) Then
                            txtCantidadDgvCostosIndirectos.Text = txtCantidadDgvCostosIndirectos.Text.Substring(0, lugar) & txtCantidadDgvCostosIndirectos.Text.Substring(lugar + 1)
                            Exit For
                        Else
                            txtCantidadDgvCostosIndirectos.Text = txtCantidadDgvCostosIndirectos.Text.Substring(0, lugar)
                            Exit For
                        End If
                    Next

                End If

            End If

            txtCantidadDgvCostosIndirectos.Text = txtCantidadDgvCostosIndirectos.Text.Replace("--", "").Replace("'", "")
            txtCantidadDgvCostosIndirectos.Text = txtCantidadDgvCostosIndirectos.Text.Trim

        Else
            txtCantidadDgvCostosIndirectos_OldText = txtCantidadDgvCostosIndirectos.Text
        End If

    End Sub


    Private Sub dgvCostosIndirectos_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgvCostosIndirectos.KeyUp

        If e.KeyCode = Keys.Delete Then

            If deleteIndirectCosts = False Then
                Exit Sub
            End If

            If MsgBox("¿Estás seguro de que quieres eliminar este Costo Indirecto del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Costo Indirecto del Proyecto") = MsgBoxResult.Yes Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                Dim tmpselectedcostid As Integer = 0
                Try
                    tmpselectedcostid = CInt(dgvCostosIndirectos.CurrentRow.Cells(1).Value)
                Catch ex As Exception

                End Try

                executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid & " AND icostid = " & tmpselectedcostid)

                Dim queryCostosProyecto As String = ""
                queryCostosProyecto = "SELECT pc.iprojectid, pc.icostid, pc.sprojectcostname AS 'Nombre del Costo', " & _
                "FORMAT(pc.dprojectcost, 2) AS 'Importe del Costo', pc.dcompanyprojectedearnings FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc WHERE pc.iprojectid = " & iprojectid
                setDataGridView(dgvCostosIndirectos, queryCostosProyecto, False)

                dgvCostosIndirectos.Columns(0).ReadOnly = True
                dgvCostosIndirectos.Columns(1).ReadOnly = True
                dgvCostosIndirectos.Columns(4).ReadOnly = True

                dgvCostosIndirectos.Columns(0).Width = 30
                dgvCostosIndirectos.Columns(1).Width = 30
                dgvCostosIndirectos.Columns(2).Width = 200
                dgvCostosIndirectos.Columns(3).Width = 100
                dgvCostosIndirectos.Columns(4).Width = 30

                dgvCostosIndirectos.Columns(0).Visible = False
                dgvCostosIndirectos.Columns(1).Visible = False
                dgvCostosIndirectos.Columns(4).Visible = False

                Dim total As Double = 0.0
                total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
                lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                Dim ingresosIndirectos As Double = 0.0
                Try
                    If dgvCostosIndirectos.RowCount > 0 Then
                        ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                    End If
                Catch ex As Exception

                End Try

                txtIngresosIndirectos.Text = ingresosIndirectos

                Dim porcentajeIndirectoSugerido As Double = 0.0
                Try
                    porcentajeIndirectoSugerido = total / ingresosIndirectos
                Catch ex As Exception

                End Try

                lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

                Cursor.Current = System.Windows.Forms.Cursors.Default

            End If

        End If

    End Sub


    Private Sub dgvCostosIndirectos_UserAddedRow(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewRowEventArgs) Handles dgvCostosIndirectos.UserAddedRow

        If addIndirectCosts = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        iselectedcostid = getSQLQueryAsInteger(0, "SELECT IF(MAX(icostid) + 1 IS NULL, 1, MAX(icostid) + 1) AS icostid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)

        dgvCostosIndirectos.CurrentRow.Cells(0).Value = iprojectid
        dgvCostosIndirectos.CurrentRow.Cells(1).Value = iselectedcostid
        dgvCostosIndirectos.CurrentRow.Cells(3).Value = 1

        Dim valor As Double = 0.0

        Try
            valor = CDbl(txtIngresosIndirectos.Text.Trim.Replace("--", "").Replace("'", "").Replace("@", ""))
        Catch ex As Exception

        End Try

        executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts VALUES (" & iprojectid & ", " & iselectedcostid & ", '" & dgvCostosIndirectos.CurrentRow.Cells(2).Value & "', " & dgvCostosIndirectos.CurrentRow.Cells(3).Value & ", " & valor & ", " & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "')")

        Dim total As Double = 0.0
        total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
        lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

        Dim ingresosIndirectos As Double = 0.0

        Try
            If dgvCostosIndirectos.RowCount > 0 Then
                ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
            End If
        Catch ex As Exception

        End Try

        txtIngresosIndirectos.Text = ingresosIndirectos

        Dim porcentajeIndirectoSugerido As Double = 0.0
        Try
            porcentajeIndirectoSugerido = total / ingresosIndirectos
        Catch ex As Exception

        End Try

        lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtIngresosIndirectos_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtIngresosIndirectos.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtIngresosIndirectos.Text.Contains(arrayCaractProhib(carp)) Then
                txtIngresosIndirectos.Text = txtIngresosIndirectos.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtIngresosIndirectos.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtIngresosIndirectos.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtIngresosIndirectos.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtIngresosIndirectos.Text.Length

                    If longitud > (lugar + 1) Then
                        txtIngresosIndirectos.Text = txtIngresosIndirectos.Text.Substring(0, lugar) & txtIngresosIndirectos.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtIngresosIndirectos.Text = txtIngresosIndirectos.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtIngresosIndirectos.Select(txtIngresosIndirectos.Text.Length, 0)
        End If

        txtIngresosIndirectos.Text = txtIngresosIndirectos.Text.Replace("--", "").Replace("'", "")
        txtIngresosIndirectos.Text = txtIngresosIndirectos.Text.Trim

    End Sub


    Private Sub txtIngresosIndirectos_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtIngresosIndirectos.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        If modifyIndirectCosts = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtIngresosIndirectos.Text = txtIngresosIndirectos.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0

        Try

            valor = CDbl(txtIngresosIndirectos.Text.Trim.Replace("--", "").Replace("'", "").Replace("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts SET dcompanyprojectedearnings = " & valor & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)

            Dim queryCostosProyecto As String = ""
            queryCostosProyecto = "SELECT pc.iprojectid, pc.icostid, pc.sprojectcostname AS 'Nombre del Costo', " & _
            "FORMAT(pc.dprojectcost, 2) AS 'Importe del Costo', pc.dcompanyprojectedearnings FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc WHERE pc.iprojectid = " & iprojectid
            setDataGridView(dgvCostosIndirectos, queryCostosProyecto, False)

            dgvCostosIndirectos.Columns(0).Visible = False
            dgvCostosIndirectos.Columns(1).Visible = False
            dgvCostosIndirectos.Columns(4).Visible = False

            dgvCostosIndirectos.Columns(0).ReadOnly = True
            dgvCostosIndirectos.Columns(1).ReadOnly = True
            dgvCostosIndirectos.Columns(4).ReadOnly = True

            dgvCostosIndirectos.Columns(0).Width = 30
            dgvCostosIndirectos.Columns(1).Width = 30
            dgvCostosIndirectos.Columns(2).Width = 200
            dgvCostosIndirectos.Columns(3).Width = 100
            dgvCostosIndirectos.Columns(4).Width = 30

            Dim total As Double = 0.0
            total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
            lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

            Dim ingresosIndirectos As Double = 0.0
            Try
                If dgvCostosIndirectos.RowCount > 0 Then
                    ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                End If
            Catch ex As Exception

            End Try

            Dim porcentajeIndirectoSugerido As Double = 0.0
            Try
                porcentajeIndirectoSugerido = total / ingresosIndirectos
            Catch ex As Exception

            End Try

            lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

        Catch ex As Exception

        End Try

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnNuevoCostoIndirecto_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNuevoCostoIndirecto.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        iselectedcostid = getSQLQueryAsInteger(0, "SELECT IF(MAX(icostid) + 1 IS NULL, 1, MAX(icostid) + 1) AS icostid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)

        dgvCostosIndirectos.CurrentRow.Cells(0).Value = iprojectid
        dgvCostosIndirectos.CurrentRow.Cells(1).Value = iselectedcostid
        dgvCostosIndirectos.CurrentRow.Cells(3).Value = 1

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtIngresosIndirectos.Text.Trim.Replace("--", "").Replace("'", "").Replace("@", ""))
        Catch ex As Exception

        End Try

        executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts VALUES (" & iprojectid & ", " & iselectedcostid & ", '" & dgvCostosIndirectos.CurrentRow.Cells(2).Value & "', " & dgvCostosIndirectos.CurrentRow.Cells(3).Value & ", " & valor & ", " & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "')")

        Dim queryCostosProyecto As String = ""
        queryCostosProyecto = "SELECT pc.iprojectid, pc.icostid, pc.sprojectcostname AS 'Nombre del Costo', " & _
        "FORMAT(pc.dprojectcost, 2) AS 'Importe del Costo', pc.dcompanyprojectedearnings FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc WHERE pc.iprojectid = " & iprojectid
        setDataGridView(dgvCostosIndirectos, queryCostosProyecto, False)

        dgvCostosIndirectos.Columns(0).Visible = False
        dgvCostosIndirectos.Columns(1).Visible = False
        dgvCostosIndirectos.Columns(4).Visible = False

        dgvCostosIndirectos.Columns(0).ReadOnly = True
        dgvCostosIndirectos.Columns(1).ReadOnly = True
        dgvCostosIndirectos.Columns(4).ReadOnly = True

        dgvCostosIndirectos.Columns(0).Width = 30
        dgvCostosIndirectos.Columns(1).Width = 30
        dgvCostosIndirectos.Columns(2).Width = 200
        dgvCostosIndirectos.Columns(3).Width = 100
        dgvCostosIndirectos.Columns(4).Width = 30


        Dim total As Double = 0.0
        total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
        lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

        Dim ingresosIndirectos As Double = 0.0
        Try
            If dgvCostosIndirectos.RowCount > 0 Then
                ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
            End If
        Catch ex As Exception

        End Try

        txtIngresosIndirectos.Text = ingresosIndirectos

        Dim porcentajeIndirectoSugerido As Double = 0.0
        Try
            porcentajeIndirectoSugerido = total / ingresosIndirectos
        Catch ex As Exception

        End Try

        lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnEliminarCostoIndirecto_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEliminarCostoIndirecto.Click

        If MsgBox("¿Estás seguro de que quieres eliminar este Costo Indirecto del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Costo Indirecto del Proyecto") = MsgBoxResult.Yes Then

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            Dim tmpselectedcostid As Integer = 0
            Try
                tmpselectedcostid = CInt(dgvCostosIndirectos.CurrentRow.Cells(1).Value)
            Catch ex As Exception

            End Try

            executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid & " AND icostid = " & tmpselectedcostid)

            Dim queryCostosProyecto As String = ""
            queryCostosProyecto = "SELECT pc.iprojectid, pc.icostid, pc.sprojectcostname AS 'Nombre del Costo', " & _
            "FORMAT(pc.dprojectcost, 2) AS 'Importe del Costo', pc.dcompanyprojectedearnings FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc WHERE pc.iprojectid = " & iprojectid
            setDataGridView(dgvCostosIndirectos, queryCostosProyecto, False)

            dgvCostosIndirectos.Columns(0).Visible = False
            dgvCostosIndirectos.Columns(1).Visible = False
            dgvCostosIndirectos.Columns(4).Visible = False

            dgvCostosIndirectos.Columns(0).ReadOnly = True
            dgvCostosIndirectos.Columns(1).ReadOnly = True
            dgvCostosIndirectos.Columns(4).ReadOnly = True

            dgvCostosIndirectos.Columns(0).Width = 30
            dgvCostosIndirectos.Columns(1).Width = 30
            dgvCostosIndirectos.Columns(2).Width = 200
            dgvCostosIndirectos.Columns(3).Width = 100
            dgvCostosIndirectos.Columns(4).Width = 30

            Dim total As Double = 0.0
            total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts WHERE iprojectid = " & iprojectid)
            lblTotalIndirectos.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

            Dim ingresosIndirectos As Double = 0.0
            Try
                If dgvCostosIndirectos.RowCount > 0 Then
                    ingresosIndirectos = CDbl(dgvCostosIndirectos.Rows(0).Cells(4).Value)
                End If
            Catch ex As Exception

            End Try

            txtIngresosIndirectos.Text = ingresosIndirectos

            Dim porcentajeIndirectoSugerido As Double = 0.0
            Try
                porcentajeIndirectoSugerido = total / ingresosIndirectos
            Catch ex As Exception

            End Try

            lblPorcentajeIndirectos.Text = FormatCurrency(porcentajeIndirectoSugerido * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

            Cursor.Current = System.Windows.Forms.Cursors.Default

        End If

    End Sub


    Private Function validaCostosIndirectos(ByVal silent As Boolean) As Boolean

        If isFormReadyForAction = False Then
            Exit Function
        End If

        Dim querySumaCostosProyectos As String = ""
        Dim sumaCostosProyectos As Double = 0.0

        querySumaCostosProyectos = "SELECT SUM(pc.dprojectcost) AS dprojectcost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts pc WHERE pc.iprojectid = " & iprojectid & " GROUP BY iprojectid"

        sumaCostosProyectos = getSQLQueryAsDouble(0, querySumaCostosProyectos)

        If sumaCostosProyectos = 0.0 Then

            If silent = False Then
                MsgBox("¿Podrías hacer el cálculo de costos indirectos del Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
            End If

            alertaMostrada = True
            Return False

        End If

        If isEdit = False Then

            If paso3 = False Then

                Return False

            End If

        End If

        Return True


    End Function


    Private Sub btnPaso3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPaso3.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        paso3 = True

        If validaCostosIndirectos(False) = False Then

            MsgBox("¿Podrías ponerle costos indirectos al Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")

            paso3 = False

            Exit Sub

        Else

            tcProyecto.SelectedTab = tpResumenTarjetas

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvResumenDeTarjetas_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvResumenDeTarjetas.CellClick

        Try

            If dgvResumenDeTarjetas.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcardid = CInt(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(0).Value())
            sselectedcardlegacyid = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(1).Value()
            sselectedcarddescription = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(2).Value()
            dselectedcardqty = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value())

        Catch ex As Exception

            iselectedcardid = 0
            sselectedcardlegacyid = ""
            sselectedcostdescription = ""
            dselectedcardqty = 1.0

        End Try

    End Sub


    Private Sub dgvResumenDeTarjetas_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvResumenDeTarjetas.CellContentClick

        Try

            If dgvResumenDeTarjetas.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcardid = CInt(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(0).Value())
            sselectedcardlegacyid = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(1).Value()
            sselectedcarddescription = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(2).Value()
            dselectedcardqty = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value())

        Catch ex As Exception

            iselectedcardid = 0
            sselectedcardlegacyid = ""
            sselectedcostdescription = ""
            dselectedcardqty = 1.0

        End Try

    End Sub


    Private Sub dgvResumenDeTarjetas_SelectionChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgvResumenDeTarjetas.SelectionChanged

        txtLegacyIdDgvResumenDeTarjetas = Nothing
        txtLegacyIdDgvResumenDeTarjetas_OldText = Nothing
        txtNombreDgvResumenDeTarjetas = Nothing
        txtNombreDgvResumenDeTarjetas_OldText = Nothing
        txtCantidadDgvResumenDeTarjetas = Nothing
        txtCantidadDgvResumenDeTarjetas_OldText = Nothing

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Try

            If dgvResumenDeTarjetas.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcardid = CInt(dgvResumenDeTarjetas.CurrentRow.Cells(0).Value)
            sselectedcardlegacyid = dgvResumenDeTarjetas.CurrentRow.Cells(1).Value()
            sselectedcarddescription = dgvResumenDeTarjetas.CurrentRow.Cells(2).Value()
            dselectedcardqty = CDbl(dgvResumenDeTarjetas.CurrentRow.Cells(4).Value)

        Catch ex As Exception

            iselectedcardid = 0
            sselectedcardlegacyid = ""
            sselectedcostdescription = ""
            dselectedcardqty = 1.0

        End Try

    End Sub


    Private Sub dgvResumenDeTarjetas_CellValueChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvResumenDeTarjetas.CellValueChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        'LAS UNICAS COLUMNAS EDITABLES SON LAS COLUMNAS 1, 2 Y 4: LEGACYID, SCARDDESCRIPTION Y DCARDQTY

        If isResumenDGVReady = False Then
            Exit Sub
        End If

        If modifyCardQty = False Then
            Exit Sub
        End If

        Dim baseid As Integer = 0
        baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

        If baseid = 0 Then
            baseid = 99999
        End If

        Dim dsBusquedaTarjetasRepetidas As DataSet
        Dim dsBusquedaTarjetasBase As DataSet

        If e.ColumnIndex = 1 Then

            'SCardLegacyID

            If dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value Is DBNull.Value Then

                If MsgBox("¿Estás seguro de que quieres eliminar la Tarjeta " & sselectedcardlegacyid & " del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Tarjeta del Proyecto") = MsgBoxResult.Yes Then

                    Dim queriesDelete(3) As String

                    queriesDelete(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                    queriesDelete(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                    queriesDelete(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid

                    executeTransactedSQLCommand(0, queriesDelete)

                    Dim porcentajeIVA As Double = 0.0
                    porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                    txtPorcentajeIVA.Text = porcentajeIVA * 100


                    Dim queryIndirectosSubTotal As String
                    Dim indirectosSubTotal As Double = 0.0
                    queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE p.iprojectid = " & iprojectid

                    indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                    txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    Dim queryPrecioSubTotal As String
                    Dim precioSubTotal As Double = 0.0
                    queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE p.iprojectid = " & iprojectid

                    precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                    txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                    txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    Dim precioTotal As Double = 0.0
                    precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                    txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                Else
                    'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcardlegacyid
                End If

            Else

                'Si pone un texto, e.g. un LegacyID...

                dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value.ToString.Trim.Replace("'", "").Replace("--", "").Replace("@", "")

                dsBusquedaTarjetasRepetidas = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND scardlegacyid = '" & dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & "'")

                If dsBusquedaTarjetasRepetidas.Tables(0).Rows.Count > 0 Then

                    MsgBox("Ya tienes esa Tarjeta insertada en este Proyecto. ¿Podrías buscarla en la lista de Resumen de Tarjetas y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Tarjeta Repetida")
                    Exit Sub

                End If

                dsBusquedaTarjetasBase = getSQLQueryAsDataset(0, "SELECT * FROM basecards WHERE ibaseid = " & baseid & " AND scardlegacyid = '" & dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & "'")

                If dsBusquedaTarjetasBase.Tables(0).Rows.Count > 0 Then

                    'Si sí encuentro una Tarjeta con ese LegacyId

                    If MsgBox("¿Estás seguro de que deseas reemplazar la Tarjeta " & sselectedcardlegacyid & "?", MsgBoxStyle.YesNo, "Confirmación de Reemplazo de Tarjeta") = MsgBoxResult.Yes Then

                        Dim cantidaddeTarjeta As Double = 1

                        Try
                            cantidaddeTarjeta = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value)
                        Catch ex As Exception

                        End Try

                        Dim fecha As Integer = 0
                        Dim hora As String = "00:00:00"

                        fecha = getMySQLDate()
                        hora = getAppTime()

                        Dim queriesReplace(6) As String

                        queriesReplace(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                        queriesReplace(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                        queriesReplace(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid

                        queriesReplace(3) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs SELECT " & iprojectid & ", " & iselectedcardid & ", iinputid, scardinputunit, dcardinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardinputs WHERE ibaseid = " & baseid & " AND icardid = " & dsBusquedaTarjetasBase.Tables(0).Rows(0).Item("icardid")
                        queriesReplace(4) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs SELECT " & iprojectid & ", " & iselectedcardid & ", iinputid, icompoundinputid, scompoundinputunit, dcompoundinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE ibaseid = " & baseid & " AND icardid = " & dsBusquedaTarjetasBase.Tables(0).Rows(0).Item("icardid")
                        queriesReplace(5) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SELECT " & iprojectid & ", " & iselectedcardid & ", scardlegacycategoryid, scardlegacyid, scarddescription, scardunit, dcardqty, dcardindirectcostspercentage, dcardgainpercentage, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecards WHERE ibaseid = " & baseid & " AND icardid = " & dsBusquedaTarjetasBase.Tables(0).Rows(0).Item("icardid")

                        executeTransactedSQLCommand(0, queriesReplace)

                        Dim porcentajeIVA As Double = 0.0
                        porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                        txtPorcentajeIVA.Text = porcentajeIVA * 100

                        Dim queryIndirectosSubTotal As String
                        Dim indirectosSubTotal As Double = 0.0
                        queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE p.iprojectid = " & iprojectid

                        indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                        txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                        txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                        Dim queryPrecioSubTotal As String
                        Dim precioSubTotal As Double = 0.0
                        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE p.iprojectid = " & iprojectid

                        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                        txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                        txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                        Dim precioTotal As Double = 0.0
                        precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                        txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                    Else

                        'Si cancela el reemplazo de Tarjeta
                        'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcardlegacyid

                    End If

                Else

                    'Si no encuentro una Tarjeta con ese LegacyId

                    If MsgBox("No encontré Tarjetas con esa clave." & Chr(13) & "¿Estás seguro de que deseas reemplazar esta Tarjeta?" & Chr(13) & "Presiona 'Sí' para que te muestre la ventana de búsqueda de Tarjetas o 'No' para regresar a la ventana anterior.", MsgBoxStyle.YesNo, "Clave no encontrada") = MsgBoxResult.Yes Then

                        Dim bf As New BuscaTarjetas
                        bf.susername = susername
                        bf.bactive = bactive
                        bf.bonline = bonline
                        bf.suserfullname = suserfullname
                        bf.suseremail = suseremail
                        bf.susersession = susersession
                        bf.susermachinename = susermachinename
                        bf.suserip = suserip

                        bf.iprojectid = iprojectid

                        bf.querystring = dgvResumenDeTarjetas.CurrentCell.EditedFormattedValue

                        bf.isEdit = False

                        bf.isBase = False
                        bf.isModel = False

                        bf.isHistoric = isHistoric

                        If Me.WindowState = FormWindowState.Maximized Then
                            bf.WindowState = FormWindowState.Maximized
                        End If

                        Me.Visible = False
                        bf.ShowDialog(Me)
                        Me.Visible = True

                        If bf.DialogResult = Windows.Forms.DialogResult.OK Then

                            dsBusquedaTarjetasRepetidas = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & bf.icardid)

                            If dsBusquedaTarjetasRepetidas.Tables(0).Rows.Count > 0 Then

                                MsgBox("Ya tienes esa Tarjeta insertada en este Proyecto. ¿Podrías buscarla en la lista de Resumen de Tarjetas y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Tarjeta Repetida")
                                Exit Sub

                            End If


                            If MsgBox("¿Estás seguro de que deseas reemplazar la Tarjeta " & sselectedcardlegacyid & "?", MsgBoxStyle.YesNo, "Confirmación de Reemplazo de Tarjeta") = MsgBoxResult.Yes Then

                                Dim cantidaddeTarjeta As Double = 1

                                Try
                                    cantidaddeTarjeta = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value)
                                Catch ex As Exception

                                End Try

                                Dim fecha As Integer = 0
                                Dim hora As String = "00:00:00"

                                fecha = getMySQLDate()
                                hora = getAppTime()

                                Dim queriesReplace(6) As String

                                queriesReplace(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                                queriesReplace(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                                queriesReplace(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid

                                queriesReplace(3) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, scardinputunit, dcardinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
                                queriesReplace(4) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, icompoundinputid, scompoundinputunit, dcompoundinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
                                queriesReplace(5) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SELECT " & iprojectid & ", " & bf.icardid & ", scardlegacycategoryid, scardlegacyid, scarddescription, scardunit, dcardqty, dcardindirectcostspercentage, dcardgainpercentage, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecards WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid

                                executeTransactedSQLCommand(0, queriesReplace)

                                Dim porcentajeIVA As Double = 0.0
                                porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                                txtPorcentajeIVA.Text = porcentajeIVA * 100

                                Dim queryIndirectosSubTotal As String
                                Dim indirectosSubTotal As Double = 0.0
                                queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                                "WHERE p.iprojectid = " & iprojectid

                                indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                                txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                                txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                                Dim queryPrecioSubTotal As String
                                Dim precioSubTotal As Double = 0.0
                                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                                "WHERE p.iprojectid = " & iprojectid

                                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                                txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                                txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                                Dim precioTotal As Double = 0.0
                                precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                                txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                            Else

                                dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcardlegacyid

                            End If

                        Else

                            'Si cancela el reemplazo de Tarjeta
                            'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcardlegacyid

                        End If

                    Else

                        'Si cancela el reemplazo de Tarjeta
                        'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcardlegacyid

                    End If


                End If

            End If

            'ElseIf e.ColumnIndex = 2 Then

            '    'SCardDescription

            '    If dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value Is DBNull.Value Then

            '        If MsgBox("¿Estás seguro de que quieres eliminar la Tarjeta " & sselectedcardlegacyid & " del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Tarjeta del Proyecto") = MsgBoxResult.Yes Then

            '            Dim queriesDelete(3) As String

            '            queriesDelete(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
            '            queriesDelete(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
            '            queriesDelete(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid

            '            executeTransactedSQLCommand(0, queriesDelete)

            '            Dim porcentajeIVA As Double = 0.0
            '            porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
            '            txtPorcentajeIVA.Text = porcentajeIVA * 100

            '            Dim queryIndirectosSubTotal As String
            '            Dim indirectosSubTotal As Double = 0.0
            '            queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
            '            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            '            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            '            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            '            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            '            "WHERE p.iprojectid = " & iprojectid

            '            indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

            '            txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            '            txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            '            Dim queryPrecioSubTotal As String
            '            Dim precioSubTotal As Double = 0.0
            '            queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
            '            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            '            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            '            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            '            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            '            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            '            "WHERE p.iprojectid = " & iprojectid

            '            precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

            '            txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            '            txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            '            Dim precioTotal As Double = 0.0
            '            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

            '            txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


            '        Else
            '            'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcarddescription
            '        End If

            '    Else

            '        'Si pone un texto, e.g. una descripcion de otro producto

            '        dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value.ToString.Trim.Replace("'", "").Replace("--", "").Replace("@", "")

            '        Dim bf As New BuscaTarjetas
            '        bf.susername = susername
            '        bf.bactive = bactive
            '        bf.bonline = bonline
            '        bf.suserfullname = suserfullname
            '        bf.suseremail = suseremail
            '        bf.susersession = susersession
            '        bf.susermachinename = susermachinename
            '        bf.suserip = suserip

            '        bf.iprojectid = iprojectid

            '        bf.querystring = dgvResumenDeTarjetas.CurrentCell.EditedFormattedValue

            '        bf.isEdit = False

            '        bf.isBase = False
            '        bf.isModel = False

            '        bf.isHistoric = isHistoric

            'If Me.WindowState = FormWindowState.Maximized Then
            '    bf.WindowState = FormWindowState.Maximized
            'End If

            '        Me.Visible = False
            '        bf.ShowDialog(Me)
            '        Me.Visible = True

            '        If bf.DialogResult = Windows.Forms.DialogResult.OK Then

            '            dsBusquedaTarjetasRepetidas = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & bf.icardid)

            '            If dsBusquedaTarjetasRepetidas.Tables(0).Rows.Count > 0 Then

            '                MsgBox("Ya tienes esa Tarjeta insertada en este Proyecto. ¿Podrías buscarla en la lista de Resumen de Tarjetas y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Tarjeta Repetida")
            '                Exit Sub

            '            End If

            '            If MsgBox("¿Estás seguro de que deseas reemplazar la Tarjeta " & sselectedcardlegacyid & "?", MsgBoxStyle.YesNo, "Confirmación de Reemplazo de Tarjeta") = MsgBoxResult.Yes Then

            '                Dim cantidaddeTarjeta As Double = 1

            '                Try
            '                    cantidaddeTarjeta = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value)
            '                Catch ex As Exception

            '                End Try

            '                Dim fecha As Integer = 0
            '                Dim hora As String = "00:00:00"

            '                fecha = getMySQLDate()
            '                hora = getAppTime()

            '                Dim queriesReplace(6) As String

            '                queriesReplace(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
            '                queriesReplace(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
            '                queriesReplace(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid

            '                queriesReplace(3) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, scardinputunit, dcardinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
            '                queriesReplace(4) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, icompoundinputid, scompoundinputunit, dcompoundinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
            '                queriesReplace(5) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SELECT " & iprojectid & ", " & bf.icardid & ", scardlegacycategoryid, scardlegacyid, scarddescription, scardunit, dcardqty, dcardindirectcostspercentage, dcardgainpercentage, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecards WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid

            '                executeTransactedSQLCommand(0, queriesReplace)

            '                Dim porcentajeIVA As Double = 0.0
            '                porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
            '                txtPorcentajeIVA.Text = porcentajeIVA * 100

            '                Dim queryIndirectosSubTotal As String
            '                Dim indirectosSubTotal As Double = 0.0
            '                queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
            '                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            '                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            '                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            '                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            '                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            '                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            '                "WHERE p.iprojectid = " & iprojectid

            '                indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

            '                txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            '                txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            '                Dim queryPrecioSubTotal As String
            '                Dim precioSubTotal As Double = 0.0
            '                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
            '                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            '                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            '                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            '                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            '                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            '                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            '                "WHERE p.iprojectid = " & iprojectid

            '                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

            '                txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            '                txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            '                Dim precioTotal As Double = 0.0
            '                precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

            '                txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")



            '            Else

            '                'Si cancela el reemplazo de Tarjeta
            '                'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcarddescription

            '            End If


            '        Else

            '            'Si cancela el reemplazo de Tarjeta
            '            'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedcarddescription

            '        End If

            '    End If

        ElseIf e.ColumnIndex = 4 Then

            'DCardQty

            If dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value Is DBNull.Value Then

                If MsgBox("¿Estás seguro de que quieres eliminar la Tarjeta " & sselectedcardlegacyid & " del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Tarjeta del Proyecto") = MsgBoxResult.Yes Then

                    Dim queriesDelete(3) As String

                    queriesDelete(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                    queriesDelete(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                    queriesDelete(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid

                    executeTransactedSQLCommand(0, queriesDelete)

                    Dim porcentajeIVA As Double = 0.0
                    porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                    txtPorcentajeIVA.Text = porcentajeIVA * 100

                    Dim queryIndirectosSubTotal As String
                    Dim indirectosSubTotal As Double = 0.0
                    queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE p.iprojectid = " & iprojectid

                    indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                    txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    Dim queryPrecioSubTotal As String
                    Dim precioSubTotal As Double = 0.0
                    queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE p.iprojectid = " & iprojectid

                    precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                    txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                    txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    Dim precioTotal As Double = 0.0
                    precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                    txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                Else

                    'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dselectedcardqty

                End If


            ElseIf dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = 0 Then

                If MsgBox("¿Estás seguro de que quieres eliminar la Tarjeta " & sselectedcardlegacyid & " del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Tarjeta del Proyecto") = MsgBoxResult.Yes Then

                    Dim queriesDelete(3) As String

                    queriesDelete(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                    queriesDelete(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid
                    queriesDelete(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & iselectedcardid

                    executeTransactedSQLCommand(0, queriesDelete)

                    Dim porcentajeIVA As Double = 0.0
                    porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                    txtPorcentajeIVA.Text = porcentajeIVA * 100

                    Dim queryIndirectosSubTotal As String
                    Dim indirectosSubTotal As Double = 0.0
                    queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE p.iprojectid = " & iprojectid

                    indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                    txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    Dim queryPrecioSubTotal As String
                    Dim precioSubTotal As Double = 0.0
                    queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE p.iprojectid = " & iprojectid

                    precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                    txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                    txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                    Dim precioTotal As Double = 0.0
                    precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                    txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


                Else

                    'dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dselectedcardqty

                End If

            Else

                'Si pone un número

                Dim cantidaddeTarjeta As Double = 1.0

                Try
                    cantidaddeTarjeta = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value)
                Catch ex As Exception
                    cantidaddeTarjeta = dselectedcardqty
                End Try

                executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SET dcardqty = " & dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid & " AND icardid = " & dgvResumenDeTarjetas.CurrentRow.Cells(0).Value)

                Dim porcentajeIVA As Double = 0.0
                porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                txtPorcentajeIVA.Text = porcentajeIVA * 100

                Dim queryIndirectosSubTotal As String
                Dim indirectosSubTotal As Double = 0.0
                queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim queryPrecioSubTotal As String
                Dim precioSubTotal As Double = 0.0
                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim precioTotal As Double = 0.0
                precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


            End If

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvResumenDeTarjetas_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgvResumenDeTarjetas.EditingControlShowing

        If dgvResumenDeTarjetas.CurrentCell.ColumnIndex = 1 Then

            txtLegacyIdDgvResumenDeTarjetas = CType(e.Control, TextBox)
            txtLegacyIdDgvResumenDeTarjetas_OldText = txtLegacyIdDgvResumenDeTarjetas.Text

            'ElseIf dgvResumenDeTarjetas.CurrentCell.ColumnIndex = 2 Then

            '    txtNombreDgvResumenDeTarjetas = CType(e.Control, TextBox)
            '    txtNombreDgvResumenDeTarjetas_OldText = txtNombreDgvResumenDeTarjetas.Text

        ElseIf dgvResumenDeTarjetas.CurrentCell.ColumnIndex = 4 Then

            txtCantidadDgvResumenDeTarjetas = CType(e.Control, TextBox)
            txtCantidadDgvResumenDeTarjetas_OldText = txtCantidadDgvResumenDeTarjetas.Text

        Else

            txtLegacyIdDgvResumenDeTarjetas = Nothing
            txtLegacyIdDgvResumenDeTarjetas_OldText = Nothing
            txtNombreDgvResumenDeTarjetas = Nothing
            txtNombreDgvResumenDeTarjetas_OldText = Nothing
            txtCantidadDgvResumenDeTarjetas = Nothing
            txtCantidadDgvResumenDeTarjetas_OldText = Nothing

        End If

    End Sub


    Private Sub dgvResumenDeTarjetas_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvResumenDeTarjetas.CellEndEdit

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim dsCategorias As DataSet
        Dim contadorCategorias As Integer = 0
        Dim resumenDeTarjetas As String = ""
        dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
        contadorCategorias = dsCategorias.Tables(0).Rows.Count

        Dim queriesFill(contadorCategorias) As String

        Dim queriesCreation(2) As String

        queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
        queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

        executeTransactedSQLCommand(0, queriesCreation)

        Try

            For i As Integer = 0 To contadorCategorias - 1

                Dim queryContadorDeTarjetas As String = "" & _
                "SELECT COUNT(*) " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                Dim contadorDeTarjetas As Integer = 0

                contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                If contadorDeTarjetas > 0 Then

                    queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                    "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                    "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                    "'' AS dcardunitaryprice, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                    "ORDER BY scardlegacyid "

                End If

            Next i

            executeTransactedSQLCommand(0, queriesFill)

        Catch ex As Exception

        End Try


        setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

        dgvResumenDeTarjetas.Columns(0).Visible = False

        If viewDgvIndirectCosts = False Then
            dgvResumenDeTarjetas.Columns(5).Visible = False
        End If

        If viewDgvProfits = False Then
            dgvResumenDeTarjetas.Columns(6).Visible = False
        End If

        If viewDgvUnitPrices = False Then
            dgvResumenDeTarjetas.Columns(7).Visible = False
        End If

        If viewDgvAmount = False Then
            dgvResumenDeTarjetas.Columns(8).Visible = False
        End If

        dgvResumenDeTarjetas.Columns(0).ReadOnly = True
        dgvResumenDeTarjetas.Columns(2).ReadOnly = True
        dgvResumenDeTarjetas.Columns(3).ReadOnly = True
        dgvResumenDeTarjetas.Columns(5).ReadOnly = True
        dgvResumenDeTarjetas.Columns(6).ReadOnly = True
        dgvResumenDeTarjetas.Columns(7).ReadOnly = True
        dgvResumenDeTarjetas.Columns(8).ReadOnly = True

        dgvResumenDeTarjetas.Columns(0).Width = 30
        dgvResumenDeTarjetas.Columns(1).Width = 60
        dgvResumenDeTarjetas.Columns(2).Width = 200
        dgvResumenDeTarjetas.Columns(3).Width = 60
        dgvResumenDeTarjetas.Columns(4).Width = 70
        dgvResumenDeTarjetas.Columns(5).Width = 70
        dgvResumenDeTarjetas.Columns(6).Width = 70
        dgvResumenDeTarjetas.Columns(7).Width = 70
        dgvResumenDeTarjetas.Columns(8).Width = 70

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvResumenDeTarjetas_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvResumenDeTarjetas.CellDoubleClick

        If openCards = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Try

            If dgvResumenDeTarjetas.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcardid = CInt(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(0).Value())
            sselectedcardlegacyid = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(1).Value()
            sselectedcarddescription = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(2).Value()
            dselectedcardqty = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value())

        Catch ex As Exception

            iselectedcardid = 0
            sselectedcardlegacyid = ""
            sselectedcostdescription = ""
            dselectedcardqty = 1.0

        End Try

        If iselectedcardid = 0 Then
            Exit Sub
        End If


        Dim ag As New AgregarTarjeta
        ag.susername = susername
        ag.bactive = bactive
        ag.bonline = bonline
        ag.suserfullname = suserfullname
        ag.suseremail = suseremail
        ag.susersession = susersession
        ag.susermachinename = susermachinename
        ag.suserip = suserip

        ag.IsBase = False
        ag.IsModel = False

        ag.IsEdit = True
        ag.IsHistoric = isHistoric

        ag.iprojectid = iprojectid
        ag.icardid = iselectedcardid

        If Me.WindowState = FormWindowState.Maximized Then
            ag.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        ag.ShowDialog(Me)
        Me.Visible = True

        If ag.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim dsCategorias As DataSet
            Dim contadorCategorias As Integer = 0
            Dim resumenDeTarjetas As String = ""
            dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
            contadorCategorias = dsCategorias.Tables(0).Rows.Count

            Dim queriesFill(contadorCategorias) As String

            Dim queriesCreation(2) As String

            queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
            queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            executeTransactedSQLCommand(0, queriesCreation)

            Try

                For i As Integer = 0 To contadorCategorias - 1

                    Dim queryContadorDeTarjetas As String = "" & _
                    "SELECT COUNT(*) " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                    Dim contadorDeTarjetas As Integer = 0

                    contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                    If contadorDeTarjetas > 0 Then

                        queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                        "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                        "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                        "'' AS dcardunitaryprice, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                        "ORDER BY scardlegacyid "

                    End If

                Next i

                executeTransactedSQLCommand(0, queriesFill)

            Catch ex As Exception

            End Try


            setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)


            dgvResumenDeTarjetas.Columns(0).Visible = False

            dgvResumenDeTarjetas.Columns(0).ReadOnly = True
            dgvResumenDeTarjetas.Columns(2).ReadOnly = True
            dgvResumenDeTarjetas.Columns(3).ReadOnly = True
            dgvResumenDeTarjetas.Columns(5).ReadOnly = True
            dgvResumenDeTarjetas.Columns(6).ReadOnly = True
            dgvResumenDeTarjetas.Columns(7).ReadOnly = True
            dgvResumenDeTarjetas.Columns(8).ReadOnly = True

            dgvResumenDeTarjetas.Columns(0).Width = 30
            dgvResumenDeTarjetas.Columns(1).Width = 60
            dgvResumenDeTarjetas.Columns(2).Width = 200
            dgvResumenDeTarjetas.Columns(3).Width = 60
            dgvResumenDeTarjetas.Columns(4).Width = 70
            dgvResumenDeTarjetas.Columns(5).Width = 70
            dgvResumenDeTarjetas.Columns(6).Width = 70
            dgvResumenDeTarjetas.Columns(7).Width = 70
            dgvResumenDeTarjetas.Columns(8).Width = 70


        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvResumenDeTarjetas_CellContentDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvResumenDeTarjetas.CellContentDoubleClick

        If openCards = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Try

            If dgvResumenDeTarjetas.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedcardid = CInt(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(0).Value())
            sselectedcardlegacyid = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(1).Value()
            sselectedcarddescription = dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(2).Value()
            dselectedcardqty = CDbl(dgvResumenDeTarjetas.Rows(e.RowIndex).Cells(4).Value())

        Catch ex As Exception

            iselectedcardid = 0
            sselectedcardlegacyid = ""
            sselectedcostdescription = ""
            dselectedcardqty = 1.0

        End Try

        If iselectedcardid = 0 Then
            Exit Sub
        End If

        Dim ag As New AgregarTarjeta
        ag.susername = susername
        ag.bactive = bactive
        ag.bonline = bonline
        ag.suserfullname = suserfullname
        ag.suseremail = suseremail
        ag.susersession = susersession
        ag.susermachinename = susermachinename
        ag.suserip = suserip

        ag.IsBase = False
        ag.IsModel = False

        ag.IsEdit = True
        ag.IsHistoric = isHistoric

        ag.iprojectid = iprojectid
        ag.icardid = iselectedcardid

        If Me.WindowState = FormWindowState.Maximized Then
            ag.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        ag.ShowDialog(Me)
        Me.Visible = True

        If ag.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim dsCategorias As DataSet
            Dim contadorCategorias As Integer = 0
            Dim resumenDeTarjetas As String = ""
            dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
            contadorCategorias = dsCategorias.Tables(0).Rows.Count

            Dim queriesFill(contadorCategorias) As String

            Dim queriesCreation(2) As String

            queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
            queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            executeTransactedSQLCommand(0, queriesCreation)

            Try

                For i As Integer = 0 To contadorCategorias - 1

                    Dim queryContadorDeTarjetas As String = "" & _
                    "SELECT COUNT(*) " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                    Dim contadorDeTarjetas As Integer = 0

                    contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                    If contadorDeTarjetas > 0 Then

                        queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                        "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                        "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                        "'' AS dcardunitaryprice, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                        "ORDER BY scardlegacyid "

                    End If

                Next i

                executeTransactedSQLCommand(0, queriesFill)

            Catch ex As Exception

            End Try

            setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

            dgvResumenDeTarjetas.Columns(0).Visible = False

            dgvResumenDeTarjetas.Columns(0).ReadOnly = True
            dgvResumenDeTarjetas.Columns(2).ReadOnly = True
            dgvResumenDeTarjetas.Columns(3).ReadOnly = True
            dgvResumenDeTarjetas.Columns(5).ReadOnly = True
            dgvResumenDeTarjetas.Columns(6).ReadOnly = True
            dgvResumenDeTarjetas.Columns(7).ReadOnly = True
            dgvResumenDeTarjetas.Columns(8).ReadOnly = True

            dgvResumenDeTarjetas.Columns(0).Width = 30
            dgvResumenDeTarjetas.Columns(1).Width = 60
            dgvResumenDeTarjetas.Columns(2).Width = 200
            dgvResumenDeTarjetas.Columns(3).Width = 60
            dgvResumenDeTarjetas.Columns(4).Width = 70
            dgvResumenDeTarjetas.Columns(5).Width = 70
            dgvResumenDeTarjetas.Columns(6).Width = 70
            dgvResumenDeTarjetas.Columns(7).Width = 70
            dgvResumenDeTarjetas.Columns(8).Width = 70



        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtLegacyIdDgvResumenDeTarjetas_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtLegacyIdDgvResumenDeTarjetas.KeyUp

        txtLegacyIdDgvResumenDeTarjetas.Text = txtLegacyIdDgvResumenDeTarjetas.Text.Replace("'", "").Replace("--", "").Replace("@", "").Replace("|", "")

        Dim strForbidden1 As String = "|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayForbidden1 As Char() = strForbidden1.ToCharArray

        For fc = 0 To arrayForbidden1.Length - 1

            If txtLegacyIdDgvResumenDeTarjetas.Text.Contains(arrayForbidden1(fc)) Then
                txtLegacyIdDgvResumenDeTarjetas.Text = txtLegacyIdDgvResumenDeTarjetas.Text.Replace(arrayForbidden1(fc), "")
            End If

        Next fc

    End Sub


    Private Sub txtNombreDgvResumenDeTarjetas_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtNombreDgvResumenDeTarjetas.KeyUp

        txtNombreDgvResumenDeTarjetas.Text = txtNombreDgvResumenDeTarjetas.Text.Replace("'", "").Replace("--", "").Replace("@", "").Replace("|", "")

        Dim strForbidden1 As String = "|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayForbidden1 As Char() = strForbidden1.ToCharArray

        For fc = 0 To arrayForbidden1.Length - 1

            If txtNombreDgvResumenDeTarjetas.Text.Contains(arrayForbidden1(fc)) Then
                txtNombreDgvResumenDeTarjetas.Text = txtNombreDgvResumenDeTarjetas.Text.Replace(arrayForbidden1(fc), "")
            End If

        Next fc

    End Sub


    Private Sub txtCantidadDgvResumenDeTarjetas_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCantidadDgvResumenDeTarjetas.KeyUp

        If Not IsNumeric(txtCantidadDgvResumenDeTarjetas.Text) Then

            Dim strForbidden2 As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
            Dim arrayForbidden2 As Char() = strForbidden2.ToCharArray

            For cp = 0 To arrayForbidden2.Length - 1

                If txtCantidadDgvResumenDeTarjetas.Text.Contains(arrayForbidden2(cp)) Then
                    txtCantidadDgvResumenDeTarjetas.Text = txtCantidadDgvResumenDeTarjetas.Text.Replace(arrayForbidden2(cp), "")
                End If

            Next cp

            If txtCantidadDgvResumenDeTarjetas.Text.Contains(".") Then

                Dim comparaPuntos As Char() = txtCantidadDgvResumenDeTarjetas.Text.ToCharArray
                Dim cuantosPuntos As Integer = 0


                For letra = 0 To comparaPuntos.Length - 1

                    If comparaPuntos(letra) = "." Then
                        cuantosPuntos = cuantosPuntos + 1
                    End If

                Next

                If cuantosPuntos > 1 Then

                    For cantidad = 1 To cuantosPuntos
                        Dim lugar As Integer = txtCantidadDgvResumenDeTarjetas.Text.LastIndexOf(".")
                        Dim longitud As Integer = txtCantidadDgvResumenDeTarjetas.Text.Length

                        If longitud > (lugar + 1) Then
                            txtCantidadDgvResumenDeTarjetas.Text = txtCantidadDgvResumenDeTarjetas.Text.Substring(0, lugar) & txtCantidadDgvResumenDeTarjetas.Text.Substring(lugar + 1)
                            Exit For
                        Else
                            txtCantidadDgvResumenDeTarjetas.Text = txtCantidadDgvResumenDeTarjetas.Text.Substring(0, lugar)
                            Exit For
                        End If
                    Next

                End If

            End If

            txtCantidadDgvResumenDeTarjetas.Text = txtCantidadDgvResumenDeTarjetas.Text.Replace("--", "").Replace("'", "")
            txtCantidadDgvResumenDeTarjetas.Text = txtCantidadDgvResumenDeTarjetas.Text.Trim

        Else
            txtCantidadDgvResumenDeTarjetas_OldText = txtCantidadDgvResumenDeTarjetas.Text
        End If

    End Sub


    Private Sub dgvResumenDeTarjetas_UserAddedRow(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewRowEventArgs) Handles dgvResumenDeTarjetas.UserAddedRow

        If addCards = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        isResumenDGVReady = False

        Dim bf As New BuscaTarjetas
        bf.susername = susername
        bf.bactive = bactive
        bf.bonline = bonline
        bf.suserfullname = suserfullname
        bf.suseremail = suseremail
        bf.susersession = susersession
        bf.susermachinename = susermachinename
        bf.suserip = suserip

        bf.iprojectid = iprojectid

        bf.querystring = dgvResumenDeTarjetas.CurrentCell.EditedFormattedValue

        bf.isEdit = False

        bf.isBase = False
        bf.isModel = False

        bf.isHistoric = isHistoric

        If Me.WindowState = FormWindowState.Maximized Then
            bf.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        bf.ShowDialog(Me)
        Me.Visible = True

        If bf.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim baseid As Integer = 0
            baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

            If baseid = 0 Then
                baseid = 99999
            End If

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            Dim chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto As Integer = 0
            chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid)

            If chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto = 0 Then

                Dim queriesPrimeraVez(2) As String
                queriesPrimeraVez(0) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices SELECT " & iprojectid & ", iinputid, dinputpricewithoutIVA, dinputprotectionpercentage, dinputfinalprice, " & fecha & ", '" & hora & "', '" & susername & "' FROM (SELECT * FROM baseprices WHERE ibaseid = " & baseid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid"
                queriesPrimeraVez(1) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber SELECT " & iprojectid & ", bt.iinputid, bt.dinputtimberespesor, bt.dinputtimberancho, bt.dinputtimberlargo, bt.dinputtimberpreciopiecubico, " & fecha & ", '" & hora & "', '" & susername & "' FROM basetimber bt where ibaseid = " & baseid
                executeTransactedSQLCommand(0, queriesPrimeraVez)

            End If

            If bf.wasCreated = False Then


                Dim dsBusquedaTarjetasRepetidas As DataSet

                dsBusquedaTarjetasRepetidas = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND scardlegacyid = '" & bf.scardlegacyid & "'")

                If dsBusquedaTarjetasRepetidas.Tables(0).Rows.Count > 0 Then

                    MsgBox("Ya tienes esa Tarjeta insertada en este Proyecto. ¿Podrías buscarla en la lista de Resumen de Tarjetas y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Tarjeta Repetida")
                    dgvResumenDeTarjetas.EndEdit()
                    Exit Sub

                End If


                'Dim cardid As Integer
                'cardid = getSQLQueryAsInteger(0, "SELECT IF(MAX(icardid) + 1 IS NULL, 1, MAX(icardid) + 1) AS icardid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")
                'iselectedcardid = cardid

                Dim queriesInsert(3) As String

                queriesInsert(0) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, scardinputunit, dcardinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
                queriesInsert(1) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, icompoundinputid, scompoundinputunit, dcompoundinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
                queriesInsert(2) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SELECT " & iprojectid & ", " & bf.icardid & ", scardlegacycategoryid, scardlegacyid, scarddescription, scardunit, dcardqty, dcardindirectcostspercentage, dcardgainpercentage, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecards WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid

                executeTransactedSQLCommand(0, queriesInsert)

            End If

            Dim porcentajeIVA As Double = 0.0
            porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
            txtPorcentajeIVA.Text = porcentajeIVA * 100

            Dim queryIndirectosSubTotal As String
            Dim indirectosSubTotal As Double = 0.0
            queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

            txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim queryPrecioSubTotal As String
            Dim precioSubTotal As Double = 0.0
            queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

            txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim precioTotal As Double = 0.0
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

            txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


            dgvResumenDeTarjetas.EndEdit()

            isResumenDGVReady = True

        Else

            dgvResumenDeTarjetas.EndEdit()

            isResumenDGVReady = True

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvResumenDeTarjetas_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgvResumenDeTarjetas.KeyUp

        If e.KeyCode = Keys.Delete Then

            If deleteCards = False Then
                Exit Sub
            End If

            If MsgBox("¿Está seguro que deseas eliminar la Tarjeta " & sselectedcardlegacyid & " del Proyecto?", MsgBoxStyle.YesNo, "Confirmar Eliminación de Tarjeta") = MsgBoxResult.Yes Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                Dim tmpselectedcardid As Integer = 0
                Try
                    tmpselectedcardid = CInt(dgvResumenDeTarjetas.CurrentRow.Cells(0).Value)
                Catch ex As Exception

                End Try

                Dim queriesDelete(3) As String

                queriesDelete(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & tmpselectedcardid
                queriesDelete(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & tmpselectedcardid
                queriesDelete(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & tmpselectedcardid

                executeTransactedSQLCommand(0, queriesDelete)

                Dim porcentajeIVA As Double = 0.0
                porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                txtPorcentajeIVA.Text = porcentajeIVA * 100

                Dim queryIndirectosSubTotal As String
                Dim indirectosSubTotal As Double = 0.0
                queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim queryPrecioSubTotal As String
                Dim precioSubTotal As Double = 0.0
                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim precioTotal As Double = 0.0
                precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")



                Dim dsCategorias As DataSet
                Dim contadorCategorias As Integer = 0
                Dim resumenDeTarjetas As String = ""
                dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
                contadorCategorias = dsCategorias.Tables(0).Rows.Count

                Dim queriesFill(contadorCategorias) As String

                Dim queriesCreation(2) As String

                queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
                queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                executeTransactedSQLCommand(0, queriesCreation)

                Try

                    For i As Integer = 0 To contadorCategorias - 1

                        Dim queryContadorDeTarjetas As String = "" & _
                        "SELECT COUNT(*) " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                        Dim contadorDeTarjetas As Integer = 0

                        contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                        If contadorDeTarjetas > 0 Then

                            queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                            "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                            "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                            "'' AS dcardunitaryprice, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                            "ORDER BY scardlegacyid "

                        End If

                    Next i

                    executeTransactedSQLCommand(0, queriesFill)

                Catch ex As Exception

                End Try


                setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

                dgvResumenDeTarjetas.Columns(0).Visible = False

                dgvResumenDeTarjetas.Columns(0).ReadOnly = True
                dgvResumenDeTarjetas.Columns(2).ReadOnly = True
                dgvResumenDeTarjetas.Columns(3).ReadOnly = True
                dgvResumenDeTarjetas.Columns(5).ReadOnly = True
                dgvResumenDeTarjetas.Columns(6).ReadOnly = True
                dgvResumenDeTarjetas.Columns(7).ReadOnly = True
                dgvResumenDeTarjetas.Columns(8).ReadOnly = True

                dgvResumenDeTarjetas.Columns(0).Width = 30
                dgvResumenDeTarjetas.Columns(1).Width = 60
                dgvResumenDeTarjetas.Columns(2).Width = 200
                dgvResumenDeTarjetas.Columns(3).Width = 60
                dgvResumenDeTarjetas.Columns(4).Width = 70
                dgvResumenDeTarjetas.Columns(5).Width = 70
                dgvResumenDeTarjetas.Columns(6).Width = 70
                dgvResumenDeTarjetas.Columns(7).Width = 70
                dgvResumenDeTarjetas.Columns(8).Width = 70


                Cursor.Current = System.Windows.Forms.Cursors.Default

            End If

        End If

    End Sub


    Private Sub txtPorcentajeIVA_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtPorcentajeIVA.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtPorcentajeIVA.Text.Contains(arrayCaractProhib(carp)) Then
                txtPorcentajeIVA.Text = txtPorcentajeIVA.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtPorcentajeIVA.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtPorcentajeIVA.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtPorcentajeIVA.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtPorcentajeIVA.Text.Length

                    If longitud > (lugar + 1) Then
                        txtPorcentajeIVA.Text = txtPorcentajeIVA.Text.Substring(0, lugar) & txtPorcentajeIVA.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtPorcentajeIVA.Text = txtPorcentajeIVA.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtPorcentajeIVA.Select(txtPorcentajeIVA.Text.Length, 0)
        End If

        txtPorcentajeIVA.Text = txtPorcentajeIVA.Text.Replace("--", "").Replace("'", "")
        txtPorcentajeIVA.Text = txtPorcentajeIVA.Text.Trim

    End Sub


    Private Sub txtPorcentajeIVA_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPorcentajeIVA.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtPorcentajeIVA.Text = txtPorcentajeIVA.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtPorcentajeIVA.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET dprojectIVApercentage = " & valor / 100 & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
        Catch ex As Exception

        End Try

        Dim queryIndirectosSubTotal As String
        Dim indirectosSubTotal As Double = 0.0
        queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

        txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * (valor / 100)), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim queryPrecioSubTotal As String
        Dim precioSubTotal As Double = 0.0
        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtIVA.Text = FormatCurrency(precioSubTotal * (valor / 100), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim precioTotal As Double = 0.0
        precioTotal = precioSubTotal + (precioSubTotal * (valor / 100))

        txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtPorcentajeIndirectosDefault_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtPorcentajeIndirectosDefault.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtPorcentajeIndirectosDefault.Text.Contains(arrayCaractProhib(carp)) Then
                txtPorcentajeIndirectosDefault.Text = txtPorcentajeIndirectosDefault.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtPorcentajeIndirectosDefault.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtPorcentajeIndirectosDefault.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtPorcentajeIndirectosDefault.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtPorcentajeIndirectosDefault.Text.Length

                    If longitud > (lugar + 1) Then
                        txtPorcentajeIndirectosDefault.Text = txtPorcentajeIndirectosDefault.Text.Substring(0, lugar) & txtPorcentajeIndirectosDefault.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtPorcentajeIndirectosDefault.Text = txtPorcentajeIndirectosDefault.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtPorcentajeIndirectosDefault.Select(txtPorcentajeIndirectosDefault.Text.Length, 0)
        End If

        txtPorcentajeIndirectosDefault.Text = txtPorcentajeIndirectosDefault.Text.Replace("--", "").Replace("'", "")
        txtPorcentajeIndirectosDefault.Text = txtPorcentajeIndirectosDefault.Text.Trim

    End Sub


    Private Sub txtPorcentajeIndirectosDefault_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPorcentajeIndirectosDefault.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtPorcentajeIndirectosDefault.Text = txtPorcentajeIndirectosDefault.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtPorcentajeIndirectosDefault.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET dprojectindirectpercentagedefault = " & valor / 100 & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
        Catch ex As Exception

        End Try

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtPorcentajeUtilidadDefault_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtPorcentajeUtilidadDefault.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtPorcentajeUtilidadDefault.Text.Contains(arrayCaractProhib(carp)) Then
                txtPorcentajeUtilidadDefault.Text = txtPorcentajeUtilidadDefault.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtPorcentajeUtilidadDefault.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtPorcentajeUtilidadDefault.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtPorcentajeUtilidadDefault.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtPorcentajeUtilidadDefault.Text.Length

                    If longitud > (lugar + 1) Then
                        txtPorcentajeUtilidadDefault.Text = txtPorcentajeUtilidadDefault.Text.Substring(0, lugar) & txtPorcentajeUtilidadDefault.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtPorcentajeUtilidadDefault.Text = txtPorcentajeUtilidadDefault.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtPorcentajeUtilidadDefault.Select(txtPorcentajeUtilidadDefault.Text.Length, 0)
        End If

        txtPorcentajeUtilidadDefault.Text = txtPorcentajeUtilidadDefault.Text.Replace("--", "").Replace("'", "")
        txtPorcentajeUtilidadDefault.Text = txtPorcentajeUtilidadDefault.Text.Trim

    End Sub


    Private Sub txtPorcentajeUtilidadDefault_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPorcentajeUtilidadDefault.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtPorcentajeUtilidadDefault.Text = txtPorcentajeUtilidadDefault.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtPorcentajeUtilidadDefault.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET dprojectgainpercentagedefault = " & valor / 100 & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
        Catch ex As Exception

        End Try

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnNuevaTarjeta_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNuevaTarjeta.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        isResumenDGVReady = False

        Dim af As New AgregarTarjeta
        af.susername = susername
        af.bactive = bactive
        af.bonline = bonline
        af.suserfullname = suserfullname
        af.suseremail = suseremail
        af.susersession = susersession
        af.susermachinename = susermachinename
        af.suserip = suserip

        af.iprojectid = iprojectid

        af.IsEdit = False

        af.IsBase = False
        af.IsModel = False

        af.IsHistoric = isHistoric

        If Me.WindowState = FormWindowState.Maximized Then
            af.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        af.ShowDialog(Me)
        Me.Visible = True

        If af.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim baseid As Integer = 0
            baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

            If baseid = 0 Then
                baseid = 99999
            End If

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            Dim chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto As Integer = 0
            chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid)

            If chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto = 0 Then
                Dim queriesPrimeraVez(2) As String
                queriesPrimeraVez(0) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices SELECT " & iprojectid & ", iinputid, dinputpricewithoutIVA, dinputprotectionpercentage, dinputfinalprice, " & fecha & ", '" & hora & "', '" & susername & "' FROM (SELECT * FROM baseprices WHERE ibaseid = " & baseid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid"
                queriesPrimeraVez(1) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber SELECT " & iprojectid & ", bt.iinputid, bt.dinputtimberespesor, bt.dinputtimberancho, bt.dinputtimberlargo, bt.dinputtimberpreciopiecubico, " & fecha & ", '" & hora & "', '" & susername & "' FROM basetimber bt where ibaseid = " & baseid
                executeTransactedSQLCommand(0, queriesPrimeraVez)
            End If

            If af.wasCreated = False Then


                Dim dsBusquedaTarjetasRepetidas As DataSet

                dsBusquedaTarjetasRepetidas = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND scardlegacyid = '" & getSQLQueryAsString(0, "SELECT scardlegacyid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE icardid = " & af.icardid) & "'")

                If dsBusquedaTarjetasRepetidas.Tables(0).Rows.Count > 0 Then

                    MsgBox("Ya tienes esa Tarjeta insertada en este Proyecto. ¿Podrías buscarla en la lista de Resumen de Tarjetas y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Tarjeta Repetida")
                    dgvResumenDeTarjetas.EndEdit()
                    Exit Sub

                End If


                'Dim cardid As Integer
                'cardid = getSQLQueryAsInteger(0, "SELECT IF(MAX(icardid) + 1 IS NULL, 1, MAX(icardid) + 1) AS icardid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")
                'iselectedcardid = cardid

                Dim queriesInsert(3) As String

                queriesInsert(0) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs SELECT " & iprojectid & ", " & af.icardid & ", iinputid, scardinputunit, dcardinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardinputs WHERE ibaseid = " & baseid & " AND icardid = " & af.icardid
                queriesInsert(1) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs SELECT " & iprojectid & ", " & af.icardid & ", iinputid, icompoundinputid, scompoundinputunit, dcompoundinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE ibaseid = " & baseid & " AND icardid = " & af.icardid
                queriesInsert(2) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SELECT " & iprojectid & ", " & af.icardid & ", scardlegacycategoryid, scardlegacyid, scarddescription, scardunit, dcardqty, dcardindirectcostspercentage, dcardgainpercentage, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecards WHERE ibaseid = " & baseid & " AND icardid = " & af.icardid

                executeTransactedSQLCommand(0, queriesInsert)

            End If

            Dim porcentajeIVA As Double = 0.0
            porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
            txtPorcentajeIVA.Text = porcentajeIVA * 100

            Dim queryIndirectosSubTotal As String
            Dim indirectosSubTotal As Double = 0.0
            queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

            txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim queryPrecioSubTotal As String
            Dim precioSubTotal As Double = 0.0
            queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

            txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim precioTotal As Double = 0.0
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

            txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        End If

        Dim dsCategorias As DataSet
        Dim contadorCategorias As Integer = 0
        Dim resumenDeTarjetas As String = ""
        dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
        contadorCategorias = dsCategorias.Tables(0).Rows.Count

        Dim queriesFill(contadorCategorias) As String

        Dim queriesCreation(2) As String

        queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
        queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

        executeTransactedSQLCommand(0, queriesCreation)

        Try

            For i As Integer = 0 To contadorCategorias - 1

                Dim queryContadorDeTarjetas As String = "" & _
                "SELECT COUNT(*) " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                Dim contadorDeTarjetas As Integer = 0

                contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                If contadorDeTarjetas > 0 Then

                    queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                    "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                    "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                    "'' AS dcardunitaryprice, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                    "ORDER BY scardlegacyid "

                End If

            Next i

            executeTransactedSQLCommand(0, queriesFill)

        Catch ex As Exception

        End Try


        setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

        dgvResumenDeTarjetas.Columns(0).Visible = False

        dgvResumenDeTarjetas.Columns(0).ReadOnly = True
        dgvResumenDeTarjetas.Columns(2).ReadOnly = True
        dgvResumenDeTarjetas.Columns(3).ReadOnly = True
        dgvResumenDeTarjetas.Columns(5).ReadOnly = True
        dgvResumenDeTarjetas.Columns(6).ReadOnly = True
        dgvResumenDeTarjetas.Columns(7).ReadOnly = True
        dgvResumenDeTarjetas.Columns(8).ReadOnly = True

        dgvResumenDeTarjetas.Columns(0).Width = 30
        dgvResumenDeTarjetas.Columns(1).Width = 60
        dgvResumenDeTarjetas.Columns(2).Width = 200
        dgvResumenDeTarjetas.Columns(3).Width = 60
        dgvResumenDeTarjetas.Columns(4).Width = 70
        dgvResumenDeTarjetas.Columns(5).Width = 70
        dgvResumenDeTarjetas.Columns(6).Width = 70
        dgvResumenDeTarjetas.Columns(7).Width = 70
        dgvResumenDeTarjetas.Columns(8).Width = 70

        isResumenDGVReady = True

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnInsertarTarjeta_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnInsertarTarjeta.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        isResumenDGVReady = False

        Dim bf As New BuscaTarjetas
        bf.susername = susername
        bf.bactive = bactive
        bf.bonline = bonline
        bf.suserfullname = suserfullname
        bf.suseremail = suseremail
        bf.susersession = susersession
        bf.susermachinename = susermachinename
        bf.suserip = suserip

        bf.iprojectid = iprojectid

        bf.isEdit = False

        bf.isBase = False
        bf.isModel = False

        bf.isHistoric = isHistoric

        If Me.WindowState = FormWindowState.Maximized Then
            bf.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        bf.ShowDialog(Me)
        Me.Visible = True

        If bf.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim baseid As Integer = 0
            baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

            If baseid = 0 Then
                baseid = 99999
            End If

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            Dim chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto As Integer = 0
            chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid)

            If chequeoPrimeraVezQueSeInsertaTarjetaDelProyecto = 0 Then
                Dim queriesPrimeraVez(2) As String
                queriesPrimeraVez(0) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices SELECT " & iprojectid & ", iinputid, dinputpricewithoutIVA, dinputprotectionpercentage, dinputfinalprice, " & fecha & ", '" & hora & "', '" & susername & "' FROM (SELECT * FROM baseprices WHERE ibaseid = " & baseid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid"
                queriesPrimeraVez(1) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber SELECT " & iprojectid & ", bt.iinputid, bt.dinputtimberespesor, bt.dinputtimberancho, bt.dinputtimberlargo, bt.dinputtimberpreciopiecubico, " & fecha & ", '" & hora & "', '" & susername & "' FROM basetimber bt where ibaseid = " & baseid
                executeTransactedSQLCommand(0, queriesPrimeraVez)
            End If

            If bf.wasCreated = False Then


                Dim dsBusquedaTarjetasRepetidas As DataSet

                dsBusquedaTarjetasRepetidas = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND scardlegacyid = '" & bf.scardlegacyid & "'")

                If dsBusquedaTarjetasRepetidas.Tables(0).Rows.Count > 0 Then

                    MsgBox("Ya tienes esa Tarjeta insertada en este Proyecto. ¿Podrías buscarla en la lista de Resumen de Tarjetas y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Tarjeta Repetida")
                    dgvResumenDeTarjetas.EndEdit()
                    Exit Sub

                End If


                'Dim cardid As Integer
                'cardid = getSQLQueryAsInteger(0, "SELECT IF(MAX(icardid) + 1 IS NULL, 1, MAX(icardid) + 1) AS icardid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")
                'iselectedcardid = cardid

                Dim queriesInsert(3) As String

                queriesInsert(0) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, scardinputunit, dcardinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
                queriesInsert(1) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs SELECT " & iprojectid & ", " & bf.icardid & ", iinputid, icompoundinputid, scompoundinputunit, dcompoundinputqty, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid
                queriesInsert(2) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards SELECT " & iprojectid & ", " & bf.icardid & ", scardlegacycategoryid, scardlegacyid, scarddescription, scardunit, dcardqty, dcardindirectcostspercentage, dcardgainpercentage, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecards WHERE ibaseid = " & baseid & " AND icardid = " & bf.icardid

                executeTransactedSQLCommand(0, queriesInsert)

            End If

            Dim porcentajeIVA As Double = 0.0
            porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
            txtPorcentajeIVA.Text = porcentajeIVA * 100

            Dim queryIndirectosSubTotal As String
            Dim indirectosSubTotal As Double = 0.0
            queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

            txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim queryPrecioSubTotal As String
            Dim precioSubTotal As Double = 0.0
            queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

            txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim precioTotal As Double = 0.0
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

            txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        End If

        Dim dsCategorias As DataSet
        Dim contadorCategorias As Integer = 0
        Dim resumenDeTarjetas As String = ""
        dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
        contadorCategorias = dsCategorias.Tables(0).Rows.Count

        Dim queriesFill(contadorCategorias) As String

        Dim queriesCreation(2) As String

        queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
        queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

        executeTransactedSQLCommand(0, queriesCreation)

        Try

            For i As Integer = 0 To contadorCategorias - 1

                Dim queryContadorDeTarjetas As String = "" & _
                "SELECT COUNT(*) " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                Dim contadorDeTarjetas As Integer = 0

                contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                If contadorDeTarjetas > 0 Then

                    queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                    "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                    "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                    "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                    "'' AS dcardunitaryprice, " & _
                    "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                    "UNION " & _
                    "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                    "ORDER BY scardlegacyid "

                End If

            Next i

            executeTransactedSQLCommand(0, queriesFill)

        Catch ex As Exception

        End Try


        setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

        dgvResumenDeTarjetas.Columns(0).Visible = False

        dgvResumenDeTarjetas.Columns(0).ReadOnly = True
        dgvResumenDeTarjetas.Columns(2).ReadOnly = True
        dgvResumenDeTarjetas.Columns(3).ReadOnly = True
        dgvResumenDeTarjetas.Columns(5).ReadOnly = True
        dgvResumenDeTarjetas.Columns(6).ReadOnly = True
        dgvResumenDeTarjetas.Columns(7).ReadOnly = True
        dgvResumenDeTarjetas.Columns(8).ReadOnly = True

        dgvResumenDeTarjetas.Columns(0).Width = 30
        dgvResumenDeTarjetas.Columns(1).Width = 60
        dgvResumenDeTarjetas.Columns(2).Width = 200
        dgvResumenDeTarjetas.Columns(3).Width = 60
        dgvResumenDeTarjetas.Columns(4).Width = 70
        dgvResumenDeTarjetas.Columns(5).Width = 70
        dgvResumenDeTarjetas.Columns(6).Width = 70
        dgvResumenDeTarjetas.Columns(7).Width = 70
        dgvResumenDeTarjetas.Columns(8).Width = 70

        isResumenDGVReady = True

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnEliminarTarjeta_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEliminarTarjeta.Click

        If MsgBox("¿Está seguro que deseas eliminar la Tarjeta " & sselectedcardlegacyid & " del Proyecto?", MsgBoxStyle.YesNo, "Confirmar Eliminación de Tarjeta") = MsgBoxResult.Yes Then

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            Dim tmpselectedcardid As Integer = 0
            Try
                tmpselectedcardid = CInt(dgvResumenDeTarjetas.CurrentRow.Cells(0).Value)
            Catch ex As Exception

            End Try

            Dim queriesDelete(3) As String

            queriesDelete(0) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards WHERE iprojectid = " & iprojectid & " AND icardid = " & tmpselectedcardid
            queriesDelete(1) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & tmpselectedcardid
            queriesDelete(2) = "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs WHERE iprojectid = " & iprojectid & " AND icardid = " & tmpselectedcardid

            executeTransactedSQLCommand(0, queriesDelete)

            Dim porcentajeIVA As Double = 0.0
            porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
            txtPorcentajeIVA.Text = porcentajeIVA * 100

            Dim queryIndirectosSubTotal As String
            Dim indirectosSubTotal As Double = 0.0
            queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

            txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim queryPrecioSubTotal As String
            Dim precioSubTotal As Double = 0.0
            queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

            txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim precioTotal As Double = 0.0
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

            txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")



            Dim dsCategorias As DataSet
            Dim contadorCategorias As Integer = 0
            Dim resumenDeTarjetas As String = ""
            dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
            contadorCategorias = dsCategorias.Tables(0).Rows.Count

            Dim queriesFill(contadorCategorias) As String

            Dim queriesCreation(2) As String

            queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
            queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            executeTransactedSQLCommand(0, queriesCreation)

            Try

                For i As Integer = 0 To contadorCategorias - 1

                    Dim queryContadorDeTarjetas As String = "" & _
                    "SELECT COUNT(*) " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                    Dim contadorDeTarjetas As Integer = 0

                    contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                    If contadorDeTarjetas > 0 Then

                        queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                        "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                        "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                        "'' AS dcardunitaryprice, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                        "ORDER BY scardlegacyid "

                    End If

                Next i

                executeTransactedSQLCommand(0, queriesFill)

            Catch ex As Exception

            End Try


            setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

            dgvResumenDeTarjetas.Columns(0).Visible = False

            dgvResumenDeTarjetas.Columns(0).ReadOnly = True
            dgvResumenDeTarjetas.Columns(2).ReadOnly = True
            dgvResumenDeTarjetas.Columns(3).ReadOnly = True
            dgvResumenDeTarjetas.Columns(5).ReadOnly = True
            dgvResumenDeTarjetas.Columns(6).ReadOnly = True
            dgvResumenDeTarjetas.Columns(7).ReadOnly = True
            dgvResumenDeTarjetas.Columns(8).ReadOnly = True

            dgvResumenDeTarjetas.Columns(0).Width = 30
            dgvResumenDeTarjetas.Columns(1).Width = 60
            dgvResumenDeTarjetas.Columns(2).Width = 200
            dgvResumenDeTarjetas.Columns(3).Width = 60
            dgvResumenDeTarjetas.Columns(4).Width = 70
            dgvResumenDeTarjetas.Columns(5).Width = 70
            dgvResumenDeTarjetas.Columns(6).Width = 70
            dgvResumenDeTarjetas.Columns(7).Width = 70
            dgvResumenDeTarjetas.Columns(8).Width = 70

            isResumenDGVReady = True

            Cursor.Current = System.Windows.Forms.Cursors.Default

        End If

    End Sub


    Private Function validaResumenDeTarjetas(ByVal silent As Boolean) As Boolean

        If isFormReadyForAction = False Then
            Exit Function
        End If


        'Dim porcentajeIVA As Double = 0.0

        'Try
        '    porcentajeIVA = CDbl(txtPorcentajeIVA.Text)

        'Catch ex As Exception

        'End Try

        'If porcentajeIVA = 0 Then

        '    tcProyecto.SelectedTab = tpResumenTarjetas
        '    txtPorcentajeIVA.Select()
        '    txtPorcentajeIVA.Focus()

        '    If silent = False Then
        '        MsgBox("¿Podrías poner el porcentaje de IVA aplicable a las Tarjetas del Proyecto?", MsgBoxStyle.OkOnly, "Dato Faltante")
        '    End If

        '    alertaMostrada = True
        '    Return False

        'End If

        If isEdit = False Then

            If paso4 = False Then

                Return False

            End If

        End If

        Return True


    End Function


    Private Sub btnActualizarPrecios_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnActualizarPrecios.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        paso4 = True

        If validaResumenDeTarjetas(False) = False Then
            paso4 = False
            Exit Sub
        End If

        Dim queryPreciosYaCambiaron As String
        Dim preciosCambiados As Double = 0.0
        Dim baseid As Integer = 0

        baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

        If baseid = 0 Then
            baseid = 99999
        End If

        queryPreciosYaCambiaron = "SELECT SUM(bp.dinputfinalprice <> pp.dinputfinalprice) AS diferente FROM inputs i JOIN (SELECT * FROM (SELECT * FROM baseprices bp WHERE ibaseid = " & baseid & " ORDER BY iupdatedate DESC, supdatetime DESC) bp GROUP BY iinputid) bp ON bp.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices pp WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid) pp ON pp.iinputid = i.iinputid"
        preciosCambiados = getSQLQueryAsDouble(0, queryPreciosYaCambiaron)

        If preciosCambiados > 0 Then

            Dim micpd As New BuscaInsumosConPrecioDiferente
            micpd.susername = susername
            micpd.bactive = bactive
            micpd.bonline = bonline
            micpd.suserfullname = suserfullname
            micpd.suseremail = suseremail
            micpd.susersession = susersession
            micpd.susermachinename = susermachinename
            micpd.suserip = suserip

            'micpd.isEdit = True
            micpd.IsBase = False
            micpd.IsModel = False
            micpd.IsHistoric = isHistoric

            micpd.iprojectid = iprojectid

            If Me.WindowState = FormWindowState.Maximized Then
                micpd.WindowState = FormWindowState.Maximized
            End If

            Me.Visible = False
            micpd.ShowDialog(Me)
            Me.Visible = True

            'Acá van los querys del tab de Resumen de Tarjetas (del Load)
            Dim dsCategorias As DataSet
            Dim contadorCategorias As Integer = 0
            Dim resumenDeTarjetas As String = ""
            dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
            contadorCategorias = dsCategorias.Tables(0).Rows.Count

            Dim queriesFill(contadorCategorias) As String

            Dim queriesCreation(2) As String

            queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
            queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            executeTransactedSQLCommand(0, queriesCreation)

            Try

                For i As Integer = 0 To contadorCategorias - 1

                    Dim queryContadorDeTarjetas As String = "" & _
                    "SELECT COUNT(*) " & _
                    "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                    "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                    "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                    "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                    "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                    Dim contadorDeTarjetas As Integer = 0

                    contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                    If contadorDeTarjetas > 0 Then

                        queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                        "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                        "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                        "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                        "'' AS dcardunitaryprice, " & _
                        "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                        "UNION " & _
                        "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                        "ORDER BY scardlegacyid "

                    End If

                Next i

                executeTransactedSQLCommand(0, queriesFill)

            Catch ex As Exception

            End Try


            setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

            dgvResumenDeTarjetas.Columns(0).Visible = False

            dgvResumenDeTarjetas.Columns(0).ReadOnly = True
            dgvResumenDeTarjetas.Columns(2).ReadOnly = True
            dgvResumenDeTarjetas.Columns(3).ReadOnly = True
            dgvResumenDeTarjetas.Columns(5).ReadOnly = True
            dgvResumenDeTarjetas.Columns(6).ReadOnly = True
            dgvResumenDeTarjetas.Columns(7).ReadOnly = True
            dgvResumenDeTarjetas.Columns(8).ReadOnly = True

            dgvResumenDeTarjetas.Columns(0).Width = 30
            dgvResumenDeTarjetas.Columns(1).Width = 60
            dgvResumenDeTarjetas.Columns(2).Width = 200
            dgvResumenDeTarjetas.Columns(3).Width = 60
            dgvResumenDeTarjetas.Columns(4).Width = 70
            dgvResumenDeTarjetas.Columns(5).Width = 70
            dgvResumenDeTarjetas.Columns(6).Width = 70
            dgvResumenDeTarjetas.Columns(7).Width = 70
            dgvResumenDeTarjetas.Columns(8).Width = 70


            Dim porcentajeIVA As Double = 0.0
            porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
            txtPorcentajeIVA.Text = porcentajeIVA * 100

            Dim queryIndirectosSubTotal As String
            Dim indirectosSubTotal As Double = 0.0
            queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

            txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim queryPrecioSubTotal As String
            Dim precioSubTotal As Double = 0.0
            queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
            "WHERE p.iprojectid = " & iprojectid

            precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

            txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

            Dim precioTotal As Double = 0.0
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

            txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Else

            Cursor.Current = System.Windows.Forms.Cursors.Default
            MsgBox("No hay ningún precio desactualizado", MsgBoxStyle.OkOnly, "Precios Actualizados")

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnActualizarUtilidad_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnActualizarUtilidad.Click

        If MsgBox("¿Está seguro de que deseas actualizar los Porcentajes de Indirectos y Utilidades para TODAS las Tarjetas del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Actualización de Utilidades e Indirectos") = MsgBoxResult.Yes Then

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            paso4 = True

            If validaResumenDeTarjetas(False) = False Then
                paso4 = False
                Exit Sub
            End If

            Dim ciyu As New AgregarProyectoCambiaIndirectosYUtilidad
            ciyu.susername = susername
            ciyu.bactive = bactive
            ciyu.bonline = bonline
            ciyu.suserfullname = suserfullname
            ciyu.suseremail = suseremail
            ciyu.susersession = susersession
            ciyu.susermachinename = susermachinename
            ciyu.suserip = suserip

            ciyu.isBase = False
            ciyu.IsModel = False

            ciyu.iprojectid = iprojectid

            Me.Visible = False
            ciyu.ShowDialog(Me)
            Me.Visible = True

            If ciyu.DialogResult = Windows.Forms.DialogResult.OK Then

                'Acá van los querys del tab de Resumen de Tarjetas (del Load)
                Dim dsCategorias As DataSet
                Dim contadorCategorias As Integer = 0
                Dim resumenDeTarjetas As String = ""
                dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
                contadorCategorias = dsCategorias.Tables(0).Rows.Count

                Dim queriesFill(contadorCategorias) As String

                Dim queriesCreation(2) As String

                queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
                queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                executeTransactedSQLCommand(0, queriesCreation)

                Try

                    For i As Integer = 0 To contadorCategorias - 1

                        Dim queryContadorDeTarjetas As String = "" & _
                        "SELECT COUNT(*) " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                        Dim contadorDeTarjetas As Integer = 0

                        contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                        If contadorDeTarjetas > 0 Then

                            queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                            "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                            "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                            "'' AS dcardunitaryprice, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                            "ORDER BY scardlegacyid "

                        End If

                    Next i

                    executeTransactedSQLCommand(0, queriesFill)

                Catch ex As Exception

                End Try


                setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

                dgvResumenDeTarjetas.Columns(0).Visible = False

                dgvResumenDeTarjetas.Columns(0).ReadOnly = True
                dgvResumenDeTarjetas.Columns(2).ReadOnly = True
                dgvResumenDeTarjetas.Columns(3).ReadOnly = True
                dgvResumenDeTarjetas.Columns(5).ReadOnly = True
                dgvResumenDeTarjetas.Columns(6).ReadOnly = True
                dgvResumenDeTarjetas.Columns(7).ReadOnly = True
                dgvResumenDeTarjetas.Columns(8).ReadOnly = True

                dgvResumenDeTarjetas.Columns(0).Width = 30
                dgvResumenDeTarjetas.Columns(1).Width = 60
                dgvResumenDeTarjetas.Columns(2).Width = 200
                dgvResumenDeTarjetas.Columns(3).Width = 60
                dgvResumenDeTarjetas.Columns(4).Width = 70
                dgvResumenDeTarjetas.Columns(5).Width = 70
                dgvResumenDeTarjetas.Columns(6).Width = 70
                dgvResumenDeTarjetas.Columns(7).Width = 70
                dgvResumenDeTarjetas.Columns(8).Width = 70


                Dim porcentajeIVA As Double = 0.0
                porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                txtPorcentajeIVA.Text = porcentajeIVA * 100

                Dim queryIndirectosSubTotal As String
                Dim indirectosSubTotal As Double = 0.0
                queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim queryPrecioSubTotal As String
                Dim precioSubTotal As Double = 0.0
                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim precioTotal As Double = 0.0
                precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


            End If

            Cursor.Current = System.Windows.Forms.Cursors.Default

        End If

    End Sub


    Private Sub btnGenerarContratoWord_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnGenerarContratoWord.Click

        If (String.IsNullOrEmpty(iclientid) = True Or iclientid = 0) Then
            MsgBox("Aún NO has definido un cliente para este proyecto. ¿Podrías decirme para quién estás creando este proyecto?", MsgBoxStyle.OkOnly, "Proyecto sin Cliente")
            tcProyecto.SelectedTab = tpDatosIniciales
            txtNombreCliente.Select()
            txtNombreCliente.Focus()
            Exit Sub
        End If

        Try

            Dim resultado As Boolean = False

            Dim fecha As String = ""
            Dim dayAux As String = ""
            Dim monthAux As String = ""
            Dim hourAux As String = ""
            Dim minuteAux As String = ""
            Dim secondAux As String = ""

            If DateTime.Today.Month.ToString.Length < 2 Then
                monthAux = "0" & DateTime.Today.Month
            Else
                monthAux = DateTime.Today.Month
            End If

            If DateTime.Today.Day.ToString.Length < 2 Then
                dayAux = "0" & DateTime.Today.Day
            Else
                dayAux = DateTime.Today.Day
            End If

            If Date.Now.Hour.ToString.Length < 2 Then
                hourAux = "0" & DateTime.Now.Hour
            Else
                hourAux = DateTime.Now.Hour
            End If

            If Date.Now.Minute.ToString.Length < 2 Then
                minuteAux = "0" & DateTime.Now.Minute
            Else
                minuteAux = DateTime.Now.Minute
            End If

            If Date.Now.Second.ToString.Length < 2 Then
                secondAux = "0" & DateTime.Now.Second
            Else
                secondAux = DateTime.Now.Second
            End If

            fecha = DateTime.Today.Year & monthAux & dayAux & hourAux & minuteAux & secondAux



            msSaveFileDialog.FileName = "Contrato " & txtNombreProyecto.Text & " " & fecha

            Try

                If Not My.Computer.FileSystem.DirectoryExists(txtRuta.Text) Then
                    My.Computer.FileSystem.CreateDirectory(txtRuta.Text)
                End If

                msSaveFileDialog.InitialDirectory = txtRuta.Text

            Catch ex As Exception

            End Try

            msSaveFileDialog.Filter = "Word Files (*.doc) |*.doc"
            msSaveFileDialog.DefaultExt = "*.doc"

            If msSaveFileDialog.ShowDialog() = DialogResult.OK Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor
                resultado = ExportContratoToWord(msSaveFileDialog.FileName)

                Cursor.Current = System.Windows.Forms.Cursors.Default
                'MsgBox("Contrato Exportado Correctamente!", MsgBoxStyle.OkOnly, "Exportación Completada")
                'System.Diagnostics.Process.Start(msSaveFileDialog.FileName)

                If resultado = False Then
                    MsgBox("No se ha podido exportar el contrato. Intente nuevamente.", MsgBoxStyle.OkOnly, "Error al exportar el contrato")
                End If

            End If

        Catch ex As Exception

        End Try
        

    End Sub


    Private Function ExportContratoToWord(ByVal pth As String) As Boolean

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Try

            Dim wd As Microsoft.Office.Interop.Word.ApplicationClass
            wd = New Microsoft.Office.Interop.Word.ApplicationClass

            Dim missing As Object = System.Reflection.Missing.Value
            Dim fileName As Object = "normal.dot"
            Dim newTemplate As Object = False
            Dim docType As Object = 0
            Dim isVisible As Object = True

            Dim doc As Microsoft.Office.Interop.Word.Document = wd.Documents.Add(fileName, newTemplate, docType, isVisible)
            wd.Visible = True
            doc.Activate()

            wd.Selection.Font.Size = 12
            wd.Selection.Font.Name = "Arial"
            wd.Selection.ParagraphFormat.Alignment = Microsoft.Office.Interop.Word.WdParagraphAlignment.wdAlignParagraphJustify

            If rbCasa.Checked = True Then

                wd.Selection.TypeText("CONTRATO PRIVADO DE CONSTRUCCIÓN DE UNA CASA HABITACION DE MADERA TRATADA QUE CELEBRAN POR UNA PARTE LA ")

            ElseIf rbOficina.Checked = True Then

                wd.Selection.TypeText("CONTRATO PRIVADO DE CONSTRUCCIÓN DE UNA OFICINA DE MADERA TRATADA QUE CELEBRAN POR UNA PARTE LA ")

            ElseIf rbOtro.Checked = True Then

                wd.Selection.TypeText("CONTRATO PRIVADO DE CONSTRUCCIÓN DE " & txtNombreProyecto.Text.ToUpper & " QUE CELEBRAN POR UNA PARTE LA ")

            End If

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("COMPAÑÍA MADERERIA RIO DORADO, S.A. DE C. V. / GRUPO CONSTRUCTOR RIO DORADO ")

            wd.Selection.Font.Bold = False
            wd.Selection.TypeText("REPRESENTADA EN ESTE ACTO POR EL C.P. GUILLERMO AURELIO ZEBADUA FERNANDEZ, EN SU CARÁCTER DE ADMINISTRADOR ÚNICO, A QUIEN EN LO SUCESIVO SE LE DENOMINARÁ EL CONTRATISTA Y POR LA OTRA A ")

            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineSingle
            wd.Selection.TypeText(txtNombreCliente.Text.ToUpper)

            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineNone
            wd.Selection.TypeText(", EN SU CARÁCTER DE BENEFICIARIO Y PROPIETARIO DE LA CONSTRUCCIÓN A QUIEN EN LO SUCESIVO SE LE DENOMINARÁ EL CONTRATANTE, DE ACUERDO A LAS SIGUIENTES DECLARACIONES Y CLAUSULAS:" & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("D  E  C  L  A  R  A  C  I  O  N  E  S" & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("PRIMERA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("Declara el CONTRATISTA que su Empresa MADERERIA RIO DORADO, S.A. DE C. V., se encuentra legalmente constituida conforme a la Escritura No. 9671 volumen 305, cartulada ante el Notario No. 46 LIC. JOSE EUGENIO SOLÓRZANO PANIAGUA, con fecha 1º. De Noviembre de 1989, cuyo Administrador Único es el SR. C. C.P. GUILLERMO AURELIO ZEBADUA FERNÁNDEZ, siendo su giro principal el de compraventa de productos forestales y su transformación, así como construcción de casas, cabañas, etc. de madera, teniendo sus oficinas en Libramiento Sur Poniente No. 239 en la Ciudad de Tuxtla Gutiérrez, Chiapas, teléfonos 961 6125507 y 961 6126351 y la planta de transformación se encuentra ubicado en el KM. 10.5 de la Carretera Revolución Independencia del Municipio de Villa Corzo, Chiapas." & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("SEGUNDA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("El CONTRATANTE " & txtNombreCliente.Text.ToUpper & ", declara ser propietario del terreno de " & txtAnchoTerreno.Text & " x " & txtLongitudTerreno.Text & " mts, en " & txtLugar.Text & " en donde se ubica la OBRA." & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("TERCERA: ")
            wd.Selection.Font.Bold = False

            Dim dsTelefonos As DataSet
            Dim strTelefonos As String = ""

            dsTelefonos = getSQLQueryAsDataset(0, "SELECT speoplephonenumber FROM peoplephonenumbers WHERE ipeopleid = " & iclientid)

            For i = 0 To dsTelefonos.Tables(0).Rows.Count - 1

                strTelefonos &= dsTelefonos.Tables(0).Rows(i).Item("speoplephonenumber") & ", "

            Next i

            wd.Selection.TypeText("Continúa declarando el CONTRATANTE, que tiene su domicilio personal en " & getSQLQueryAsString(0, "SELECT speopleaddress FROM people WHERE ipeopleid = " & iclientid) & " y teléfonos " & strTelefonos & "." & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("CUARTA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("Ambos contratantes se reconocen su personalidad Jurídica y se obligan al tenor de las siguientes:" & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("C  L  A  U  S  U  L  A  S" & vbNewLine & vbNewLine)

            wd.Selection.TypeText("PRIMERA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("El contratista se compromete con el contratante a ejecutar los conceptos que a continuación se describen:" & vbNewLine & vbNewLine)
            wd.Selection.TypeText("<<EDIFICACION DE VIVIENDA>>" & vbNewLine & vbNewLine)
            wd.Selection.TypeText("(SE ANEXA PLANTA ARQUITECTONICA PARA SU INTERPRETACION)" & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("SEGUNDA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("El total de trabajos a ejecutar y material que suministra el contratista para la construcción de lo que especifica la cláusula primera es el siguiente:" & vbNewLine & vbNewLine)

            Dim inicioLista As Integer = wd.Selection.Start

            For Each row As DataGridViewRow In dgvResumenDeTarjetas.Rows

                If dgvResumenDeTarjetas.AllowUserToAddRows = True And row.Index = dgvResumenDeTarjetas.Rows.Count - 1 Then
                    Exit For
                End If

                If row.Cells(2).Value.ToString <> "" Then

                    Dim pluralUnidad As String = ""

                    Try

                        If CDbl(row.Cells(4).Value) > 1 Then
                            pluralUnidad = "S"
                        End If

                    Catch ex As Exception

                    End Try

                    wd.Selection.TypeText("• " & row.Cells(4).Value.ToString.ToUpper & " " & row.Cells(3).Value.ToString.ToUpper & pluralUnidad & " DE " & row.Cells(2).Value.ToString.ToUpper & vbNewLine)
                End If

            Next row

            Dim finLista As Integer = wd.Selection.Start

            wd.Selection.TypeText(vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("TERCERA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("El precio pactado de la obra completa es de ")
            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("$")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineSingle
            wd.Selection.TypeText(txtPrecioProyectadoTotal.Text)
            wd.Selection.TypeText("(" & ConvertNumbersToWords(txtPrecioProyectadoTotal.Text, True) & ")")
            wd.Selection.Font.Bold = False
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineNone
            wd.Selection.TypeText(", y está de acuerdo el contratante en que los conceptos son los contenidos en la lista que se establece en la cláusula segunda del presente contrato." & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("CUARTA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("El contratista declara en terminar LA OBRA, en un termino de ")
            wd.Selection.Font.Bold = True
            wd.Selection.TypeText(howManyDaysBetween(convertDDdashMMdashYYYYspaceHHcolonMMcolonSStoYYYYdashMMdashDDspaceHHcolonMMcolonSS(dtFechaInicio1.Value).Substring(0, 10), convertDDdashMMdashYYYYspaceHHcolonMMcolonSStoYYYYdashMMdashDDspaceHHcolonMMcolonSS(dtFechaTerminoPrevista.Value).Substring(0, 10)) & " días hábiles")
            wd.Selection.Font.Bold = False
            wd.Selection.TypeText(" a partir de que el contratante aporte un anticipo de ")
            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("$")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineSingle

            Dim anticipo As Double = 0.0

            Try
                anticipo = CDbl(txtPrecioProyectadoTotal.Text) / 2
            Catch ex As Exception

            End Try

            wd.Selection.TypeText(FormatCurrency(anticipo, 2, TriState.True, TriState.False, TriState.True).Replace("$", ""))
            wd.Selection.TypeText("(" & ConvertNumbersToWords(FormatCurrency(anticipo, 2, TriState.True, TriState.False, TriState.True).Replace("$", ""), True) & ")")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineNone
            wd.Selection.Font.Bold = False
            wd.Selection.TypeText("; el cual debe entregarse a la fecha y firma del presente contrato, el resto del monto se distribuye en 1 pago, expidiéndose 1 pagaré con los siguientes vencimientos; último pago para el ")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineSingle
            wd.Selection.TypeText("__________________________________")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineNone
            wd.Selection.TypeText(" de ")
            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("$")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineSingle
            wd.Selection.TypeText(FormatCurrency(anticipo, 2, TriState.True, TriState.False, TriState.True).Replace("$", ""))
            wd.Selection.TypeText("(" & ConvertNumbersToWords(FormatCurrency(anticipo, 2, TriState.True, TriState.False, TriState.True).Replace("$", ""), True) & ")")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineNone
            wd.Selection.Font.Bold = False
            wd.Selection.TypeText("; en caso de demora, se acuerda cubrir un interés del 3% mensual sobre el monto pendiente." & vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("QUINTA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("El contratante se compromete a darnos todas las facilidades para que nuestro personal pueda realizar todos los trabajos correspondientes a la construcción, la cual se desarrollará en la siguiente direccion: ")
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineSingle
            wd.Selection.TypeText(txtLugar.Text)
            wd.Selection.Font.Underline = Microsoft.Office.Interop.Word.WdUnderline.wdUnderlineNone
            wd.Selection.TypeText(vbNewLine & vbNewLine)

            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("SEXTA: ")
            wd.Selection.Font.Bold = False

            wd.Selection.TypeText("El plazo de ejecución podría variar en dado caso de presentarse ")
            wd.Selection.Font.Bold = True
            wd.Selection.TypeText("situaciones extraordinarias")
            wd.Selection.Font.Bold = False
            wd.Selection.TypeText("; como lo son: temporales con lapsos de lluvia muy fuertes y constantes, interrupción del paso a la obra vía terrestre." & vbNewLine & vbNewLine)

            wd.Selection.TypeText("El presente contrato se otorga de buena fe y se reconocen ambos contratantes personalidad jurídica para contratarse y en caso de litigio ambos se someten a los tribunales de la Capital de Tuxtla Gutiérrez, Chiapas, no importando el domicilio de los contratantes." & vbNewLine & vbNewLine)

            wd.Selection.TypeText("Se emite el presente contrato al " & Now.Day & " de " & Date.Today.ToString("MMMM") & " del " & Now.Year & " en la Ciudad de Tuxtla Gutiérrez, Chiapas, firmando de conformidad al calce y rubricando todas sus hojas." & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine)

            wd.Selection.TypeText("                CONTRATANTE                                         CONTRATISTA" & vbNewLine)
            wd.Selection.TypeText(vbNewLine)
            wd.Selection.TypeText(" " & txtNombreCliente.Text.ToUpper & "           MADERERIA RIO DORADO, S.A. DE C.V." & vbNewLine)
            wd.Selection.TypeText("                                                                   C.P. GUILLERMO A. ZEBADUA FDEZ." & vbNewLine)
            wd.Selection.TypeText("                                                                             ADMINISTRADOR UNICO." & vbNewLine)
            wd.Selection.TypeText(vbNewLine & vbNewLine)
            wd.Selection.TypeText("                                                       TESTIGOS" & vbNewLine)
            wd.Selection.TypeText(vbNewLine & vbNewLine & vbNewLine)
            wd.Selection.TypeText("   _____________________________   " & getSQLQueryAsString(0, "SELECT speoplefullname FROM people WHERE ipeopleid = (SELECT ipeopleid FROM users WHERE susername = '" & susername & "')").ToUpper & " " & vbNewLine)




            Dim Range As Microsoft.Office.Interop.Word.Range

            'Dim lt As Microsoft.Office.Interop.Word.ListTemplate
            'Dim lg As Microsoft.Office.Interop.Word.ListGallery

            'lg = wd.ListGalleries.Item(Microsoft.Office.Interop.Word.WdListGalleryType.wdBulletGallery)
            'lt = lg.ListTemplates.Item(2)     ' select 2nd symbol from gallery
            'With lt
            '    .Name = "TestTemplate"
            '    .ListLevels().Item(1).Font.Size = 12
            'End With

            'Range.ListFormat.ApplyListTemplate(lt)




            With wd.Selection.Find
                .Text = "<<TIPO DE CONSTRUCCION>>"
                .Forward = False
                .Wrap = Microsoft.Office.Interop.Word.WdFindWrap.wdFindContinue
                .Format = False
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
            End With

            wd.Selection.Find.Execute()

            Range = wd.Selection.Range
            Range.HighlightColorIndex = Microsoft.Office.Interop.Word.WdColorIndex.wdYellow


            With wd.Selection.Find
                .Text = "<<EDIFICACION DE VIVIENDA>>"
                .Forward = False
                .Wrap = Microsoft.Office.Interop.Word.WdFindWrap.wdFindContinue
                .Format = False
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
            End With

            wd.Selection.Find.Execute()

            Range = wd.Selection.Range
            Range.HighlightColorIndex = Microsoft.Office.Interop.Word.WdColorIndex.wdYellow


            With wd.Selection.Find
                .Text = "<<PRECIO EN LETRAS>>"
                .Forward = False
                .Wrap = Microsoft.Office.Interop.Word.WdFindWrap.wdFindContinue
                .Format = False
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
            End With

            wd.Selection.Find.Execute()

            Range = wd.Selection.Range
            Range.HighlightColorIndex = Microsoft.Office.Interop.Word.WdColorIndex.wdYellow

            wd.Selection.Find.Execute()

            Range = wd.Selection.Range
            Range.HighlightColorIndex = Microsoft.Office.Interop.Word.WdColorIndex.wdYellow

            doc.SaveAs(pth)

            Cursor.Current = System.Windows.Forms.Cursors.Default
            Return True

        Catch ex As Exception

            Cursor.Current = System.Windows.Forms.Cursors.Default
            Return False

        End Try

    End Function


    Private Sub btnGenerarArchivoExcel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnGenerarArchivoExcel.Click

        If (txtPrecioProyectadoSubTotal.Text = "" Or txtPrecioProyectadoSubTotal.Text = "0.0") Then
            MsgBox("Aún NO has terminado de definir este proyecto. ¿Podrías completarlo?", MsgBoxStyle.OkOnly, "Proyecto incompleto")
            Exit Sub
        End If

        Try

            Dim resultado As Boolean = False

            Dim fecha As String = ""
            Dim dayAux As String = ""
            Dim monthAux As String = ""
            Dim hourAux As String = ""
            Dim minuteAux As String = ""
            Dim secondAux As String = ""

            If DateTime.Today.Month.ToString.Length < 2 Then
                monthAux = "0" & DateTime.Today.Month
            Else
                monthAux = DateTime.Today.Month
            End If

            If DateTime.Today.Day.ToString.Length < 2 Then
                dayAux = "0" & DateTime.Today.Day
            Else
                dayAux = DateTime.Today.Day
            End If

            If Date.Now.Hour.ToString.Length < 2 Then
                hourAux = "0" & DateTime.Now.Hour
            Else
                hourAux = DateTime.Now.Hour
            End If

            If Date.Now.Minute.ToString.Length < 2 Then
                minuteAux = "0" & DateTime.Now.Minute
            Else
                minuteAux = DateTime.Now.Minute
            End If

            If Date.Now.Second.ToString.Length < 2 Then
                secondAux = "0" & DateTime.Now.Second
            Else
                secondAux = DateTime.Now.Second
            End If

            fecha = DateTime.Today.Year & monthAux & dayAux & hourAux & minuteAux & secondAux



            msSaveFileDialog.FileName = "Presupuesto " & txtNombreProyecto.Text & " " & fecha

            Try

                If Not My.Computer.FileSystem.DirectoryExists(txtRuta.Text) Then
                    My.Computer.FileSystem.CreateDirectory(txtRuta.Text)
                End If

                msSaveFileDialog.InitialDirectory = txtRuta.Text

            Catch ex As Exception

            End Try

            msSaveFileDialog.Filter = "Excel Files (*.xls) |*.xls"
            msSaveFileDialog.DefaultExt = "*.xls"

            If msSaveFileDialog.ShowDialog() = DialogResult.OK Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor
                resultado = ExportPresupuestoToExcel(msSaveFileDialog.FileName)

                Cursor.Current = System.Windows.Forms.Cursors.Default

                If resultado = True Then
                    MsgBox("Presupuesto Exportado Correctamente!" & Chr(13) & "El archivo se abrirá al dar click en OK", MsgBoxStyle.OkOnly, "Exportación Completada")
                    System.Diagnostics.Process.Start(msSaveFileDialog.FileName)
                Else
                    MsgBox("No se ha podido exportar el presupuesto. Intente nuevamente.", MsgBoxStyle.OkOnly, "Error al exportar el presupuesto")
                End If

            End If

        Catch ex As Exception

        End Try

    End Sub


    Private Function ExportPresupuestoToExcel(ByVal pth As String) As Boolean

        Try

            Dim fs As New IO.StreamWriter(pth, False)
            fs.WriteLine("<?xml version=""1.0""?>")
            fs.WriteLine("<?mso-application progid=""Excel.Sheet""?>")
            fs.WriteLine("<Workbook xmlns=""urn:schemas-microsoft-com:office:spreadsheet"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns:ss=""urn:schemas-microsoft-com:office:spreadsheet"" xmlns:html=""http://www.w3.org/TR/REC-html40"">")

            ' Create the styles for the worksheet
            fs.WriteLine("  <Styles>")

            ' Style for the document name
            fs.WriteLine("  <Style ss:ID=""1"">")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Borders>")
            fs.WriteLine("  <Border ss:Position=""Bottom"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Left"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Right"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Top"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("   </Borders>")
            fs.WriteLine("   <Font ss:FontName=""Arial"" ss:Size=""12"" ss:Bold=""1""></Font>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("   <Protection></Protection>")
            fs.WriteLine("  </Style>")

            ' Style for the column headers
            fs.WriteLine("   <Style ss:ID=""2"">")
            fs.WriteLine("   <Alignment ss:Horizontal=""Center"" ss:Vertical=""Center"" ss:WrapText=""1""></Alignment>")
            fs.WriteLine("   <Borders>")
            fs.WriteLine("  <Border ss:Position=""Bottom"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Left"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Right"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Top"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("   </Borders>")
            fs.WriteLine("   <Font ss:FontName=""Arial"" ss:Size=""9"" ss:Bold=""1""></Font>")
            fs.WriteLine("  </Style>")


            ' Style for the left sided info
            fs.WriteLine("    <Style ss:ID=""9"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the right sided info
            fs.WriteLine("    <Style ss:ID=""10"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Right"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the middle sided info
            fs.WriteLine("    <Style ss:ID=""11"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Center"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the SUBtotals labels
            fs.WriteLine("    <Style ss:ID=""12"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FFCC00"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("    </Style>")

            ' Style for the totals labels
            fs.WriteLine("    <Style ss:ID=""13"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Right"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("    </Style>")

            ' Style for the totals
            fs.WriteLine("    <Style ss:ID=""14"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat ss:Format=""Standard""></NumberFormat>")
            fs.WriteLine("    </Style>")

            fs.WriteLine("  </Styles>")

            ' Write the worksheet contents
            fs.WriteLine("<Worksheet ss:Name=""Hoja1"">")
            fs.WriteLine("  <Table ss:DefaultColumnWidth=""60"" ss:DefaultRowHeight=""15"">")

            'Write the project header info
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""63""/>")
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""494.25""/>")
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""65.25"" ss:Span=""5""/>")

            fs.WriteLine("   <Row ss:AutoFitHeight=""0"">")
            fs.WriteLine("  <Cell></Cell>")
            fs.WriteLine("  <Cell ss:MergeAcross=""6"" ss:StyleID=""1""><Data ss:Type=""String"">PRESUPUESTO DE CONSTRUCCION</Data></Cell>")
            fs.WriteLine("   </Row>")

            fs.WriteLine("   <Row ss:AutoFitHeight=""0"">")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", lblNombreDelProyecto.Text.Trim))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", txtNombreProyecto.Text.Trim))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", lblNombreCliente.Text.Trim))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", txtNombreCliente.Text.Trim))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", "Fecha:"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", convertYYYYMMDDtoDDhyphenMMhyphenYYYY(getMySQLDate()) & " " & getAppTime()))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")


            'Write the grid headers columns (taken out since columns are already defined)
            'For Each col As DataGridViewColumn In dgv.Columns
            '    If col.Visible Then
            '        fs.WriteLine(String.Format("    <Column ss:Width=""{0}""></Column>", col.Width))
            '    End If
            'Next

            'Write the grid headers
            fs.WriteLine("    <Row ss:AutoFitHeight=""0"" ss:Height=""22.5"">")

            For Each col As DataGridViewColumn In dgvResumenDeTarjetas.Columns
                If col.Visible Then
                    fs.WriteLine(String.Format("      <Cell ss:StyleID=""2""><Data ss:Type=""String"">{0}</Data></Cell>", col.HeaderText))
                End If
            Next

            fs.WriteLine("    </Row>")

            ' Write contents for each cell
            For Each row As DataGridViewRow In dgvResumenDeTarjetas.Rows

                If dgvResumenDeTarjetas.AllowUserToAddRows = True And row.Index = dgvResumenDeTarjetas.Rows.Count - 1 Then
                    Exit For
                End If

                fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))

                For Each col As DataGridViewColumn In dgvResumenDeTarjetas.Columns

                    If col.Visible Then

                        If row.Cells(col.Name).Value.ToString = "" Then

                            If row.Cells(0).Value.ToString.StartsWith("SUBTOTAL") = True Then
                                fs.WriteLine(String.Format("      <Cell ss:StyleID=""12""></Cell>"))
                            Else
                                fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""></Cell>"))
                            End If

                        Else

                            If row.Cells(0).Value.ToString.StartsWith("SUBTOTAL") = True Then
                                fs.WriteLine(String.Format("      <Cell ss:StyleID=""12""><Data ss:Type=""String"">{0}</Data></Cell>", row.Cells(col.Name).Value.ToString))
                            Else
                                fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", row.Cells(col.Name).Value.ToString))
                            End If

                        End If

                    End If

                Next col

                fs.WriteLine("    </Row>")

            Next row

            'Write the separation between results and totals
            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")

            'Write the totals 
            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""13""><Data ss:Type=""String"">{0}</Data></Cell>", lblCostoProyectadoTotal.Text))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""14""><Data ss:Type=""String"">{0}</Data></Cell>", txtPrecioProyectadoSubTotal.Text))
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""13""><Data ss:Type=""String"">{0}</Data></Cell>", "IVA"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""14""><Data ss:Type=""String"">{0}</Data></Cell>", txtIVA.Text))
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("      <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""13""><Data ss:Type=""String"">{0}</Data></Cell>", lblPrecioProyectadoTotal.Text))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""14""><Data ss:Type=""String"">{0}</Data></Cell>", txtPrecioProyectadoTotal.Text))
            fs.WriteLine("    </Row>")


            ' Close up the document
            fs.WriteLine("  </Table>")

            fs.WriteLine("  <WorksheetOptions xmlns=""urn:schemas-microsoft-com:office:excel"">")
            fs.WriteLine("   <PageSetup>")
            fs.WriteLine("  <Layout x:Orientation=""Landscape""/>")
            fs.WriteLine("  <Header x:Margin=""0.51181102362204722""/>")
            fs.WriteLine("  <Footer x:Margin=""0.51181102362204722""/>")
            fs.WriteLine("  <PageMargins x:Bottom=""0.98425196850393704"" x:Left=""0.74803149606299213"" x:Right=""0.74803149606299213"" x:Top=""0.98425196850393704""/>")
            fs.WriteLine("   </PageSetup>")
            fs.WriteLine("   <Unsynced/>")
            fs.WriteLine("   <Print>")
            fs.WriteLine("  <ValidPrinterInfo/>")
            fs.WriteLine("  <PaperSizeIndex>9</PaperSizeIndex>")
            fs.WriteLine("  <Scale>65</Scale>")
            fs.WriteLine("  <HorizontalResolution>200</HorizontalResolution>")
            fs.WriteLine("  <VerticalResolution>200</VerticalResolution>")
            fs.WriteLine("   </Print>")
            fs.WriteLine("   <Zoom>75</Zoom>")
            fs.WriteLine("   <Selected/>")
            fs.WriteLine("   <Panes>")
            fs.WriteLine("  <Pane>")
            fs.WriteLine("   <Number>3</Number>")
            fs.WriteLine("   <ActiveRow>16</ActiveRow>")
            fs.WriteLine("   <ActiveCol>7</ActiveCol>")
            fs.WriteLine("  </Pane>")
            fs.WriteLine("   </Panes>")
            fs.WriteLine("   <ProtectObjects>False</ProtectObjects>")
            fs.WriteLine("   <ProtectScenarios>False</ProtectScenarios>")
            fs.WriteLine("  </WorksheetOptions>")


            fs.WriteLine("</Worksheet>")
            fs.WriteLine("</Workbook>")
            fs.Close()

            Return True

        Catch ex As Exception
            Return False
        End Try

    End Function


    Private Sub chkDoNOTApplyTax_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkDoNOTApplyTax.CheckedChanged

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        If chkDoNOTApplyTax.Checked = False Then
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET sprojectTaxApplicable = 1 WHERE iprojectid = " & iprojectid)
        Else
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET sprojectTaxApplicable = 0 WHERE iprojectid = " & iprojectid)
        End If


        Dim dsProyecto As DataSet
        dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
        "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
        "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
        "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, " & _
        "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
        "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)

        Dim porcentajeIVA As Double
        Try
            porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
        Catch ex As Exception
            porcentajeIVA = 0.0
        End Try

        txtPorcentajeIVA.Text = porcentajeIVA * 100

        Dim queryIndirectosSubTotal As String
        Dim indirectosSubTotal As Double = 0.0
        queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

        txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim queryPrecioSubTotal As String
        Dim precioSubTotal As Double = 0.0
        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim precioTotal As Double = 0.0

        If chkDoNOTApplyTax.Checked = True Then
            txtIVA.Text = FormatCurrency(0.0, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            precioTotal = precioSubTotal
        Else
            txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)
        End If

        txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

    End Sub


    Private Sub btnRealizarObra_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRealizarObra.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        paso4 = True

        If validaResumenDeTarjetas(False) = False Then

            paso4 = False

            If getSQLQueryAsInteger(0, "SELECT iprojectforecastedclosingdate FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid) = 0 Then
                'Continue
            Else
                Exit Sub
            End If

        End If

        If MsgBox("¿Está seguro que desea marcar esta obra como Iniciada? Este paso no se puede revertir!", MsgBoxStyle.YesNo, "Realizar Obra") = MsgBoxResult.Yes Then

            Dim queryPreciosYaCambiaron As String
            Dim preciosCambiados As Double = 0.0
            Dim baseid As Integer = 0

            baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

            If baseid = 0 Then
                baseid = 99999
            End If

            queryPreciosYaCambiaron = "SELECT SUM(bp.dinputfinalprice <> pp.dinputfinalprice) AS diferente FROM inputs i JOIN (SELECT * FROM (SELECT * FROM baseprices bp WHERE ibaseid = " & baseid & " ORDER BY iupdatedate DESC, supdatetime DESC) bp GROUP BY iinputid) bp ON bp.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices pp WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid) pp ON pp.iinputid = i.iinputid"
            preciosCambiados = getSQLQueryAsDouble(0, queryPreciosYaCambiaron)

            If preciosCambiados > 0 Then

                MsgBox("Algunos Precios Base de Materiales usados en el Proyecto han cambiado desde la última revisión. Se abrirá una ventana de revisión", MsgBoxStyle.OkOnly, "Precios Desactualizados")

                Dim micpd As New BuscaInsumosConPrecioDiferente

                micpd.susername = susername
                micpd.bactive = bactive
                micpd.bonline = bonline
                micpd.suserfullname = suserfullname
                micpd.suseremail = suseremail
                micpd.susersession = susersession
                micpd.susermachinename = susermachinename
                micpd.suserip = suserip

                micpd.IsEdit = isEdit

                micpd.IsBase = False
                micpd.IsModel = False
                micpd.IsHistoric = isHistoric

                micpd.iprojectid = iprojectid

                If Me.WindowState = FormWindowState.Maximized Then
                    micpd.WindowState = FormWindowState.Maximized
                End If

                Me.Visible = False
                micpd.ShowDialog(Me)
                Me.Visible = True


                'Acá van los querys del tab de Resumen de Tarjetas (del Load)
                Dim dsCategorias As DataSet
                Dim contadorCategorias As Integer = 0
                Dim resumenDeTarjetas As String = ""
                dsCategorias = getSQLQueryAsDataset(0, "SELECT scardlegacycategoryid, scardlegacycategorydescription FROM cardlegacycategories")
                contadorCategorias = dsCategorias.Tables(0).Rows.Count

                Dim queriesFill(contadorCategorias) As String

                Dim queriesCreation(2) As String

                queriesCreation(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux"
                queriesCreation(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " (   scardid varchar(11) COLLATE latin1_spanish_ci NOT NULL,   scardlegacyid varchar(510) CHARACTER SET latin1 NOT NULL,   scarddescription VARCHAR(1000) CHARACTER SET latin1 NOT NULL,   scardunit varchar(49) CHARACTER SET latin1 NOT NULL,   sprojectcardqty varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardindirectcosts varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardgain varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardunitaryprice varchar(20) COLLATE latin1_spanish_ci NOT NULL,   scardamount varchar(20) COLLATE latin1_spanish_ci NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

                executeTransactedSQLCommand(0, queriesCreation)

                Try

                    For i As Integer = 0 To contadorCategorias - 1

                        Dim queryContadorDeTarjetas As String = "" & _
                        "SELECT COUNT(*) " & _
                        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                        "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' "

                        Dim contadorDeTarjetas As Integer = 0

                        contadorDeTarjetas = getSQLQueryAsInteger(0, queryContadorDeTarjetas)

                        If contadorDeTarjetas > 0 Then

                            queriesFill(i) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux" & " " & _
                            "SELECT '' AS 'icardid', CONCAT(ptflc.scardlegacycategoryid, ' ', ptflc.scardlegacycategorydescription) AS 'scardlegacyid', " & _
                            "'' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' FROM cardlegacycategories ptflc WHERE ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT ptf.icardid, ptf.scardlegacyid, ptf.scarddescription, ptf.scardunit, FORMAT(ptf.dcardqty, 3) AS dcardqty, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty)), 2) AS dcardindirectcosts, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardgain, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)), 2) AS dcardunitaryprice, " & _
                            "FORMAT(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty)), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS icardid, CONCAT('SUBTOTAL CATEGORIA ', ptf.scardlegacycategoryid) AS scardlegacyid, '' AS scarddescription, '' AS scardunit, '' AS dcardqty, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage)*(ptf.dcardqty))), 2) AS dcardindirectcosts, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardgain, " & _
                            "'' AS dcardunitaryprice, " & _
                            "FORMAT(SUM(((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage)*(ptf.dcardqty))), 2) AS dcardsprice " & _
                            "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                            "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                            "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                            "WHERE ptf.iprojectid = " & iprojectid & " AND ptflc.scardlegacycategoryid = '" & dsCategorias.Tables(0).Rows(i).Item("scardlegacycategoryid") & "' " & _
                            "UNION " & _
                            "SELECT '' AS 'icardid', '' AS 'scardlegacyid', '' AS 'scarddescription', '' AS 'scardunit', '' AS 'dcardqty', '' AS 'dcardindirectcosts', '' AS 'dcardgain', '' AS 'dcardunitaryprice', '' AS 'dcardsprice' " & _
                            "ORDER BY scardlegacyid "

                        End If

                    Next i

                    executeTransactedSQLCommand(0, queriesFill)

                Catch ex As Exception

                End Try


                setDataGridView(dgvResumenDeTarjetas, "SELECT scardid, scardlegacyid AS 'ID', scarddescription AS 'Descripcion Tarjeta', scardunit AS 'Unidad de Medida', sprojectcardqty AS 'Cantidad', scardindirectcosts AS 'Indirectos', scardgain AS 'Utilidad', scardunitaryprice AS 'P.U.', scardamount AS 'Importe' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux", False)

                dgvResumenDeTarjetas.Columns(0).Visible = False

                dgvResumenDeTarjetas.Columns(0).ReadOnly = True
                dgvResumenDeTarjetas.Columns(2).ReadOnly = True
                dgvResumenDeTarjetas.Columns(3).ReadOnly = True
                dgvResumenDeTarjetas.Columns(5).ReadOnly = True
                dgvResumenDeTarjetas.Columns(6).ReadOnly = True
                dgvResumenDeTarjetas.Columns(7).ReadOnly = True
                dgvResumenDeTarjetas.Columns(8).ReadOnly = True

                dgvResumenDeTarjetas.Columns(0).Width = 30
                dgvResumenDeTarjetas.Columns(1).Width = 60
                dgvResumenDeTarjetas.Columns(2).Width = 200
                dgvResumenDeTarjetas.Columns(3).Width = 60
                dgvResumenDeTarjetas.Columns(4).Width = 70
                dgvResumenDeTarjetas.Columns(5).Width = 70
                dgvResumenDeTarjetas.Columns(6).Width = 70
                dgvResumenDeTarjetas.Columns(7).Width = 70
                dgvResumenDeTarjetas.Columns(8).Width = 70


                Dim porcentajeIVA As Double = 0.0
                porcentajeIVA = getSQLQueryAsDouble(0, "SELECT dprojectIVApercentage FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " WHERE iprojectid = " & iprojectid)
                txtPorcentajeIVA.Text = porcentajeIVA * 100

                Dim queryIndirectosSubTotal As String
                Dim indirectosSubTotal As Double = 0.0
                queryIndirectosSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(ptf.dcardindirectcostspercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                indirectosSubTotal = getSQLQueryAsDouble(0, queryIndirectosSubTotal)

                txtIndirectosSubtotal.Text = FormatCurrency(indirectosSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                txtIndirectosTotal.Text = FormatCurrency(indirectosSubTotal + (indirectosSubTotal * porcentajeIVA), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim queryPrecioSubTotal As String
                Dim precioSubTotal As Double = 0.0
                queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
                "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
                "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
                "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
                "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
                "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
                "WHERE p.iprojectid = " & iprojectid

                precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

                txtPrecioProyectadoSubTotal.Text = FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
                txtIVA.Text = FormatCurrency(precioSubTotal * porcentajeIVA, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

                Dim precioTotal As Double = 0.0
                precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

                txtPrecioProyectadoTotal.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


            End If

            Dim ptfp As New AgregarProyectoPreguntaFechaTerminoPrevista

            ptfp.iprojectid = iprojectid

            Me.Visible = False
            ptfp.ShowDialog(Me)
            Me.Visible = True

            If ptfp.DialogResult = Windows.Forms.DialogResult.OK Then
                dtFechaTerminoPrevista.Value = ptfp.fechaprevista
            Else
                Exit Sub
            End If

            Dim selecteddate As String = ""
            selecteddate = convertDDdashMMdashYYYYspaceHHcolonMMcolonSStoYYYYdashMMdashDDspaceHHcolonMMcolonSS(dtFechaTerminoPrevista.Value)
            selecteddate = selecteddate.Substring(0, selecteddate.Length - 9).Replace("/", "").Replace("-", "")

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET iprojectforecastedclosingdate = " & selecteddate & ", sprojectforecastedclosingtime = '00:00:00', iprojectstarteddate = " & fecha & ", sprojectstartedtime = '" & hora & "', iupdatedate = " & fecha & ", supdatetime = '" & hora & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)

            btnTerminarObra.Visible = True
            btnRealizarObra.Visible = False

        Else

            Exit Sub

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnCostoHoy_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCostoHoy.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim precioSubTotal As Double = 0.0
        Dim porcentajeIVA As Double = 0.0
        Dim iva As Double = 0.0
        Dim precioTotal As Double = 0.0

        Try
            porcentajeIVA = CDbl(txtPorcentajeIVA.Text) / 100
        Catch ex As Exception

        End Try

        Dim queryPrecioSubTotal As String

        'AAAGGGUUAAAAS!! ESTE QUERY PARECE EL MISMO QUE EL DE TODO ESTE "FORM" PERO LA FORMA DE CALCULAR LOS PRECIOS ES DISTINTA...

        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*bp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT " & iprojectid & " AS iprojectid, iinputid, iupdatedate, supdatetime, dinputpricewithoutIVA, dinputprotectionpercentage, dinputfinalprice FROM baseprices ORDER BY iupdatedate DESC, supdatetime DESC) bp GROUP BY iinputid, iprojectid) bp ON ptfi.iprojectid = bp.iprojectid AND i.iinputid = bp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*bp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT " & iprojectid & " AS iprojectid, iinputid, iupdatedate, supdatetime, dinputpricewithoutIVA, dinputprotectionpercentage, dinputfinalprice FROM baseprices ORDER BY iupdatedate DESC, supdatetime DESC) bp GROUP BY iinputid, iprojectid) bp ON ptfi.iprojectid = bp.iprojectid AND i.iinputid = bp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*bp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT " & iprojectid & " AS iprojectid, iinputid, iupdatedate, supdatetime, dinputpricewithoutIVA, dinputprotectionpercentage, dinputfinalprice FROM baseprices ORDER BY iupdatedate DESC, supdatetime DESC) bp GROUP BY iinputid, iprojectid) bp ON ptfi.iprojectid = bp.iprojectid AND i.iinputid = bp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        iva = precioSubTotal * porcentajeIVA

        precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)

        Cursor.Current = System.Windows.Forms.Cursors.Default

        MsgBox("Si este proyecto se realizara con los precios de hoy:" & Chr(13) & "Su Costo Total Previsto sería: " & FormatCurrency(precioSubTotal, 2, TriState.True, TriState.False, TriState.True) & Chr(13) & "Su IVA (" & porcentajeIVA * 100 & " %) sería: " & FormatCurrency(iva, 2, TriState.True, TriState.False, TriState.True) & Chr(13) & "Su Precio Total Previsto sería: " & FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True), MsgBoxStyle.OkOnly, "Si se hiciera hoy... ")

    End Sub


    Private Sub dgvExplosionDeInsumos_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvExplosionDeInsumos.CellClick

        Try

            If dgvExplosionDeInsumos.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedinputid = CInt(dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(1).Value())
            sselectedinputdescription = dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(2).Value()
            dselectedinputqty = CDbl(dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(10).Value())

        Catch ex As Exception

            iselectedinputid = 0
            sselectedinputdescription = ""
            dselectedinputqty = 0.0

        End Try

    End Sub


    Private Sub dgvExplosionDeInsumos_CellContentClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvExplosionDeInsumos.CellContentClick

        Try

            If dgvExplosionDeInsumos.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedinputid = CInt(dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(1).Value())
            sselectedinputdescription = dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(2).Value()
            dselectedinputqty = CDbl(dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(10).Value())

        Catch ex As Exception

            iselectedinputid = 0
            sselectedinputdescription = ""
            dselectedinputqty = 0.0

        End Try

    End Sub


    Private Sub dgvExplosionDeInsumos_SelectionChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgvExplosionDeInsumos.SelectionChanged

        txtCantidadDgvExplosionDeInsumos = Nothing
        txtCantidadDgvExplosionDeInsumos_OldText = Nothing

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Try

            If dgvExplosionDeInsumos.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedinputid = CInt(dgvExplosionDeInsumos.CurrentRow.Cells(1).Value)
            sselectedinputdescription = dgvExplosionDeInsumos.CurrentRow.Cells(2).Value()
            dselectedinputqty = CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(10).Value)

        Catch ex As Exception

            iselectedinputid = 0
            sselectedinputdescription = ""
            dselectedinputqty = 0.0

        End Try

    End Sub


    Private Sub dgvExplosionDeInsumos_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvExplosionDeInsumos.CellEndEdit

        Dim queryExplosionInsumos As String = ""

        queryExplosionInsumos = "" & _
        "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', t2.sinputunit AS 'Unidad de Medida', " & _
        "FORMAT(SUM(t2.dcardinputqty), 3) AS 'Cantidad Requerida', " & _
        "FORMAT(SUM(t2.ipidinputqty), 3) AS 'Cantidad En Inventario', " & _
        "t2.ipisinputlocation AS 'Guardado en', " & _
        "t2.ipifecharecibido AS 'Fecha Ultimo Mov', " & _
        "t2.ipistatus AS 'Status', " & _
        "FORMAT(SUM(t2.cantidadapedir), 3) AS 'Cantidad Sugerida a Pedir', " & _
        "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir' " & _
        "FROM ( " & _
        "SELECT " & _
        "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
        "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
        "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
        "t1.pexdinputrealqty AS cantidadajustada " & _
        "FROM ( " & _
        "SELECT " & _
        "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
        "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
        "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
        "UNION " & _
        "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
        "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
        "UNION " & _
        "SELECT " & _
        "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
        "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
        "JOIN inputs i ON pex.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
        "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
        "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
        "GROUP BY pex.iprojectid, i.iinputid " & _
        ") t1 " & _
        ")t2 " & _
        "GROUP BY t2.iinputid " & _
        "ORDER BY 3 "


        executeSQLCommand(0, queryExplosionInsumos)

        setDataGridView(dgvExplosionDeInsumos, queryExplosionInsumos, False)

        dgvExplosionDeInsumos.Columns(0).Visible = False
        dgvExplosionDeInsumos.Columns(1).Visible = False

        dgvExplosionDeInsumos.Columns(1).ReadOnly = True
        dgvExplosionDeInsumos.Columns(2).ReadOnly = True
        dgvExplosionDeInsumos.Columns(3).ReadOnly = True
        dgvExplosionDeInsumos.Columns(4).ReadOnly = True
        dgvExplosionDeInsumos.Columns(5).ReadOnly = True
        dgvExplosionDeInsumos.Columns(6).ReadOnly = True
        dgvExplosionDeInsumos.Columns(7).ReadOnly = True
        dgvExplosionDeInsumos.Columns(8).ReadOnly = True
        dgvExplosionDeInsumos.Columns(9).ReadOnly = True
        dgvExplosionDeInsumos.Columns(10).ReadOnly = False

        dgvExplosionDeInsumos.Columns(1).Width = 30
        dgvExplosionDeInsumos.Columns(2).Width = 300
        dgvExplosionDeInsumos.Columns(3).Width = 70
        dgvExplosionDeInsumos.Columns(4).Width = 70
        dgvExplosionDeInsumos.Columns(5).Width = 70
        dgvExplosionDeInsumos.Columns(6).Width = 150
        dgvExplosionDeInsumos.Columns(7).Width = 130
        dgvExplosionDeInsumos.Columns(8).Width = 100
        dgvExplosionDeInsumos.Columns(9).Width = 70
        dgvExplosionDeInsumos.Columns(10).Width = 70

    End Sub


    Private Sub dgvExplosionDeInsumos_CellValueChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvExplosionDeInsumos.CellValueChanged

        If modifyExplosion = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        'LA UNICA COLUMNA EDITABLE ES LA COLUMNA 10: dinputrealqty

        If e.ColumnIndex = 10 Then

            Dim checkIfItsOnlyTextUpdate As Boolean = False

            checkIfItsOnlyTextUpdate = getSQLQueryAsBoolean(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion WHERE iinputid = " & iselectedinputid)

            If checkIfItsOnlyTextUpdate = True Then

                executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SET dinputrealqty = " & dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid & " AND iinputid = " & iselectedinputid)

            Else

                executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion VALUES(" & iprojectid & ", " & iselectedinputid & ", " & dgvExplosionDeInsumos.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & ", " & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "')")

            End If

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvExplosionDeInsumos_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgvExplosionDeInsumos.EditingControlShowing

        If dgvExplosionDeInsumos.CurrentCell.ColumnIndex = 10 Then

            txtCantidadDgvExplosionDeInsumos = CType(e.Control, TextBox)
            txtCantidadDgvExplosionDeInsumos_OldText = txtCantidadDgvExplosionDeInsumos.Text

        Else

            txtCantidadDgvExplosionDeInsumos = Nothing
            txtCantidadDgvExplosionDeInsumos_OldText = Nothing

        End If

    End Sub


    Private Sub txtCantidadDgvExplosionDeInsumos_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCantidadDgvExplosionDeInsumos.KeyUp

        If Not IsNumeric(txtCantidadDgvExplosionDeInsumos.Text) Then

            Dim strForbidden2 As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
            Dim arrayForbidden2 As Char() = strForbidden2.ToCharArray

            For cp = 0 To arrayForbidden2.Length - 1

                If txtCantidadDgvExplosionDeInsumos.Text.Contains(arrayForbidden2(cp)) Then
                    txtCantidadDgvExplosionDeInsumos.Text = txtCantidadDgvExplosionDeInsumos.Text.Replace(arrayForbidden2(cp), "")
                End If

            Next cp

            If txtCantidadDgvExplosionDeInsumos.Text.Contains(".") Then

                Dim comparaPuntos As Char() = txtCantidadDgvExplosionDeInsumos.Text.ToCharArray
                Dim cuantosPuntos As Integer = 0


                For letra = 0 To comparaPuntos.Length - 1

                    If comparaPuntos(letra) = "." Then
                        cuantosPuntos = cuantosPuntos + 1
                    End If

                Next

                If cuantosPuntos > 1 Then

                    For cantidad = 1 To cuantosPuntos
                        Dim lugar As Integer = txtCantidadDgvExplosionDeInsumos.Text.LastIndexOf(".")
                        Dim longitud As Integer = txtCantidadDgvExplosionDeInsumos.Text.Length

                        If longitud > (lugar + 1) Then
                            txtCantidadDgvExplosionDeInsumos.Text = txtCantidadDgvExplosionDeInsumos.Text.Substring(0, lugar) & txtCantidadDgvExplosionDeInsumos.Text.Substring(lugar + 1)
                            Exit For
                        Else
                            txtCantidadDgvExplosionDeInsumos.Text = txtCantidadDgvExplosionDeInsumos.Text.Substring(0, lugar)
                            Exit For
                        End If
                    Next

                End If

            End If

            txtCantidadDgvExplosionDeInsumos.Text = txtCantidadDgvExplosionDeInsumos.Text.Replace("--", "").Replace("'", "")
            txtCantidadDgvExplosionDeInsumos.Text = txtCantidadDgvExplosionDeInsumos.Text.Trim

        Else
            txtCantidadDgvExplosionDeInsumos_OldText = txtCantidadDgvExplosionDeInsumos.Text
        End If

    End Sub


    Private Sub dgvExplosionDeInsumos_UserAddedRow(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewRowEventArgs) Handles dgvExplosionDeInsumos.UserAddedRow

        If addExplosion = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim bi As New BuscaInsumos

        bi.susername = susername
        bi.bactive = bactive
        bi.bonline = bonline
        bi.suserfullname = suserfullname
        bi.suseremail = suseremail
        bi.susersession = susersession
        bi.susermachinename = susermachinename
        bi.suserip = suserip

        bi.iprojectid = iprojectid

        bi.querystring = dgvExplosionDeInsumos.CurrentCell.EditedFormattedValue

        bi.IsEdit = False

        bi.IsBase = False
        bi.IsModel = False

        bi.IsHistoric = isHistoric

        If Me.WindowState = FormWindowState.Maximized Then
            bi.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        bi.ShowDialog(Me)
        Me.Visible = True

        If bi.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            If bi.wasCreated = False Then


                Dim dsBusquedaInsumosRepetidos As DataSet

                dsBusquedaInsumosRepetidos = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion WHERE iprojectid = " & iprojectid & " AND iinputid = '" & bi.iinputid & "'")

                If dsBusquedaInsumosRepetidos.Tables(0).Rows.Count > 0 Then

                    MsgBox("Ya tienes ese Insumo en esta Explosion de Insumos. ¿Podrías buscarla en la lista y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Insumo Repetido")
                    dgvExplosionDeInsumos.EndEdit()
                    Exit Sub

                End If

                Dim conteoCompound As Integer = 0
                conteoCompound = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM basecardcompoundinputs WHERE iinputid = " & bi.iinputid)

                If conteoCompound > 0 Then

                    executeSQLCommand(0, "INSERT IGNORE INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SELECT " & iprojectid & ", icompoundinputid, 1, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE iinputid = " & bi.iinputid & " GROUP BY 2")

                Else

                    executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SELECT " & iprojectid & ", " & bi.iinputid & ", 1, " & fecha & ", '" & hora & "', '" & susername & "'")

                End If


            End If

            dgvExplosionDeInsumos.EndEdit()

        Else

            dgvExplosionDeInsumos.EndEdit()

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvExplosionDeInsumos_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgvExplosionDeInsumos.KeyUp

        If e.KeyCode = Keys.Delete Then

            If deleteExplosion = False Then
                Exit Sub
            End If

            If MsgBox("¿Está seguro que deseas eliminar el Insumo " & sselectedinputdescription & " de la Explosión de Insumos del Proyecto?", MsgBoxStyle.YesNo, "Confirmar Eliminación de Insumo") = MsgBoxResult.Yes Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                Dim tmpselectedinputid As Integer = 0
                Try
                    tmpselectedinputid = CInt(dgvExplosionDeInsumos.CurrentRow.Cells(1).Value)
                Catch ex As Exception

                End Try

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion WHERE iprojectid = " & iprojectid & " AND iinputid = " & tmpselectedinputid)

            End If

            Dim queryExplosionInsumos As String = ""

            queryExplosionInsumos = "" & _
            "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', t2.sinputunit AS 'Unidad de Medida', " & _
            "FORMAT(SUM(t2.dcardinputqty), 3) AS 'Cantidad Requerida', " & _
            "FORMAT(SUM(t2.ipidinputqty), 3) AS 'Cantidad En Inventario', " & _
            "t2.ipisinputlocation AS 'Guardado en', " & _
            "t2.ipifecharecibido AS 'Fecha Ultimo Mov', " & _
            "t2.ipistatus AS 'Status', " & _
            "FORMAT(SUM(t2.cantidadapedir), 3) AS 'Cantidad Sugerida a Pedir', " & _
            "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir' " & _
            "FROM ( " & _
            "SELECT " & _
            "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
            "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
            "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
            "t1.pexdinputrealqty AS cantidadajustada " & _
            "FROM ( " & _
            "SELECT " & _
            "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
            "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
            "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
            "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
            "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
            "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
            "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
            "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
            "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
            "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
            "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
            "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
            "UNION " & _
            "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
            "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
            "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
            "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
            "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
            "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
            "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
            "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
            "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
            "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
            "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
            "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
            "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
            "UNION " & _
            "SELECT " & _
            "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
            "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty " & _
            "FROM " & _
            "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
            "JOIN inputs i ON pex.iinputid = i.iinputid " & _
            "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
            "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
            "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
            "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
            "GROUP BY pex.iprojectid, i.iinputid " & _
            ") t1 " & _
            ")t2 " & _
            "GROUP BY t2.iinputid " & _
            "ORDER BY 3 "


            executeSQLCommand(0, queryExplosionInsumos)

            setDataGridView(dgvExplosionDeInsumos, queryExplosionInsumos, False)

            dgvExplosionDeInsumos.Columns(0).Visible = False
            dgvExplosionDeInsumos.Columns(1).Visible = False

            dgvExplosionDeInsumos.Columns(1).ReadOnly = True
            dgvExplosionDeInsumos.Columns(2).ReadOnly = True
            dgvExplosionDeInsumos.Columns(3).ReadOnly = True
            dgvExplosionDeInsumos.Columns(4).ReadOnly = True
            dgvExplosionDeInsumos.Columns(5).ReadOnly = True
            dgvExplosionDeInsumos.Columns(6).ReadOnly = True
            dgvExplosionDeInsumos.Columns(7).ReadOnly = True
            dgvExplosionDeInsumos.Columns(8).ReadOnly = True
            dgvExplosionDeInsumos.Columns(9).ReadOnly = True
            dgvExplosionDeInsumos.Columns(10).ReadOnly = False

            dgvExplosionDeInsumos.Columns(1).Width = 30
            dgvExplosionDeInsumos.Columns(2).Width = 300
            dgvExplosionDeInsumos.Columns(3).Width = 70
            dgvExplosionDeInsumos.Columns(4).Width = 70
            dgvExplosionDeInsumos.Columns(5).Width = 70
            dgvExplosionDeInsumos.Columns(6).Width = 150
            dgvExplosionDeInsumos.Columns(7).Width = 130
            dgvExplosionDeInsumos.Columns(8).Width = 100
            dgvExplosionDeInsumos.Columns(9).Width = 70
            dgvExplosionDeInsumos.Columns(10).Width = 70

            Cursor.Current = System.Windows.Forms.Cursors.Default

        End If

    End Sub


    Private Sub btnNuevoInsumo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNuevoInsumo.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim bi As New BuscaInsumos

        bi.susername = susername
        bi.bactive = bactive
        bi.bonline = bonline
        bi.suserfullname = suserfullname
        bi.suseremail = suseremail
        bi.susersession = susersession
        bi.susermachinename = susermachinename
        bi.suserip = suserip

        bi.iprojectid = iprojectid

        bi.IsEdit = False

        bi.IsBase = False
        bi.IsModel = False

        bi.IsHistoric = isHistoric

        If Me.WindowState = FormWindowState.Maximized Then
            bi.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        bi.ShowDialog(Me)
        Me.Visible = True

        If bi.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            Dim dsBusquedaInsumosRepetidos As DataSet

            dsBusquedaInsumosRepetidos = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion WHERE iprojectid = " & iprojectid & " AND iinputid = '" & bi.iinputid & "'")

            If dsBusquedaInsumosRepetidos.Tables(0).Rows.Count > 0 Then

                MsgBox("Ya tienes ese Insumo en esta Explosion de Insumos. ¿Podrías buscarla en la lista y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Insumo Repetido")
                dgvExplosionDeInsumos.EndEdit()
                Exit Sub

            End If

            Dim conteoCompound As Integer = 0
            conteoCompound = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM basecardcompoundinputs WHERE iinputid = " & bi.iinputid)

            If conteoCompound > 0 Then

                executeSQLCommand(0, "INSERT IGNORE INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SELECT " & iprojectid & ", icompoundinputid, 1, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE iinputid = " & bi.iinputid & " GROUP BY 2")

            Else

                executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SELECT " & iprojectid & ", " & bi.iinputid & ", 1, " & fecha & ", '" & hora & "', '" & susername & "'")

            End If


        End If

        Dim queryExplosionInsumos As String = ""

        queryExplosionInsumos = "" & _
        "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', t2.sinputunit AS 'Unidad de Medida', " & _
        "FORMAT(SUM(t2.dcardinputqty), 3) AS 'Cantidad Requerida', " & _
        "FORMAT(SUM(t2.ipidinputqty), 3) AS 'Cantidad En Inventario', " & _
        "t2.ipisinputlocation AS 'Guardado en', " & _
        "t2.ipifecharecibido AS 'Fecha Ultimo Mov', " & _
        "t2.ipistatus AS 'Status', " & _
        "FORMAT(SUM(t2.cantidadapedir), 3) AS 'Cantidad Sugerida a Pedir', " & _
        "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir' " & _
        "FROM ( " & _
        "SELECT " & _
        "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
        "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
        "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
        "t1.pexdinputrealqty AS cantidadajustada " & _
        "FROM ( " & _
        "SELECT " & _
        "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
        "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
        "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
        "UNION " & _
        "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
        "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
        "UNION " & _
        "SELECT " & _
        "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
        "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
        "JOIN inputs i ON pex.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
        "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
        "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
        "GROUP BY pex.iprojectid, i.iinputid " & _
        ") t1 " & _
        ")t2 " & _
        "GROUP BY t2.iinputid " & _
        "ORDER BY 3 "


        executeSQLCommand(0, queryExplosionInsumos)

        setDataGridView(dgvExplosionDeInsumos, queryExplosionInsumos, False)

        dgvExplosionDeInsumos.Columns(0).Visible = False
        dgvExplosionDeInsumos.Columns(1).Visible = False

        dgvExplosionDeInsumos.Columns(1).ReadOnly = True
        dgvExplosionDeInsumos.Columns(2).ReadOnly = True
        dgvExplosionDeInsumos.Columns(3).ReadOnly = True
        dgvExplosionDeInsumos.Columns(4).ReadOnly = True
        dgvExplosionDeInsumos.Columns(5).ReadOnly = True
        dgvExplosionDeInsumos.Columns(6).ReadOnly = True
        dgvExplosionDeInsumos.Columns(7).ReadOnly = True
        dgvExplosionDeInsumos.Columns(8).ReadOnly = True
        dgvExplosionDeInsumos.Columns(9).ReadOnly = True
        dgvExplosionDeInsumos.Columns(10).ReadOnly = False

        dgvExplosionDeInsumos.Columns(1).Width = 30
        dgvExplosionDeInsumos.Columns(2).Width = 300
        dgvExplosionDeInsumos.Columns(3).Width = 70
        dgvExplosionDeInsumos.Columns(4).Width = 70
        dgvExplosionDeInsumos.Columns(5).Width = 70
        dgvExplosionDeInsumos.Columns(6).Width = 150
        dgvExplosionDeInsumos.Columns(7).Width = 130
        dgvExplosionDeInsumos.Columns(8).Width = 100
        dgvExplosionDeInsumos.Columns(9).Width = 70
        dgvExplosionDeInsumos.Columns(10).Width = 70

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnInsertarInsumo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnInsertarInsumo.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim bi As New BuscaInsumos

        bi.susername = susername
        bi.bactive = bactive
        bi.bonline = bonline
        bi.suserfullname = suserfullname
        bi.suseremail = suseremail
        bi.susersession = susersession
        bi.susermachinename = susermachinename
        bi.suserip = suserip

        bi.iprojectid = iprojectid

        bi.IsEdit = False

        bi.IsBase = False
        bi.IsModel = False

        bi.IsHistoric = isHistoric

        If Me.WindowState = FormWindowState.Maximized Then
            bi.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        bi.ShowDialog(Me)
        Me.Visible = True

        If bi.DialogResult = Windows.Forms.DialogResult.OK Then

            Dim fecha As Integer = 0
            Dim hora As String = "00:00:00"

            fecha = getMySQLDate()
            hora = getAppTime()

            Dim dsBusquedaInsumosRepetidos As DataSet

            dsBusquedaInsumosRepetidos = getSQLQueryAsDataset(0, "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion WHERE iprojectid = " & iprojectid & " AND iinputid = '" & bi.iinputid & "'")

            If dsBusquedaInsumosRepetidos.Tables(0).Rows.Count > 0 Then

                MsgBox("Ya tienes ese Insumo en esta Explosion de Insumos. ¿Podrías buscarla en la lista y cambiar la cantidad si así lo deseas?", MsgBoxStyle.OkOnly, "Insumo Repetido")
                dgvExplosionDeInsumos.EndEdit()
                Exit Sub

            End If


            Dim conteoCompound As Integer = 0
            conteoCompound = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM basecardcompoundinputs WHERE iinputid = " & bi.iinputid)

            If conteoCompound > 0 Then

                executeSQLCommand(0, "INSERT IGNORE INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SELECT " & iprojectid & ", icompoundinputid, 1, " & fecha & ", '" & hora & "', '" & susername & "' FROM basecardcompoundinputs WHERE iinputid = " & bi.iinputid & " GROUP BY 2")

            Else

                executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion SELECT " & iprojectid & ", " & bi.iinputid & ", 1, " & fecha & ", '" & hora & "', '" & susername & "'")

            End If


        End If

        Dim queryExplosionInsumos As String = ""

        queryExplosionInsumos = "" & _
        "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', t2.sinputunit AS 'Unidad de Medida', " & _
        "FORMAT(SUM(t2.dcardinputqty), 3) AS 'Cantidad Requerida', " & _
        "FORMAT(SUM(t2.ipidinputqty), 3) AS 'Cantidad En Inventario', " & _
        "t2.ipisinputlocation AS 'Guardado en', " & _
        "t2.ipifecharecibido AS 'Fecha Ultimo Mov', " & _
        "t2.ipistatus AS 'Status', " & _
        "FORMAT(SUM(t2.cantidadapedir), 3) AS 'Cantidad Sugerida a Pedir', " & _
        "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir' " & _
        "FROM ( " & _
        "SELECT " & _
        "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
        "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
        "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
        "t1.pexdinputrealqty AS cantidadajustada " & _
        "FROM ( " & _
        "SELECT " & _
        "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
        "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
        "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
        "UNION " & _
        "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
        "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
        "UNION " & _
        "SELECT " & _
        "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
        "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
        "JOIN inputs i ON pex.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
        "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
        "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
        "GROUP BY pex.iprojectid, i.iinputid " & _
        ") t1 " & _
        ")t2 " & _
        "GROUP BY t2.iinputid " & _
        "ORDER BY 3 "


        executeSQLCommand(0, queryExplosionInsumos)

        setDataGridView(dgvExplosionDeInsumos, queryExplosionInsumos, False)

        dgvExplosionDeInsumos.Columns(0).Visible = False
        dgvExplosionDeInsumos.Columns(1).Visible = False

        dgvExplosionDeInsumos.Columns(1).ReadOnly = True
        dgvExplosionDeInsumos.Columns(2).ReadOnly = True
        dgvExplosionDeInsumos.Columns(3).ReadOnly = True
        dgvExplosionDeInsumos.Columns(4).ReadOnly = True
        dgvExplosionDeInsumos.Columns(5).ReadOnly = True
        dgvExplosionDeInsumos.Columns(6).ReadOnly = True
        dgvExplosionDeInsumos.Columns(7).ReadOnly = True
        dgvExplosionDeInsumos.Columns(8).ReadOnly = True
        dgvExplosionDeInsumos.Columns(9).ReadOnly = True
        dgvExplosionDeInsumos.Columns(10).ReadOnly = False

        dgvExplosionDeInsumos.Columns(1).Width = 30
        dgvExplosionDeInsumos.Columns(2).Width = 300
        dgvExplosionDeInsumos.Columns(3).Width = 70
        dgvExplosionDeInsumos.Columns(4).Width = 70
        dgvExplosionDeInsumos.Columns(5).Width = 70
        dgvExplosionDeInsumos.Columns(6).Width = 150
        dgvExplosionDeInsumos.Columns(7).Width = 130
        dgvExplosionDeInsumos.Columns(8).Width = 100
        dgvExplosionDeInsumos.Columns(9).Width = 70
        dgvExplosionDeInsumos.Columns(10).Width = 70

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnEliminarInsumo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEliminarInsumo.Click


        If MsgBox("¿Está seguro que deseas eliminar el Insumo " & sselectedinputdescription & " de la Explosión de Insumos del Proyecto?", MsgBoxStyle.YesNo, "Confirmar Eliminación de Insumo") = MsgBoxResult.Yes Then

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            Dim tmpselectedinputid As Integer = 0
            Try
                tmpselectedinputid = CInt(dgvExplosionDeInsumos.CurrentRow.Cells(1).Value)
            Catch ex As Exception

            End Try

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion WHERE iprojectid = " & iprojectid & " AND iinputid = " & tmpselectedinputid)

        End If

        Dim queryExplosionInsumos As String = ""

        queryExplosionInsumos = "" & _
        "SELECT t2.iprojectid, t2.iinputid, t2.sinputdescription AS 'Insumo', t2.sinputunit AS 'Unidad de Medida', " & _
        "FORMAT(SUM(t2.dcardinputqty), 3) AS 'Cantidad Requerida', " & _
        "FORMAT(SUM(t2.ipidinputqty), 3) AS 'Cantidad En Inventario', " & _
        "t2.ipisinputlocation AS 'Guardado en', " & _
        "t2.ipifecharecibido AS 'Fecha Ultimo Mov', " & _
        "t2.ipistatus AS 'Status', " & _
        "FORMAT(SUM(t2.cantidadapedir), 3) AS 'Cantidad Sugerida a Pedir', " & _
        "FORMAT(t2.cantidadajustada, 3) AS 'Cantidad Real a Pedir' " & _
        "FROM ( " & _
        "SELECT " & _
        "t1.iprojectid, t1.iinputid, t1.quequery, t1.sinputdescription, t1.sinputunit, " & _
        "t1.dcardinputqty, t1.ipidinputqty, t1.ipisinputlocation, t1.ipifecharecibido, " & _
        "t1.ipistatus, IF(t1.dcardinputqty - t1.ipidinputqty < 0, 0, t1.dcardinputqty - t1.ipidinputqty) AS cantidadapedir, " & _
        "t1.pexdinputrealqty AS cantidadajustada " & _
        "FROM ( " & _
        "SELECT " & _
        "ptfi.iprojectid, ptfi.iinputid, 'normal' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, " & _
        "IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus," & _
        "IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN inputs i ON ptfi.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfi.iinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfi.iprojectid, ptfi.iinputid " & _
        "UNION " & _
        "SELECT ptfi.iprojectid, ptfci.icompoundinputid AS iinputid, 'compound' as quequery, i.sinputdescription, i.sinputunit, " & _
        "IF(SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty) IS NULL, 0, SUM(ptfci.dcompoundinputqty*ptfi.dcardinputqty*ptf.dcardqty)) AS dcardinputqty, " & _
        "IF(SUM(ipi.dinputqty) IS NULL, 0, SUM(ipi.dinputqty)) AS ipidinputqty, IF(ipi.sinputlocation IS NULL, '', ipi.sinputlocation) AS ipisinputlocation, " & _
        "ipi.fecharecibido AS ipifecharecibido, IF(ipi.sinputstatus IS NULL, '', ipi.sinputstatus) AS ipistatus, IF(pex.dinputrealqty IS NULL, 0, pex.dinputrealqty) AS pexdinputrealqty, " & _
        "IF(ptf.dcardqty IS NULL, 0, ptf.dcardqty) AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfi.iprojectid = ptfci.iprojectid AND ptfi.icardid = ptfci.icardid AND ptfi.iinputid = ptfci.iinputid " & _
        "JOIN inputs i ON ptfci.icompoundinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices WHERE iprojectid = " & iprojectid & " ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND ptfci.icompoundinputid = pp.iinputid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "LEFT JOIN (SELECT * FROM (SELECT * FROM (SELECT ipi.iinputid, i.sinputdescription, ipi.dinputqty, i.sinputunit, ipi.sinputlocation, STR_TO_DATE(CONCAT(ipi.iupdatedate, ' ', ipi.supdatetime), '%Y%c%d %T') AS fecharecibido, ipi.sinputstatus FROM inputsphysicalinventory ipi JOIN inputs i ON ipi.iinputid = i.iinputid ORDER BY fecharecibido DESC) ipi GROUP BY iinputid) ipi WHERE dinputqty > 0 ORDER BY sinputdescription) ipi ON ptfci.icompoundinputid = ipi.iinputid " & _
        "LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex ON p.iprojectid = pex.iprojectid AND i.iinputid = pex.iinputid " & _
        "LEFT JOIN shipments s ON p.iprojectid = s.iprojectid " & _
        "LEFT JOIN shipmentinputs si ON s.ishipmentid = si.ishipmentid AND i.iinputid = si.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND p.iprojectid = " & iprojectid & " " & _
        "GROUP BY ptfci.iprojectid, ptfci.icompoundinputid " & _
        "UNION " & _
        "SELECT " & _
        "pex.iprojectid, i.iinputid, 'adicionales' as quequery, i.sinputdescription, i.sinputunit, 0 AS dcardinputqty, 0 AS ipidinputqty, '' AS ipisinputlocation, " & _
        "NULL AS ipifecharecibido, '' AS ipistatus, pex.dinputrealqty AS pexdinputrealqty, 0 AS dcardqty " & _
        "FROM " & _
        "tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion pex " & _
        "JOIN inputs i ON pex.iinputid = i.iinputid " & _
        "JOIN inputtypes it ON i.iinputid = it.iinputid " & _
        "WHERE it.sinputtypedescription = 'MATERIALES' AND pex.iprojectid = " & iprojectid & " " & _
        "AND i.iinputid NOT IN (SELECT ptfi.iinputid FROM projectcardinputs ptfi WHERE ptfi.iprojectid = " & iprojectid & ") " & _
        "AND i.iinputid NOT IN (SELECT ptfci.icompoundinputid FROM projectcardcompoundinputs ptfci WHERE ptfci.iprojectid = " & iprojectid & ") " & _
        "GROUP BY pex.iprojectid, i.iinputid " & _
        ") t1 " & _
        ")t2 " & _
        "GROUP BY t2.iinputid " & _
        "ORDER BY 3 "


        executeSQLCommand(0, queryExplosionInsumos)

        setDataGridView(dgvExplosionDeInsumos, queryExplosionInsumos, False)

        dgvExplosionDeInsumos.Columns(0).Visible = False
        dgvExplosionDeInsumos.Columns(1).Visible = False

        dgvExplosionDeInsumos.Columns(1).ReadOnly = True
        dgvExplosionDeInsumos.Columns(2).ReadOnly = True
        dgvExplosionDeInsumos.Columns(3).ReadOnly = True
        dgvExplosionDeInsumos.Columns(4).ReadOnly = True
        dgvExplosionDeInsumos.Columns(5).ReadOnly = True
        dgvExplosionDeInsumos.Columns(6).ReadOnly = True
        dgvExplosionDeInsumos.Columns(7).ReadOnly = True
        dgvExplosionDeInsumos.Columns(8).ReadOnly = True
        dgvExplosionDeInsumos.Columns(9).ReadOnly = True
        dgvExplosionDeInsumos.Columns(10).ReadOnly = False

        dgvExplosionDeInsumos.Columns(1).Width = 30
        dgvExplosionDeInsumos.Columns(2).Width = 300
        dgvExplosionDeInsumos.Columns(3).Width = 70
        dgvExplosionDeInsumos.Columns(4).Width = 70
        dgvExplosionDeInsumos.Columns(5).Width = 70
        dgvExplosionDeInsumos.Columns(6).Width = 150
        dgvExplosionDeInsumos.Columns(7).Width = 130
        dgvExplosionDeInsumos.Columns(8).Width = 100
        dgvExplosionDeInsumos.Columns(9).Width = 70
        dgvExplosionDeInsumos.Columns(10).Width = 70

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnVerificarInventario_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnVerificarInventario.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim inv As New InventarioDeInsumos
        inv.susername = susername
        inv.bactive = bactive
        inv.bonline = bonline
        inv.suserfullname = suserfullname
        inv.suseremail = suseremail
        inv.susersession = susersession
        inv.susermachinename = susermachinename
        inv.suserip = suserip

        If Me.WindowState = FormWindowState.Maximized Then
            inv.WindowState = FormWindowState.Maximized
        End If

        Me.Visible = False
        inv.ShowDialog(Me)
        Me.Visible = True

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnGenerarHojasControlCompras_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnGenerarHojaControlCompras.Click

        If (String.IsNullOrEmpty(iclientid) = True Or iclientid = 0) Then

            MsgBox("Aún NO has definido un cliente para este proyecto. ¿Podrías decirme para quién estás creando este proyecto?", MsgBoxStyle.OkOnly, "Proyecto sin Cliente")
            tcProyecto.SelectedTab = tpDatosIniciales
            txtNombreCliente.Select()
            txtNombreCliente.Focus()
            Exit Sub

        End If

        Try

            Dim resultado As Boolean = False

            Dim fecha As String = ""
            Dim dayAux As String = ""
            Dim monthAux As String = ""
            Dim hourAux As String = ""
            Dim minuteAux As String = ""
            Dim secondAux As String = ""

            If DateTime.Today.Month.ToString.Length < 2 Then
                monthAux = "0" & DateTime.Today.Month
            Else
                monthAux = DateTime.Today.Month
            End If

            If DateTime.Today.Day.ToString.Length < 2 Then
                dayAux = "0" & DateTime.Today.Day
            Else
                dayAux = DateTime.Today.Day
            End If

            If Date.Now.Hour.ToString.Length < 2 Then
                hourAux = "0" & DateTime.Now.Hour
            Else
                hourAux = DateTime.Now.Hour
            End If

            If Date.Now.Minute.ToString.Length < 2 Then
                minuteAux = "0" & DateTime.Now.Minute
            Else
                minuteAux = DateTime.Now.Minute
            End If

            If Date.Now.Second.ToString.Length < 2 Then
                secondAux = "0" & DateTime.Now.Second
            Else
                secondAux = DateTime.Now.Second
            End If

            fecha = DateTime.Today.Year & monthAux & dayAux & hourAux & minuteAux & secondAux

            msSaveFileDialog.FileName = "Control de Compras " & txtNombreProyecto.Text & " " & fecha

            Try

                If Not My.Computer.FileSystem.DirectoryExists(txtRuta.Text) Then
                    My.Computer.FileSystem.CreateDirectory(txtRuta.Text)
                End If

                msSaveFileDialog.InitialDirectory = txtRuta.Text

            Catch ex As Exception

            End Try

            msSaveFileDialog.Filter = "Excel Files (*.xls) |*.xls"
            msSaveFileDialog.DefaultExt = "*.xls"

            If msSaveFileDialog.ShowDialog() = DialogResult.OK Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor
                resultado = ExportControlSheetsToExcel(msSaveFileDialog.FileName)

                Cursor.Current = System.Windows.Forms.Cursors.Default

                If resultado = True Then
                    MsgBox("Hoja de Control de Compras Exportada Correctamente!" & Chr(13) & "El archivo se abrirá al dar click en OK", MsgBoxStyle.OkOnly, "Exportación Completada")
                    System.Diagnostics.Process.Start(msSaveFileDialog.FileName)
                Else
                    MsgBox("No se han podido exportar la Hoja de Control de Compras. Intente nuevamente.", MsgBoxStyle.OkOnly, "Error al exportar las Hojas de Control de Compras")
                End If

            End If

        Catch ex As Exception

        End Try

    End Sub


    Private Function ExportControlSheetsToExcel(ByVal pth As String) As Boolean

        Try

            Dim fs As New IO.StreamWriter(pth, False)
            fs.WriteLine("<?xml version=""1.0""?>")
            fs.WriteLine("<?mso-application progid=""Excel.Sheet""?>")
            fs.WriteLine("<Workbook xmlns=""urn:schemas-microsoft-com:office:spreadsheet"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns:ss=""urn:schemas-microsoft-com:office:spreadsheet"" xmlns:html=""http://www.w3.org/TR/REC-html40"">")

            ' Create the styles for the worksheet
            fs.WriteLine("  <Styles>")

            ' Style for the document name
            fs.WriteLine("  <Style ss:ID=""1"">")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Borders>")
            fs.WriteLine("  <Border ss:Position=""Bottom"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Left"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Right"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Top"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("   </Borders>")
            fs.WriteLine("   <Font ss:FontName=""Arial"" ss:Size=""12"" ss:Bold=""1""></Font>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("   <Protection></Protection>")
            fs.WriteLine("  </Style>")

            ' Style for the column headers
            fs.WriteLine("   <Style ss:ID=""2"">")
            fs.WriteLine("   <Alignment ss:Horizontal=""Center"" ss:Vertical=""Center"" ss:WrapText=""1""></Alignment>")
            fs.WriteLine("   <Borders>")
            fs.WriteLine("  <Border ss:Position=""Bottom"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Left"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Right"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Top"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("   </Borders>")
            fs.WriteLine("   <Font ss:FontName=""Arial"" ss:Size=""9"" ss:Bold=""1""></Font>")
            fs.WriteLine("  </Style>")


            ' Style for the left sided info
            fs.WriteLine("    <Style ss:ID=""9"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the right sided info
            fs.WriteLine("    <Style ss:ID=""10"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Right"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the middle sided info
            fs.WriteLine("    <Style ss:ID=""11"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Center"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the SUBtotals labels
            fs.WriteLine("    <Style ss:ID=""12"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FFCC00"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("    </Style>")

            ' Style for the totals labels
            fs.WriteLine("    <Style ss:ID=""13"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Right"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("    </Style>")

            ' Style for the totals
            fs.WriteLine("    <Style ss:ID=""14"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat ss:Format=""Standard""></NumberFormat>")
            fs.WriteLine("    </Style>")

            fs.WriteLine("  </Styles>")

            ' Write the worksheet contents
            fs.WriteLine("<Worksheet ss:Name=""Hoja1"">")
            fs.WriteLine("  <Table ss:DefaultColumnWidth=""60"" ss:DefaultRowHeight=""15"">")

            'Write the project header info
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""494.25""/>")
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""63""/>")
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""65.25"" ss:Span=""5""/>")

            fs.WriteLine("   <Row ss:AutoFitHeight=""0"">")
            fs.WriteLine("  <Cell ss:MergeAcross=""6"" ss:StyleID=""1""><Data ss:Type=""String"">HOJA DE CONTROL DE COMPRAS</Data></Cell>")
            fs.WriteLine("   </Row>")

            fs.WriteLine("   <Row ss:AutoFitHeight=""0"">")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", lblNombreDelProyecto.Text.Trim))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", txtNombreProyecto.Text.Trim))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", lblNombreCliente.Text.Trim))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", txtNombreCliente.Text.Trim))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", "Fecha:"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", convertYYYYMMDDtoDDhyphenMMhyphenYYYY(getMySQLDate()) & " " & getAppTime()))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")


            'Write the grid headers columns (taken out since columns are already defined)
            'For Each col As DataGridViewColumn In dgv.Columns
            '    If col.Visible Then
            '        fs.WriteLine(String.Format("    <Column ss:Width=""{0}""></Column>", col.Width))
            '    End If
            'Next



            'Write the grid headers
            fs.WriteLine("    <Row ss:AutoFitHeight=""0"" ss:Height=""81"">")

            For Each col As DataGridViewColumn In dgvExplosionDeInsumosPorProveedor.Columns

                If col.Visible Then

                    fs.WriteLine(String.Format("      <Cell ss:StyleID=""2""><Data ss:Type=""String"">{0}</Data></Cell>", col.HeaderText))

                End If

            Next


            fs.WriteLine("    </Row>")

            ' Write contents for each cell
            For Each row As DataGridViewRow In dgvExplosionDeInsumosPorProveedor.Rows

                If dgvExplosionDeInsumosPorProveedor.AllowUserToAddRows = True And row.Index = dgvExplosionDeInsumosPorProveedor.Rows.Count - 1 Then
                    Exit For
                End If

                fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))

                For Each col As DataGridViewColumn In dgvExplosionDeInsumosPorProveedor.Columns

                    If col.Visible Then

                        If row.Cells(col.Name).Value.ToString = "" Then

                            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""></Cell>"))

                        Else

                            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", row.Cells(col.Name).Value.ToString))

                        End If

                    End If

                Next col

                fs.WriteLine("    </Row>")

            Next row

            ' Close up the document
            fs.WriteLine("  </Table>")

            fs.WriteLine("  <WorksheetOptions xmlns=""urn:schemas-microsoft-com:office:excel"">")
            fs.WriteLine("   <PageSetup>")
            fs.WriteLine("  <Layout x:Orientation=""Landscape""/>")
            fs.WriteLine("  <Header x:Margin=""0.51181102362204722""/>")
            fs.WriteLine("  <Footer x:Margin=""0.51181102362204722""/>")
            fs.WriteLine("  <PageMargins x:Bottom=""0.98425196850393704"" x:Left=""0.74803149606299213"" x:Right=""0.74803149606299213"" x:Top=""0.98425196850393704""/>")
            fs.WriteLine("   </PageSetup>")
            fs.WriteLine("   <Unsynced/>")
            fs.WriteLine("   <Print>")
            fs.WriteLine("  <ValidPrinterInfo/>")
            fs.WriteLine("  <PaperSizeIndex>9</PaperSizeIndex>")
            fs.WriteLine("  <Scale>65</Scale>")
            fs.WriteLine("  <HorizontalResolution>200</HorizontalResolution>")
            fs.WriteLine("  <VerticalResolution>200</VerticalResolution>")
            fs.WriteLine("   </Print>")
            fs.WriteLine("   <Zoom>75</Zoom>")
            fs.WriteLine("   <Selected/>")
            fs.WriteLine("   <Panes>")
            fs.WriteLine("  <Pane>")
            fs.WriteLine("   <Number>3</Number>")
            fs.WriteLine("   <ActiveRow>16</ActiveRow>")
            fs.WriteLine("   <ActiveCol>7</ActiveCol>")
            fs.WriteLine("  </Pane>")
            fs.WriteLine("   </Panes>")
            fs.WriteLine("   <ProtectObjects>False</ProtectObjects>")
            fs.WriteLine("   <ProtectScenarios>False</ProtectScenarios>")
            fs.WriteLine("  </WorksheetOptions>")


            fs.WriteLine("</Worksheet>")
            fs.WriteLine("</Workbook>")
            fs.Close()

            Return True

        Catch ex As Exception
            Return False
        End Try

    End Function


    Private Sub btnGenerarExplosion_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnGenerarExplosion.Click

        Dim queryPrecioSubTotal As String
        Dim precioSubTotal As Double = 0.0
        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        If (precioSubTotal = 0.0) Then
            MsgBox("Aún NO has terminado de definir este proyecto. ¿Podrías completarlo?", MsgBoxStyle.OkOnly, "Proyecto incompleto")
            Exit Sub
        End If

        Try

            Dim resultado As Boolean = False

            Dim fecha As String = ""
            Dim dayAux As String = ""
            Dim monthAux As String = ""
            Dim hourAux As String = ""
            Dim minuteAux As String = ""
            Dim secondAux As String = ""

            If DateTime.Today.Month.ToString.Length < 2 Then
                monthAux = "0" & DateTime.Today.Month
            Else
                monthAux = DateTime.Today.Month
            End If

            If DateTime.Today.Day.ToString.Length < 2 Then
                dayAux = "0" & DateTime.Today.Day
            Else
                dayAux = DateTime.Today.Day
            End If

            If Date.Now.Hour.ToString.Length < 2 Then
                hourAux = "0" & DateTime.Now.Hour
            Else
                hourAux = DateTime.Now.Hour
            End If

            If Date.Now.Minute.ToString.Length < 2 Then
                minuteAux = "0" & DateTime.Now.Minute
            Else
                minuteAux = DateTime.Now.Minute
            End If

            If Date.Now.Second.ToString.Length < 2 Then
                secondAux = "0" & DateTime.Now.Second
            Else
                secondAux = DateTime.Now.Second
            End If

            fecha = DateTime.Today.Year & monthAux & dayAux & hourAux & minuteAux & secondAux



            msSaveFileDialog.FileName = "Explosión de Insumos " & txtNombreProyecto.Text & " " & fecha

            Try

                If Not My.Computer.FileSystem.DirectoryExists(txtRuta.Text) Then
                    My.Computer.FileSystem.CreateDirectory(txtRuta.Text)
                End If

                msSaveFileDialog.InitialDirectory = txtRuta.Text

            Catch ex As Exception

            End Try

            msSaveFileDialog.Filter = "Excel Files (*.xls) |*.xls"
            msSaveFileDialog.DefaultExt = "*.xls"

            If msSaveFileDialog.ShowDialog() = DialogResult.OK Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor
                resultado = ExportExplosionToExcel(msSaveFileDialog.FileName)

                Cursor.Current = System.Windows.Forms.Cursors.Default

                If resultado = True Then
                    MsgBox("Explosión de Insumos Exportada Correctamente!" & Chr(13) & "El archivo se abrirá al dar click en OK", MsgBoxStyle.OkOnly, "Exportación Completada")
                    System.Diagnostics.Process.Start(msSaveFileDialog.FileName)
                Else
                    MsgBox("No se ha podido exportar la Explosión de Insumos. Intente nuevamente.", MsgBoxStyle.OkOnly, "Error al exportar la Explosión de Insumos")
                End If

            End If

        Catch ex As Exception

        End Try

    End Sub


    Private Function ExportExplosionToExcel(ByVal pth As String) As Boolean

        Try

            Dim fs As New IO.StreamWriter(pth, False)
            fs.WriteLine("<?xml version=""1.0""?>")
            fs.WriteLine("<?mso-application progid=""Excel.Sheet""?>")
            fs.WriteLine("<Workbook xmlns=""urn:schemas-microsoft-com:office:spreadsheet"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns:ss=""urn:schemas-microsoft-com:office:spreadsheet"" xmlns:html=""http://www.w3.org/TR/REC-html40"">")

            ' Create the styles for the worksheet
            fs.WriteLine("  <Styles>")

            ' Style for the document name
            fs.WriteLine("  <Style ss:ID=""1"">")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Borders>")
            fs.WriteLine("  <Border ss:Position=""Bottom"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Left"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Right"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Top"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("   </Borders>")
            fs.WriteLine("   <Font ss:FontName=""Arial"" ss:Size=""12"" ss:Bold=""1""></Font>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("   <Protection></Protection>")
            fs.WriteLine("  </Style>")

            ' Style for the column headers
            fs.WriteLine("   <Style ss:ID=""2"">")
            fs.WriteLine("   <Alignment ss:Horizontal=""Center"" ss:Vertical=""Center"" ss:WrapText=""1""></Alignment>")
            fs.WriteLine("   <Borders>")
            fs.WriteLine("  <Border ss:Position=""Bottom"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Left"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Right"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("  <Border ss:Position=""Top"" ss:LineStyle=""Continuous"" ss:Weight=""1""></Border>")
            fs.WriteLine("   </Borders>")
            fs.WriteLine("   <Font ss:FontName=""Arial"" ss:Size=""9"" ss:Bold=""1""></Font>")
            fs.WriteLine("  </Style>")


            ' Style for the left sided info
            fs.WriteLine("    <Style ss:ID=""9"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the right sided info
            fs.WriteLine("    <Style ss:ID=""10"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Right"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the middle sided info
            fs.WriteLine("    <Style ss:ID=""11"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""10""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Center"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("    </Style>")

            ' Style for the SUBtotals labels
            fs.WriteLine("    <Style ss:ID=""12"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FFCC00"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("    </Style>")

            ' Style for the totals labels
            fs.WriteLine("    <Style ss:ID=""13"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("      <Alignment ss:Horizontal=""Right"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat></NumberFormat>")
            fs.WriteLine("    </Style>")

            ' Style for the totals
            fs.WriteLine("    <Style ss:ID=""14"">")
            fs.WriteLine("      <Font ss:FontName=""Arial"" ss:Size=""9""></Font>")
            fs.WriteLine("   <Alignment ss:Horizontal=""Left"" ss:Vertical=""Center""></Alignment>")
            fs.WriteLine("   <Interior ss:Color=""#FF9900"" ss:Pattern=""Solid""></Interior>")
            fs.WriteLine("   <NumberFormat ss:Format=""Standard""></NumberFormat>")
            fs.WriteLine("    </Style>")

            fs.WriteLine("  </Styles>")

            ' Write the worksheet contents
            fs.WriteLine("<Worksheet ss:Name=""Hoja1"">")
            fs.WriteLine("  <Table ss:DefaultColumnWidth=""60"" ss:DefaultRowHeight=""15"">")

            'Write the project header info
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""494.25""/>")
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""63""/>")
            fs.WriteLine("   <Column ss:AutoFitWidth=""0"" ss:Width=""65.25"" ss:Span=""5""/>")

            fs.WriteLine("   <Row ss:AutoFitHeight=""0"">")
            fs.WriteLine("  <Cell ss:MergeAcross=""7"" ss:StyleID=""1""><Data ss:Type=""String"">EXPLOSION DE INSUMOS</Data></Cell>")
            fs.WriteLine("   </Row>")

            fs.WriteLine("   <Row ss:AutoFitHeight=""0"">")
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", lblNombreDelProyecto.Text.Trim))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", txtNombreProyecto.Text.Trim))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", lblNombreCliente.Text.Trim))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", txtNombreCliente.Text.Trim))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")

            fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", "Fecha:"))
            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", convertYYYYMMDDtoDDhyphenMMhyphenYYYY(getMySQLDate()) & " " & getAppTime()))
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("  <Cell ss:StyleID=""9""></Cell>")
            fs.WriteLine("    </Row>")


            'Write the grid headers columns (taken out since columns are already defined)
            'For Each col As DataGridViewColumn In dgv.Columns
            '    If col.Visible Then
            '        fs.WriteLine(String.Format("    <Column ss:Width=""{0}""></Column>", col.Width))
            '    End If
            'Next



            'Write the grid headers
            fs.WriteLine("    <Row ss:AutoFitHeight=""0"" ss:Height=""45"">")

            For Each col As DataGridViewColumn In dgvExplosionDeInsumos.Columns
                If col.Visible Then
                    fs.WriteLine(String.Format("      <Cell ss:StyleID=""2""><Data ss:Type=""String"">{0}</Data></Cell>", col.HeaderText))
                End If
            Next


            fs.WriteLine("    </Row>")

            ' Write contents for each cell
            For Each row As DataGridViewRow In dgvExplosionDeInsumos.Rows

                If dgvExplosionDeInsumos.AllowUserToAddRows = True And row.Index = dgvExplosionDeInsumos.Rows.Count - 1 Then
                    Exit For
                End If

                Try

                    'If CDbl(row.Cells(10).Value.ToString) > 0 Then
                    fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
                    'Else
                    '   Continue For
                    'End If

                Catch ex As Exception
                    fs.WriteLine(String.Format("    <Row ss:AutoFitHeight=""0"">"))
                End Try
                
                For Each col As DataGridViewColumn In dgvExplosionDeInsumos.Columns

                    If col.Visible Then

                        If row.Cells(col.Name).Value.ToString = "" Then

                            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""></Cell>"))

                        Else

                            fs.WriteLine(String.Format("      <Cell ss:StyleID=""9""><Data ss:Type=""String"">{0}</Data></Cell>", row.Cells(col.Name).Value.ToString))

                        End If

                    End If

                Next col

                fs.WriteLine("    </Row>")

            Next row

            ' Close up the document
            fs.WriteLine("  </Table>")

            fs.WriteLine("  <WorksheetOptions xmlns=""urn:schemas-microsoft-com:office:excel"">")
            fs.WriteLine("   <PageSetup>")
            fs.WriteLine("  <Layout x:Orientation=""Landscape""/>")
            fs.WriteLine("  <Header x:Margin=""0.51181102362204722""/>")
            fs.WriteLine("  <Footer x:Margin=""0.51181102362204722""/>")
            fs.WriteLine("  <PageMargins x:Bottom=""0.98425196850393704"" x:Left=""0.74803149606299213"" x:Right=""0.74803149606299213"" x:Top=""0.98425196850393704""/>")
            fs.WriteLine("   </PageSetup>")
            fs.WriteLine("   <Unsynced/>")
            fs.WriteLine("   <Print>")
            fs.WriteLine("  <ValidPrinterInfo/>")
            fs.WriteLine("  <PaperSizeIndex>9</PaperSizeIndex>")
            fs.WriteLine("  <Scale>65</Scale>")
            fs.WriteLine("  <HorizontalResolution>200</HorizontalResolution>")
            fs.WriteLine("  <VerticalResolution>200</VerticalResolution>")
            fs.WriteLine("   </Print>")
            fs.WriteLine("   <Zoom>75</Zoom>")
            fs.WriteLine("   <Selected/>")
            fs.WriteLine("   <Panes>")
            fs.WriteLine("  <Pane>")
            fs.WriteLine("   <Number>3</Number>")
            fs.WriteLine("   <ActiveRow>16</ActiveRow>")
            fs.WriteLine("   <ActiveCol>7</ActiveCol>")
            fs.WriteLine("  </Pane>")
            fs.WriteLine("   </Panes>")
            fs.WriteLine("   <ProtectObjects>False</ProtectObjects>")
            fs.WriteLine("   <ProtectScenarios>False</ProtectScenarios>")
            fs.WriteLine("  </WorksheetOptions>")


            fs.WriteLine("</Worksheet>")
            fs.WriteLine("</Workbook>")
            fs.Close()

            Return True

        Catch ex As Exception
            Return False
        End Try

    End Function


    Private Sub btnPresupuestosDeCompras_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPresupuestosDeCompras.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim tmpselectedinputid As Integer = 0

        Try

            tmpselectedinputid = CInt(dgvExplosionDeInsumos.CurrentRow.Cells(1).Value)

            'If CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(10).Value) > 0 Then
            '    tmpselectedqty = CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(10).Value) 'ajustada
            'ElseIf CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(10).Value) <= 0 And CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(9).Value) > 0 Then
            '    tmpselectedqty = CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(9).Value) 'sugerida
            'ElseIf CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(10).Value) <= 0 And CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(9).Value) <= 0 And CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(5).Value) > 0 Then
            '    tmpselectedqty = CDbl(dgvExplosionDeInsumos.CurrentRow.Cells(5).Value) 'automatica
            'Else
            '    tmpselectedqty = 1
            'End If

        Catch ex As Exception

            tmpselectedinputid = 0

        End Try

        If tmpselectedinputid = 0 Or tmpselectedinputid < 0 Then

            Dim bi As New BuscaInsumos

            bi.susername = susername
            bi.bactive = bactive
            bi.bonline = bonline
            bi.suserfullname = suserfullname
            bi.suseremail = suseremail
            bi.susersession = susersession
            bi.susermachinename = susermachinename
            bi.suserip = suserip

            bi.iprojectid = iprojectid

            bi.IsEdit = False

            bi.IsBase = False
            bi.IsModel = False

            bi.IsHistoric = isHistoric

            If Me.WindowState = FormWindowState.Maximized Then
                bi.WindowState = FormWindowState.Maximized
            End If

            Me.Visible = False
            bi.ShowDialog(Me)
            Me.Visible = True

            If bi.DialogResult = Windows.Forms.DialogResult.OK Then

                Dim bp As New BuscaCotizacionesInsumos

                bp.susername = susername
                bp.bactive = bactive
                bp.bonline = bonline
                bp.suserfullname = suserfullname
                bp.suseremail = suseremail
                bp.susersession = susersession
                bp.susermachinename = susermachinename
                bp.suserip = suserip

                bp.iprojectid = iprojectid
                bp.iinputid = bi.iinputid

                If Me.WindowState = FormWindowState.Maximized Then
                    bp.WindowState = FormWindowState.Maximized
                End If

                Me.Visible = False
                bp.ShowDialog(Me)
                Me.Visible = True

            End If

        Else

            Dim bp As New BuscaCotizacionesInsumos

            bp.susername = susername
            bp.bactive = bactive
            bp.bonline = bonline
            bp.suserfullname = suserfullname
            bp.suseremail = suseremail
            bp.susersession = susersession
            bp.susermachinename = susermachinename
            bp.suserip = suserip

            bp.iprojectid = iprojectid
            bp.iinputid = tmpselectedinputid

            If Me.WindowState = FormWindowState.Maximized Then
                bp.WindowState = FormWindowState.Maximized
            End If

            Me.Visible = False
            bp.ShowDialog(Me)
            Me.Visible = True

        End If


    End Sub


    Private Sub dgvGastosAdminAsociados_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvGastosAdminAsociados.CellClick

        Try

            If dgvGastosAdminAsociados.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedadmincostid = CInt(dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(1).Value())
            sselectedadmincostdescription = dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(2).Value()
            dselectedadmincostamount = CDbl(dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(3).Value())

        Catch ex As Exception

            iselectedadmincostid = 0
            sselectedadmincostdescription = ""
            dselectedadmincostamount = 1.0

        End Try

    End Sub


    Private Sub dgvGastosAdminAsociados_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvGastosAdminAsociados.CellContentClick

        Try

            If dgvGastosAdminAsociados.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedadmincostid = CInt(dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(1).Value())
            sselectedadmincostdescription = dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(2).Value()
            dselectedadmincostamount = CDbl(dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(3).Value())

        Catch ex As Exception

            iselectedadmincostid = 0
            sselectedadmincostdescription = ""
            dselectedadmincostamount = 1.0

        End Try

    End Sub


    Private Sub dgvGastosAdminAsociados_SelectionChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgvGastosAdminAsociados.SelectionChanged

        txtCantidadDgvGastosAdminAsociados = Nothing
        txtCantidadDgvGastosAdminAsociados_OldText = Nothing
        txtNombreDgvGastosAdminAsociados = Nothing
        txtNombreDgvGastosAdminAsociados_OldText = Nothing

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        If dgvGastosAdminAsociados.Rows.Count > 0 Then

            If dgvGastosAdminAsociados.Rows.Count = 1 Then
                Exit Sub
            End If

        End If

        Try

            If dgvGastosAdminAsociados.CurrentRow.IsNewRow Then
                Exit Sub
            End If

            iselectedadmincostid = CInt(dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)
            sselectedadmincostdescription = dgvGastosAdminAsociados.CurrentRow.Cells(2).Value()
            dselectedadmincostamount = CDbl(dgvGastosAdminAsociados.CurrentRow.Cells(3).Value)

        Catch ex As Exception

            iselectedadmincostid = 0
            sselectedadmincostdescription = ""
            dselectedadmincostamount = 1.0

        End Try

    End Sub


    Private Sub dgvGastosAdminAsociados_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvGastosAdminAsociados.CellEndEdit

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim queryGastosAdminAsociadosProyecto As String = ""
        queryGastosAdminAsociadosProyecto = "SELECT pc.iprojectid, pc.iadmincostid, pc.sprojectadmincostname AS 'Nombre del Costo', " & _
        "FORMAT(pc.dprojectadmincost, 2) AS 'Importe del Costo' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts pc WHERE pc.iprojectid = " & iprojectid

        setDataGridView(dgvGastosAdminAsociados, queryGastosAdminAsociadosProyecto, False)

        dgvGastosAdminAsociados.Columns(0).Visible = False
        dgvGastosAdminAsociados.Columns(1).Visible = False

        dgvGastosAdminAsociados.Columns(0).ReadOnly = True
        dgvGastosAdminAsociados.Columns(1).ReadOnly = True

        dgvGastosAdminAsociados.Columns(0).Width = 30
        dgvGastosAdminAsociados.Columns(1).Width = 30
        dgvGastosAdminAsociados.Columns(2).Width = 200
        dgvGastosAdminAsociados.Columns(3).Width = 100

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvGastosAdminAsociados_CellValueChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvGastosAdminAsociados.CellValueChanged

        If modifyAdminCosts = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        'LAS UNICAS COLUMNAS EDITABLES SON LAS COLUMNAS 2 Y 3: sprojectadmincostname y dprojectadmincost

        If e.ColumnIndex = 2 Then

            If dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value Is DBNull.Value Then

                If MsgBox("¿Estás seguro de que quieres eliminar este Gasto Administrativo Asociado al Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Gasto Administrativo Asociado del Proyecto") = MsgBoxResult.Yes Then

                    executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid & " AND iadmincostid = " & dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)

                    Dim total As Double = 0.0
                    total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
                    lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                Else

                    'dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = sselectedadmincostdescription

                End If

            Else

                executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts SET sprojectadmincostname = '" & dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & "', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid & " AND iadmincostid = " & dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)

            End If

        ElseIf e.ColumnIndex = 3 Then

            If dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value Is DBNull.Value Then

                If MsgBox("¿Estás seguro de que quieres eliminar este Gasto Administrativo Asociado al Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Gasto Administrativo Asociado del Proyecto") = MsgBoxResult.Yes Then

                    executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid & " AND iadmincostid = " & dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)

                    Dim total As Double = 0.0
                    total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
                    lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                Else

                    'dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dselectedadmincostamount

                End If

            ElseIf dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = 0 Then

                If MsgBox("¿Estás seguro de que quieres eliminar este Gasto Administrativo Asociado al Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Gasto Administrativo Asociado del Proyecto") = MsgBoxResult.Yes Then

                    executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid & " AND iadmincostid = " & dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)

                    Dim total As Double = 0.0
                    total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
                    lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                Else

                    dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = dselectedadmincostamount

                End If

            Else

                Dim costoadmin As Double = 0.0

                Try
                    costoadmin = CDbl(dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(3).Value)
                Catch ex As Exception
                    costoadmin = dselectedadmincostamount
                End Try

                executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts SET dprojectadmincost = " & dgvGastosAdminAsociados.Rows(e.RowIndex).Cells(e.ColumnIndex).Value & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid & " AND iadmincostid = " & dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)

                Dim total As Double = 0.0
                total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
                lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

            End If

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub dgvGastosAdminAsociados_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgvGastosAdminAsociados.EditingControlShowing

        If dgvGastosAdminAsociados.CurrentCell.ColumnIndex = 2 Then

            txtNombreDgvGastosAdminAsociados = CType(e.Control, TextBox)
            txtNombreDgvGastosAdminAsociados_OldText = txtNombreDgvGastosAdminAsociados.Text

        ElseIf dgvGastosAdminAsociados.CurrentCell.ColumnIndex = 3 Then

            txtCantidadDgvGastosAdminAsociados = CType(e.Control, TextBox)
            txtCantidadDgvGastosAdminAsociados_OldText = txtCantidadDgvGastosAdminAsociados.Text

        Else
            txtCantidadDgvGastosAdminAsociados = Nothing
            txtCantidadDgvGastosAdminAsociados_OldText = Nothing
            txtNombreDgvGastosAdminAsociados = Nothing
            txtNombreDgvGastosAdminAsociados_OldText = Nothing
        End If

    End Sub


    Private Sub txtNombreDgvGastosAdminAsociados_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtNombreDgvGastosAdminAsociados.KeyUp

        txtNombreDgvGastosAdminAsociados.Text = txtNombreDgvGastosAdminAsociados.Text.Replace("'", "").Replace("--", "").Replace("@", "").Replace("|", "")

        Dim strForbidden1 As String = "|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayForbidden1 As Char() = strForbidden1.ToCharArray

        For fc = 0 To arrayForbidden1.Length - 1

            If txtNombreDgvGastosAdminAsociados.Text.Contains(arrayForbidden1(fc)) Then
                txtNombreDgvGastosAdminAsociados.Text = txtNombreDgvGastosAdminAsociados.Text.Replace(arrayForbidden1(fc), "")
            End If

        Next fc

    End Sub


    Private Sub txtCantidadDgvGastosAdminAsociados_KeyUp(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCantidadDgvGastosAdminAsociados.KeyUp

        If Not IsNumeric(txtCantidadDgvGastosAdminAsociados.Text) Then

            Dim strForbidden2 As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
            Dim arrayForbidden2 As Char() = strForbidden2.ToCharArray

            For cp = 0 To arrayForbidden2.Length - 1

                If txtCantidadDgvGastosAdminAsociados.Text.Contains(arrayForbidden2(cp)) Then
                    txtCantidadDgvGastosAdminAsociados.Text = txtCantidadDgvGastosAdminAsociados.Text.Replace(arrayForbidden2(cp), "")
                End If

            Next cp

            If txtCantidadDgvGastosAdminAsociados.Text.Contains(".") Then

                Dim comparaPuntos As Char() = txtCantidadDgvGastosAdminAsociados.Text.ToCharArray
                Dim cuantosPuntos As Integer = 0


                For letra = 0 To comparaPuntos.Length - 1

                    If comparaPuntos(letra) = "." Then
                        cuantosPuntos = cuantosPuntos + 1
                    End If

                Next

                If cuantosPuntos > 1 Then

                    For cantidad = 1 To cuantosPuntos
                        Dim lugar As Integer = txtCantidadDgvGastosAdminAsociados.Text.LastIndexOf(".")
                        Dim longitud As Integer = txtCantidadDgvGastosAdminAsociados.Text.Length

                        If longitud > (lugar + 1) Then
                            txtCantidadDgvGastosAdminAsociados.Text = txtCantidadDgvGastosAdminAsociados.Text.Substring(0, lugar) & txtCantidadDgvGastosAdminAsociados.Text.Substring(lugar + 1)
                            Exit For
                        Else
                            txtCantidadDgvGastosAdminAsociados.Text = txtCantidadDgvGastosAdminAsociados.Text.Substring(0, lugar)
                            Exit For
                        End If
                    Next

                End If

            End If

            txtCantidadDgvGastosAdminAsociados.Text = txtCantidadDgvGastosAdminAsociados.Text.Replace("--", "").Replace("'", "")
            txtCantidadDgvGastosAdminAsociados.Text = txtCantidadDgvGastosAdminAsociados.Text.Trim

        Else
            txtCantidadDgvGastosAdminAsociados_OldText = txtCantidadDgvGastosAdminAsociados.Text
        End If

    End Sub


    Private Sub btnNuevoGastoAdminAsignado_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNuevoGastoAdminAsignado.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        iselectedadmincostid = getSQLQueryAsInteger(0, "SELECT IF(MAX(iadmincostid) + 1 IS NULL, 1, MAX(iadmincostid) + 1) AS iadmincostid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)

        'dgvGastosAdminAsociados.CurrentRow.Cells(0).Value = iprojectid
        'dgvGastosAdminAsociados.CurrentRow.Cells(1).Value = iselectedadmincostid
        'dgvGastosAdminAsociados.CurrentRow.Cells(3).Value = 1

        executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts VALUES (" & iprojectid & ", " & iselectedadmincostid & ", '', 1, " & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "')")

        Dim queryGastosAdminAsociadosProyecto As String = ""
        queryGastosAdminAsociadosProyecto = "SELECT pc.iprojectid, pc.iadmincostid, pc.sprojectadmincostname AS 'Nombre del Costo', " & _
        "FORMAT(pc.dprojectadmincost, 2) AS 'Importe del Costo' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts pc WHERE pc.iprojectid = " & iprojectid

        setDataGridView(dgvGastosAdminAsociados, queryGastosAdminAsociadosProyecto, False)

        dgvGastosAdminAsociados.Columns(0).Visible = False
        dgvGastosAdminAsociados.Columns(1).Visible = False

        dgvGastosAdminAsociados.Columns(0).ReadOnly = True
        dgvGastosAdminAsociados.Columns(1).ReadOnly = True

        dgvGastosAdminAsociados.Columns(0).Width = 30
        dgvGastosAdminAsociados.Columns(1).Width = 30
        dgvGastosAdminAsociados.Columns(2).Width = 200
        dgvGastosAdminAsociados.Columns(3).Width = 100

        Dim total As Double = 0.0
        total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
        lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnEliminarGastoAdminAsignado_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEliminarGastoAdminAsignado.Click

        If MsgBox("¿Estás seguro de que quieres eliminar este Gasto Administrativo Asociado del Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Gasto Administrativo Asociado del Proyecto") = MsgBoxResult.Yes Then

            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            Dim tmpselectedadmincostid As Integer = 0
            Try
                tmpselectedadmincostid = CInt(dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)
            Catch ex As Exception

            End Try

            executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid & " AND iadmincostid = " & tmpselectedadmincostid)

            Dim queryGastosAdminAsociadosProyecto As String = ""
            queryGastosAdminAsociadosProyecto = "SELECT pc.iprojectid, pc.iadmincostid, pc.sprojectadmincostname AS 'Nombre del Costo', " & _
            "FORMAT(pc.dprojectadmincost, 2) AS 'Importe del Costo' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts pc WHERE pc.iprojectid = " & iprojectid

            setDataGridView(dgvGastosAdminAsociados, queryGastosAdminAsociadosProyecto, False)

            dgvGastosAdminAsociados.Columns(0).Visible = False
            dgvGastosAdminAsociados.Columns(1).Visible = False

            dgvGastosAdminAsociados.Columns(0).ReadOnly = True
            dgvGastosAdminAsociados.Columns(1).ReadOnly = True

            dgvGastosAdminAsociados.Columns(0).Width = 30
            dgvGastosAdminAsociados.Columns(1).Width = 30
            dgvGastosAdminAsociados.Columns(2).Width = 200
            dgvGastosAdminAsociados.Columns(3).Width = 100

            Dim total As Double = 0.0
            total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
            lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

            Cursor.Current = System.Windows.Forms.Cursors.Default

        End If

    End Sub


    Private Sub dgvGastosAdminAsociados_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgvGastosAdminAsociados.KeyUp

        If e.KeyCode = Keys.Delete Then

            If deleteAdminCosts = False Then
                Exit Sub
            End If

            If MsgBox("¿Estás seguro de que quieres eliminar este Gasto Administrativo Asociado al Proyecto?", MsgBoxStyle.YesNo, "Confirmación de Eliminación de Gasto Administrativo Asociado del Proyecto") = MsgBoxResult.Yes Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                Dim tmpselectedadmincostid As Integer = 0
                Try
                    tmpselectedadmincostid = CInt(dgvGastosAdminAsociados.CurrentRow.Cells(1).Value)
                Catch ex As Exception

                End Try

                executeSQLCommand(0, "DELETE FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid & " AND iadmincostid = " & tmpselectedadmincostid)

                Dim queryGastosAdminAsociadosProyecto As String = ""
                queryGastosAdminAsociadosProyecto = "SELECT pc.iprojectid, pc.iadmincostid, pc.sprojectadmincostname AS 'Nombre del Costo', " & _
                "FORMAT(pc.dprojectadmincost, 2) AS 'Importe del Costo' FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts pc WHERE pc.iprojectid = " & iprojectid

                setDataGridView(dgvGastosAdminAsociados, queryGastosAdminAsociadosProyecto, False)

                dgvGastosAdminAsociados.Columns(0).Visible = False
                dgvGastosAdminAsociados.Columns(1).Visible = False

                dgvGastosAdminAsociados.Columns(0).ReadOnly = True
                dgvGastosAdminAsociados.Columns(1).ReadOnly = True

                dgvGastosAdminAsociados.Columns(0).Width = 30
                dgvGastosAdminAsociados.Columns(1).Width = 30
                dgvGastosAdminAsociados.Columns(2).Width = 200
                dgvGastosAdminAsociados.Columns(3).Width = 100

                Dim total As Double = 0.0
                total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
                lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

                Cursor.Current = System.Windows.Forms.Cursors.Default

            End If

        End If

    End Sub


    Private Sub dgvGastosAdminAsociados_UserAddedRow(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewRowEventArgs) Handles dgvGastosAdminAsociados.UserAddedRow

        If addAdminCosts = False Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        iselectedadmincostid = getSQLQueryAsInteger(0, "SELECT IF(MAX(iadmincostid) + 1 IS NULL, 1, MAX(iadmincostid) + 1) AS iadmincostid FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)

        dgvGastosAdminAsociados.CurrentRow.Cells(0).Value = iprojectid
        dgvGastosAdminAsociados.CurrentRow.Cells(1).Value = iselectedadmincostid
        dgvGastosAdminAsociados.CurrentRow.Cells(3).Value = 1

        executeSQLCommand(0, "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts VALUES (" & iprojectid & ", " & iselectedadmincostid & ", '', 1, " & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "')")

        Dim total As Double = 0.0
        total = getSQLQueryAsDouble(0, "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid)
        lblTotalGastosAdminAsignados.Text = FormatCurrency(total, 2, TriState.True, TriState.False, TriState.True)

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtPorcentajeDeComisionDeObraPresupuestada_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtPorcentajeDeComisionDeObraPresupuestada.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtPorcentajeDeComisionDeObraPresupuestada.Text.Contains(arrayCaractProhib(carp)) Then
                txtPorcentajeDeComisionDeObraPresupuestada.Text = txtPorcentajeDeComisionDeObraPresupuestada.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtPorcentajeDeComisionDeObraPresupuestada.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtPorcentajeDeComisionDeObraPresupuestada.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtPorcentajeDeComisionDeObraPresupuestada.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtPorcentajeDeComisionDeObraPresupuestada.Text.Length

                    If longitud > (lugar + 1) Then
                        txtPorcentajeDeComisionDeObraPresupuestada.Text = txtPorcentajeDeComisionDeObraPresupuestada.Text.Substring(0, lugar) & txtPorcentajeDeComisionDeObraPresupuestada.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtPorcentajeDeComisionDeObraPresupuestada.Text = txtPorcentajeDeComisionDeObraPresupuestada.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtPorcentajeDeComisionDeObraPresupuestada.Select(txtPorcentajeDeComisionDeObraPresupuestada.Text.Length, 0)
        End If

        txtPorcentajeDeComisionDeObraPresupuestada.Text = txtPorcentajeDeComisionDeObraPresupuestada.Text.Replace("--", "").Replace("'", "")
        txtPorcentajeDeComisionDeObraPresupuestada.Text = txtPorcentajeDeComisionDeObraPresupuestada.Text.Trim

    End Sub


    Private Sub txtPorcentajePorCierreDeOperacionPresupuestada_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtPorcentajePorCierreDeOperacionPresupuestada.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtPorcentajePorCierreDeOperacionPresupuestada.Text.Contains(arrayCaractProhib(carp)) Then
                txtPorcentajePorCierreDeOperacionPresupuestada.Text = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtPorcentajePorCierreDeOperacionPresupuestada.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtPorcentajePorCierreDeOperacionPresupuestada.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtPorcentajePorCierreDeOperacionPresupuestada.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Length

                    If longitud > (lugar + 1) Then
                        txtPorcentajePorCierreDeOperacionPresupuestada.Text = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Substring(0, lugar) & txtPorcentajePorCierreDeOperacionPresupuestada.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtPorcentajePorCierreDeOperacionPresupuestada.Text = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtPorcentajePorCierreDeOperacionPresupuestada.Select(txtPorcentajePorCierreDeOperacionPresupuestada.Text.Length, 0)
        End If

        txtPorcentajePorCierreDeOperacionPresupuestada.Text = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Replace("--", "").Replace("'", "")
        txtPorcentajePorCierreDeOperacionPresupuestada.Text = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Trim

    End Sub


    Private Sub txtPorcentajeDeComisionDeObraReal_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtPorcentajeDeComisionDeObraReal.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtPorcentajeDeComisionDeObraReal.Text.Contains(arrayCaractProhib(carp)) Then
                txtPorcentajeDeComisionDeObraReal.Text = txtPorcentajeDeComisionDeObraReal.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtPorcentajeDeComisionDeObraReal.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtPorcentajeDeComisionDeObraReal.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtPorcentajeDeComisionDeObraReal.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtPorcentajeDeComisionDeObraReal.Text.Length

                    If longitud > (lugar + 1) Then
                        txtPorcentajeDeComisionDeObraReal.Text = txtPorcentajeDeComisionDeObraReal.Text.Substring(0, lugar) & txtPorcentajeDeComisionDeObraReal.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtPorcentajeDeComisionDeObraReal.Text = txtPorcentajeDeComisionDeObraReal.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtPorcentajeDeComisionDeObraReal.Select(txtPorcentajeDeComisionDeObraReal.Text.Length, 0)
        End If

        txtPorcentajeDeComisionDeObraReal.Text = txtPorcentajeDeComisionDeObraReal.Text.Replace("--", "").Replace("'", "")
        txtPorcentajeDeComisionDeObraReal.Text = txtPorcentajeDeComisionDeObraReal.Text.Trim

    End Sub


    Private Sub txtPorcentajePorCierreDeOperacionReal_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtPorcentajePorCierreDeOperacionReal.KeyUp

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<>"
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        Dim resultado As Boolean = False

        For carp = 0 To arrayCaractProhib.Length - 1

            If txtPorcentajePorCierreDeOperacionReal.Text.Contains(arrayCaractProhib(carp)) Then
                txtPorcentajePorCierreDeOperacionReal.Text = txtPorcentajePorCierreDeOperacionReal.Text.Replace(arrayCaractProhib(carp), "")
                resultado = True
            End If

        Next carp

        If txtPorcentajePorCierreDeOperacionReal.Text.Contains(".") Then

            Dim comparaPuntos As Char() = txtPorcentajePorCierreDeOperacionReal.Text.ToCharArray
            Dim cuantosPuntos As Integer = 0


            For letra = 0 To comparaPuntos.Length - 1

                If comparaPuntos(letra) = "." Then
                    cuantosPuntos = cuantosPuntos + 1
                End If

            Next

            If cuantosPuntos > 1 Then

                For cantidad = 1 To cuantosPuntos
                    Dim lugar As Integer = txtPorcentajePorCierreDeOperacionReal.Text.LastIndexOf(".")
                    Dim longitud As Integer = txtPorcentajePorCierreDeOperacionReal.Text.Length

                    If longitud > (lugar + 1) Then
                        txtPorcentajePorCierreDeOperacionReal.Text = txtPorcentajePorCierreDeOperacionReal.Text.Substring(0, lugar) & txtPorcentajePorCierreDeOperacionReal.Text.Substring(lugar + 1)
                        resultado = True
                        Exit For
                    Else
                        txtPorcentajePorCierreDeOperacionReal.Text = txtPorcentajePorCierreDeOperacionReal.Text.Substring(0, lugar)
                        resultado = True
                        Exit For
                    End If
                Next

            End If

        End If

        If resultado = True Then
            txtPorcentajePorCierreDeOperacionReal.Select(txtPorcentajePorCierreDeOperacionReal.Text.Length, 0)
        End If

        txtPorcentajePorCierreDeOperacionReal.Text = txtPorcentajePorCierreDeOperacionReal.Text.Replace("--", "").Replace("'", "")
        txtPorcentajePorCierreDeOperacionReal.Text = txtPorcentajePorCierreDeOperacionReal.Text.Trim

    End Sub


    Private Sub txtPorcentajeDeComisionDeObraPresupuestada_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPorcentajeDeComisionDeObraPresupuestada.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtPorcentajeDeComisionDeObraPresupuestada.Text = txtPorcentajeDeComisionDeObraPresupuestada.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtPorcentajeDeComisionDeObraPresupuestada.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET dprojectbuildingcommission = " & valor / 100 & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
        Catch ex As Exception
            Cursor.Current = System.Windows.Forms.Cursors.Default
            Exit Sub
        End Try


        'Updating textboxes information (code from tabchanger)

        Dim dsProyecto As DataSet
        dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
        "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
        "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
        "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, p.iprojectstarteddate, p.sprojectstartedtime, " & _
        "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
        "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)


        Dim porcentajeIVA As Double
        Try
            porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
        Catch ex As Exception
            porcentajeIVA = 0.0
        End Try


        Dim taxApplicable As Integer = 1
        Try
            taxApplicable = CInt(dsProyecto.Tables(0).Rows(0).Item("sprojectTaxApplicable"))
        Catch ex As Exception
            taxApplicable = 1
        End Try

        If taxApplicable = 1 Then
            chkDoNOTApplyTax.Checked = False
        Else
            chkDoNOTApplyTax.Checked = True
        End If

        Dim queryPrecioSubTotal As String
        Dim precioSubTotal As Double = 0.0
        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        Dim precioTotal As Double = 0.0

        If chkDoNOTApplyTax.Checked = True Then
            precioTotal = precioSubTotal
        Else
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)
        End If

        txtPrecioPresupuestado.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim queryCostoPresupuestado As String
        Dim costoPresupuestado As Double = 0.0

        'queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo)))) AS dcardamount " & _
        queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON p.iprojectid = ptf.iprojectid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid
        costoPresupuestado = getSQLQueryAsDouble(0, queryCostoPresupuestado)

        txtCostoPresupuestado.Text = FormatCurrency(costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        txtUtilidadPrevistaDeEjecucion.Text = FormatCurrency(precioTotal - costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePrevistoDeUtilidadEnObra.Text = FormatCurrency((1 - (costoPresupuestado / precioTotal)) * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObra As Double = 0.0
        Dim porcentajeComisionCierre As Double = 0.0

        Try
            porcentajeComisionObra = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObra = 0.0
        End Try

        Try
            porcentajeComisionCierre = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierre = 0.0
        End Try

        txtPorcentajeDeComisionDeObraPresupuestada.Text = FormatCurrency(porcentajeComisionObra * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisionDeObraPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionPresupuestada.Text = FormatCurrency(porcentajeComisionCierre * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionCierre, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalPrevista.Text = FormatCurrency((precioTotal - costoPresupuestado) - ((precioTotal - costoPresupuestado) * porcentajeComisionObra) - ((precioTotal - costoPresupuestado) * porcentajeComisionCierre), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim querySumaEntradas As String = ""
        Dim querySumaSalidas As String = ""
        Dim querySumaFacturasAsignadas As String = ""
        Dim querySumaValesCombustible As String = ""
        Dim querySumaNominas As String = ""
        Dim querySumaGastosAdminAsignados As String = ""

        querySumaFacturasAsignadas = "SELECT SUM(total) FROM ( " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
        "GROUP BY si.isupplierinvoiceid " & _
        "UNION " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, IF((SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "GROUP BY si.isupplierinvoiceid " & _
        ") tmpA"

        querySumaValesCombustible = "" & _
        "SELECT FORMAT(IF(SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed) IS NULL, 0, SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed)), 2) AS totalvalesasignados " & _
        "FROM gasvoucherprojects gvp " & _
        "JOIN gasvouchers gv ON gvp.igasvoucherid = gv.igasvoucherid " & _
        "WHERE gvp.iprojectid = " & iprojectid & " "

        querySumaNominas = "" & _
        "SELECT FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS total " & _
        "FROM payrolls pr " & _
        "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
        "WHERE pr.iprojectid = " & iprojectid & " "

        querySumaGastosAdminAsignados = "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid

        querySumaEntradas = "SELECT SUM(ic.dincomeamount) FROM incomes ic JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid WHERE icp.iprojectid = " & iprojectid & " GROUP BY icp.iprojectid "
        querySumaSalidas = "SELECT SUM(py.dpaymentamount) FROM payments py LEFT JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid JOIN supplierinvoicepayments sipy ON py.ipaymentid = sipy.ipaymentid LEFT JOIN supplierinvoiceprojects sip ON sipy.isupplierinvoiceid = sip.isupplierinvoiceid WHERE sip.iprojectid = " & iprojectid & " GROUP BY sip.iprojectid"

        Dim sumaFacturasAsignadas As Double = 0.0
        Dim sumaEntradas As Double = 0.0
        Dim sumaSalidas As Double = 0.0
        Dim sumaFacturasCombustible As Double = 0.0
        Dim sumaNominas As Double = 0.0
        Dim sumaGastosAdminAsignados As Double = 0.0

        sumaFacturasAsignadas = getSQLQueryAsDouble(0, querySumaFacturasAsignadas)
        sumaEntradas = getSQLQueryAsDouble(0, querySumaEntradas)
        sumaSalidas = getSQLQueryAsDouble(0, querySumaSalidas)
        sumaFacturasCombustible = getSQLQueryAsDouble(0, querySumaValesCombustible)
        sumaNominas = getSQLQueryAsDouble(0, querySumaNominas)
        sumaGastosAdminAsignados = getSQLQueryAsDouble(0, querySumaGastosAdminAsignados)

        txtEntradas.Text = FormatCurrency(sumaEntradas, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtCostoRealDeLaObra.Text = FormatCurrency(sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadDeEjecucionDeObraReal.Text = FormatCurrency(sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim porcentajeDeAvanceDeObra As Double = 0.0
        Try
            porcentajeDeAvanceDeObra = ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / costoPresupuestado) * 100
        Catch ex As Exception

        End Try

        lblPorcentajeDeAvanceDeObra.Text = FormatCurrency(porcentajeDeAvanceDeObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

        If porcentajeDeAvanceDeObra < 25 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Blue
        ElseIf porcentajeDeAvanceDeObra > 25 And porcentajeDeAvanceDeObra < 50 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Green
        ElseIf porcentajeDeAvanceDeObra > 50 And porcentajeDeAvanceDeObra < 75 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.GreenYellow
        ElseIf porcentajeDeAvanceDeObra > 75 And porcentajeDeAvanceDeObra < 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.OrangeRed
        ElseIf porcentajeDeAvanceDeObra > 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Red
        End If

        Dim porcentajeDeUtilidadEnObraReal As Double = 0.0
        Try
            porcentajeDeUtilidadEnObraReal = (1 - ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / sumaEntradas)) * 100
        Catch ex As Exception

        End Try

        txtPorcentajeDeUtilidadEnObraReal.Text = FormatCurrency(porcentajeDeUtilidadEnObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObraReal As Double = 0.0
        Dim porcentajeComisionCierreReal As Double = 0.0

        Try
            porcentajeComisionObraReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObraReal = 0.0
        End Try

        Try
            porcentajeComisionCierreReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierreReal = 0.0
        End Try

        txtPorcentajeDeComisionDeObraReal.Text = FormatCurrency(porcentajeComisionObraReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisiónDeObraReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionReal.Text = FormatCurrency(porcentajeComisionCierreReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        'tabchanger code ends here


        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtPorcentajePorCierreDeOperacionPresupuestada_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPorcentajePorCierreDeOperacionPresupuestada.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtPorcentajePorCierreDeOperacionPresupuestada.Text = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtPorcentajePorCierreDeOperacionPresupuestada.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET dprojectclosingcommission = " & valor / 100 & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
        Catch ex As Exception
            Cursor.Current = System.Windows.Forms.Cursors.Default
            Exit Sub
        End Try


        'Updating textboxes information (code from tabchanger)

        Dim dsProyecto As DataSet
        dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
        "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
        "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
        "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, p.iprojectstarteddate, p.sprojectstartedtime, " & _
        "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
        "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)


        Dim porcentajeIVA As Double
        Try
            porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
        Catch ex As Exception
            porcentajeIVA = 0.0
        End Try


        Dim taxApplicable As Integer = 1
        Try
            taxApplicable = CInt(dsProyecto.Tables(0).Rows(0).Item("sprojectTaxApplicable"))
        Catch ex As Exception
            taxApplicable = 1
        End Try

        If taxApplicable = 1 Then
            chkDoNOTApplyTax.Checked = False
        Else
            chkDoNOTApplyTax.Checked = True
        End If

        Dim queryPrecioSubTotal As String
        Dim precioSubTotal As Double = 0.0
        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        Dim precioTotal As Double = 0.0

        If chkDoNOTApplyTax.Checked = True Then
            precioTotal = precioSubTotal
        Else
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)
        End If

        txtPrecioPresupuestado.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim queryCostoPresupuestado As String
        Dim costoPresupuestado As Double = 0.0

        'queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo)))) AS dcardamount " & _
        queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON p.iprojectid = ptf.iprojectid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid
        costoPresupuestado = getSQLQueryAsDouble(0, queryCostoPresupuestado)

        txtCostoPresupuestado.Text = FormatCurrency(costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        txtUtilidadPrevistaDeEjecucion.Text = FormatCurrency(precioTotal - costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePrevistoDeUtilidadEnObra.Text = FormatCurrency((1 - (costoPresupuestado / precioTotal)) * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObra As Double = 0.0
        Dim porcentajeComisionCierre As Double = 0.0

        Try
            porcentajeComisionObra = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObra = 0.0
        End Try

        Try
            porcentajeComisionCierre = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierre = 0.0
        End Try

        txtPorcentajeDeComisionDeObraPresupuestada.Text = FormatCurrency(porcentajeComisionObra * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisionDeObraPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionPresupuestada.Text = FormatCurrency(porcentajeComisionCierre * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionCierre, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalPrevista.Text = FormatCurrency((precioTotal - costoPresupuestado) - ((precioTotal - costoPresupuestado) * porcentajeComisionObra) - ((precioTotal - costoPresupuestado) * porcentajeComisionCierre), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim querySumaEntradas As String = ""
        Dim querySumaSalidas As String = ""
        Dim querySumaFacturasAsignadas As String = ""
        Dim querySumaValesCombustible As String = ""
        Dim querySumaNominas As String = ""
        Dim querySumaGastosAdminAsignados As String = ""

        querySumaFacturasAsignadas = "SELECT SUM(total) FROM ( " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
        "GROUP BY si.isupplierinvoiceid " & _
        "UNION " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, IF((SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "GROUP BY si.isupplierinvoiceid " & _
        ") tmpA"

        querySumaValesCombustible = "" & _
        "SELECT FORMAT(IF(SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed) IS NULL, 0, SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed)), 2) AS totalvalesasignados " & _
        "FROM gasvoucherprojects gvp " & _
        "JOIN gasvouchers gv ON gvp.igasvoucherid = gv.igasvoucherid " & _
        "WHERE gvp.iprojectid = " & iprojectid & " "

        querySumaNominas = "" & _
        "SELECT FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS total " & _
        "FROM payrolls pr " & _
        "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
        "WHERE pr.iprojectid = " & iprojectid & " "

        querySumaGastosAdminAsignados = "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid

        querySumaEntradas = "SELECT SUM(ic.dincomeamount) FROM incomes ic JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid WHERE icp.iprojectid = " & iprojectid & " GROUP BY icp.iprojectid "
        querySumaSalidas = "SELECT SUM(py.dpaymentamount) FROM payments py LEFT JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid JOIN supplierinvoicepayments sipy ON py.ipaymentid = sipy.ipaymentid LEFT JOIN supplierinvoiceprojects sip ON sipy.isupplierinvoiceid = sip.isupplierinvoiceid WHERE sip.iprojectid = " & iprojectid & " GROUP BY sip.iprojectid"

        Dim sumaFacturasAsignadas As Double = 0.0
        Dim sumaEntradas As Double = 0.0
        Dim sumaSalidas As Double = 0.0
        Dim sumaFacturasCombustible As Double = 0.0
        Dim sumaNominas As Double = 0.0
        Dim sumaGastosAdminAsignados As Double = 0.0

        sumaFacturasAsignadas = getSQLQueryAsDouble(0, querySumaFacturasAsignadas)
        sumaEntradas = getSQLQueryAsDouble(0, querySumaEntradas)
        sumaSalidas = getSQLQueryAsDouble(0, querySumaSalidas)
        sumaFacturasCombustible = getSQLQueryAsDouble(0, querySumaValesCombustible)
        sumaNominas = getSQLQueryAsDouble(0, querySumaNominas)
        sumaGastosAdminAsignados = getSQLQueryAsDouble(0, querySumaGastosAdminAsignados)

        txtEntradas.Text = FormatCurrency(sumaEntradas, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtCostoRealDeLaObra.Text = FormatCurrency(sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadDeEjecucionDeObraReal.Text = FormatCurrency(sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim porcentajeDeAvanceDeObra As Double = 0.0
        Try
            porcentajeDeAvanceDeObra = ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / costoPresupuestado) * 100
        Catch ex As Exception

        End Try

        lblPorcentajeDeAvanceDeObra.Text = FormatCurrency(porcentajeDeAvanceDeObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

        If porcentajeDeAvanceDeObra < 25 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Blue
        ElseIf porcentajeDeAvanceDeObra > 25 And porcentajeDeAvanceDeObra < 50 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Green
        ElseIf porcentajeDeAvanceDeObra > 50 And porcentajeDeAvanceDeObra < 75 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.GreenYellow
        ElseIf porcentajeDeAvanceDeObra > 75 And porcentajeDeAvanceDeObra < 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.OrangeRed
        ElseIf porcentajeDeAvanceDeObra > 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Red
        End If

        Dim porcentajeDeUtilidadEnObraReal As Double = 0.0
        Try
            porcentajeDeUtilidadEnObraReal = (1 - ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / sumaEntradas)) * 100
        Catch ex As Exception

        End Try

        txtPorcentajeDeUtilidadEnObraReal.Text = FormatCurrency(porcentajeDeUtilidadEnObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObraReal As Double = 0.0
        Dim porcentajeComisionCierreReal As Double = 0.0

        Try
            porcentajeComisionObraReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObraReal = 0.0
        End Try

        Try
            porcentajeComisionCierreReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierreReal = 0.0
        End Try

        txtPorcentajeDeComisionDeObraReal.Text = FormatCurrency(porcentajeComisionObraReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisiónDeObraReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionReal.Text = FormatCurrency(porcentajeComisionCierreReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        'tabchanger code ends here


        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtPorcentajeDeComisionDeObraReal_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPorcentajeDeComisionDeObraReal.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtPorcentajeDeComisionDeObraReal.Text = txtPorcentajeDeComisionDeObraReal.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtPorcentajeDeComisionDeObraReal.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET dprojectrealbuildingcommission = " & valor / 100 & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
        Catch ex As Exception
            Cursor.Current = System.Windows.Forms.Cursors.Default
            Exit Sub
        End Try


        'Updating textboxes information (code from tabchanger)

        Dim dsProyecto As DataSet
        dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
        "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
        "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
        "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, p.iprojectstarteddate, p.sprojectstartedtime, " & _
        "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
        "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)


        Dim porcentajeIVA As Double
        Try
            porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
        Catch ex As Exception
            porcentajeIVA = 0.0
        End Try


        Dim taxApplicable As Integer = 1
        Try
            taxApplicable = CInt(dsProyecto.Tables(0).Rows(0).Item("sprojectTaxApplicable"))
        Catch ex As Exception
            taxApplicable = 1
        End Try

        If taxApplicable = 1 Then
            chkDoNOTApplyTax.Checked = False
        Else
            chkDoNOTApplyTax.Checked = True
        End If

        Dim queryPrecioSubTotal As String
        Dim precioSubTotal As Double = 0.0
        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        Dim precioTotal As Double = 0.0

        If chkDoNOTApplyTax.Checked = True Then
            precioTotal = precioSubTotal
        Else
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)
        End If

        txtPrecioPresupuestado.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim queryCostoPresupuestado As String
        Dim costoPresupuestado As Double = 0.0

        'queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo)))) AS dcardamount " & _
        queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON p.iprojectid = ptf.iprojectid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid
        costoPresupuestado = getSQLQueryAsDouble(0, queryCostoPresupuestado)

        txtCostoPresupuestado.Text = FormatCurrency(costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        txtUtilidadPrevistaDeEjecucion.Text = FormatCurrency(precioTotal - costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePrevistoDeUtilidadEnObra.Text = FormatCurrency((1 - (costoPresupuestado / precioTotal)) * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObra As Double = 0.0
        Dim porcentajeComisionCierre As Double = 0.0

        Try
            porcentajeComisionObra = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObra = 0.0
        End Try

        Try
            porcentajeComisionCierre = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierre = 0.0
        End Try

        txtPorcentajeDeComisionDeObraPresupuestada.Text = FormatCurrency(porcentajeComisionObra * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisionDeObraPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionPresupuestada.Text = FormatCurrency(porcentajeComisionCierre * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionCierre, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalPrevista.Text = FormatCurrency((precioTotal - costoPresupuestado) - ((precioTotal - costoPresupuestado) * porcentajeComisionObra) - ((precioTotal - costoPresupuestado) * porcentajeComisionCierre), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim querySumaEntradas As String = ""
        Dim querySumaSalidas As String = ""
        Dim querySumaFacturasAsignadas As String = ""
        Dim querySumaValesCombustible As String = ""
        Dim querySumaNominas As String = ""
        Dim querySumaGastosAdminAsignados As String = ""

        querySumaFacturasAsignadas = "SELECT SUM(total) FROM ( " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
        "GROUP BY si.isupplierinvoiceid " & _
        "UNION " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, IF((SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "GROUP BY si.isupplierinvoiceid " & _
        ") tmpA"

        querySumaValesCombustible = "" & _
        "SELECT FORMAT(IF(SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed) IS NULL, 0, SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed)), 2) AS totalvalesasignados " & _
        "FROM gasvoucherprojects gvp " & _
        "JOIN gasvouchers gv ON gvp.igasvoucherid = gv.igasvoucherid " & _
        "WHERE gvp.iprojectid = " & iprojectid & " "

        querySumaNominas = "" & _
        "SELECT FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS total " & _
        "FROM payrolls pr " & _
        "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
        "WHERE pr.iprojectid = " & iprojectid & " "

        querySumaGastosAdminAsignados = "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid

        querySumaEntradas = "SELECT SUM(ic.dincomeamount) FROM incomes ic JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid WHERE icp.iprojectid = " & iprojectid & " GROUP BY icp.iprojectid "
        querySumaSalidas = "SELECT SUM(py.dpaymentamount) FROM payments py LEFT JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid JOIN supplierinvoicepayments sipy ON py.ipaymentid = sipy.ipaymentid LEFT JOIN supplierinvoiceprojects sip ON sipy.isupplierinvoiceid = sip.isupplierinvoiceid WHERE sip.iprojectid = " & iprojectid & " GROUP BY sip.iprojectid"

        Dim sumaFacturasAsignadas As Double = 0.0
        Dim sumaEntradas As Double = 0.0
        Dim sumaSalidas As Double = 0.0
        Dim sumaFacturasCombustible As Double = 0.0
        Dim sumaNominas As Double = 0.0
        Dim sumaGastosAdminAsignados As Double = 0.0

        sumaFacturasAsignadas = getSQLQueryAsDouble(0, querySumaFacturasAsignadas)
        sumaEntradas = getSQLQueryAsDouble(0, querySumaEntradas)
        sumaSalidas = getSQLQueryAsDouble(0, querySumaSalidas)
        sumaFacturasCombustible = getSQLQueryAsDouble(0, querySumaValesCombustible)
        sumaNominas = getSQLQueryAsDouble(0, querySumaNominas)
        sumaGastosAdminAsignados = getSQLQueryAsDouble(0, querySumaGastosAdminAsignados)

        txtEntradas.Text = FormatCurrency(sumaEntradas, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtCostoRealDeLaObra.Text = FormatCurrency(sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadDeEjecucionDeObraReal.Text = FormatCurrency(sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim porcentajeDeAvanceDeObra As Double = 0.0
        Try
            porcentajeDeAvanceDeObra = ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / costoPresupuestado) * 100
        Catch ex As Exception

        End Try

        lblPorcentajeDeAvanceDeObra.Text = FormatCurrency(porcentajeDeAvanceDeObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

        If porcentajeDeAvanceDeObra < 25 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Blue
        ElseIf porcentajeDeAvanceDeObra > 25 And porcentajeDeAvanceDeObra < 50 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Green
        ElseIf porcentajeDeAvanceDeObra > 50 And porcentajeDeAvanceDeObra < 75 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.GreenYellow
        ElseIf porcentajeDeAvanceDeObra > 75 And porcentajeDeAvanceDeObra < 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.OrangeRed
        ElseIf porcentajeDeAvanceDeObra > 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Red
        End If

        Dim porcentajeDeUtilidadEnObraReal As Double = 0.0
        Try
            porcentajeDeUtilidadEnObraReal = (1 - ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / sumaEntradas)) * 100
        Catch ex As Exception

        End Try

        txtPorcentajeDeUtilidadEnObraReal.Text = FormatCurrency(porcentajeDeUtilidadEnObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObraReal As Double = 0.0
        Dim porcentajeComisionCierreReal As Double = 0.0

        Try
            porcentajeComisionObraReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObraReal = 0.0
        End Try

        Try
            porcentajeComisionCierreReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierreReal = 0.0
        End Try

        txtPorcentajeDeComisionDeObraReal.Text = FormatCurrency(porcentajeComisionObraReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisiónDeObraReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionReal.Text = FormatCurrency(porcentajeComisionCierreReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        'tabchanger code ends here


        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub txtPorcentajePorCierreDeOperacionReal_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPorcentajePorCierreDeOperacionReal.TextChanged

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        If isFormReadyForAction = False Then
            Exit Sub
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray
        txtPorcentajePorCierreDeOperacionReal.Text = txtPorcentajePorCierreDeOperacionReal.Text.Trim(arrayCaractProhib)

        Dim valor As Double = 0.0
        Try
            valor = CDbl(txtPorcentajeDeComisionDeObraReal.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET dprojectrealclosingcommission = " & valor / 100 & ", iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
        Catch ex As Exception
            Cursor.Current = System.Windows.Forms.Cursors.Default
            Exit Sub
        End Try


        'Updating textboxes information (code from tabchanger)

        Dim dsProyecto As DataSet
        dsProyecto = getSQLQueryAsDataset(0, "SELECT p.iprojectid, p.ipeopleid, pe.speoplefullname, p.iprojectdate, " & _
        "p.sprojecttime, p.sprojectname, p.sprojectcompanyname, p.sprojecttype, p.dprojectlength, p.dprojectwidth, " & _
        "p.dterrainlength, p.dterrainwidth, p.sterrainlocation, p.sprojectfileslocation, p.slastmodelapplied, p.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault, " & _
        "p.dprojectbuildingcommission, p.dprojectclosingcommission, p.dprojectrealbuildingcommission, p.iprojectstarteddate, p.sprojectstartedtime, " & _
        "p.dprojectrealclosingcommission, p.dprojectIVApercentage, p.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime, " & _
        "p.iprojectrealclosingdate, p.sprojectrealclosingtime, p.sprojectTaxApplicable " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p LEFT JOIN people pe ON p.ipeopleid = pe.ipeopleid WHERE iprojectid = " & iprojectid)


        Dim porcentajeIVA As Double
        Try
            porcentajeIVA = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectIVApercentage"))
        Catch ex As Exception
            porcentajeIVA = 0.0
        End Try


        Dim taxApplicable As Integer = 1
        Try
            taxApplicable = CInt(dsProyecto.Tables(0).Rows(0).Item("sprojectTaxApplicable"))
        Catch ex As Exception
            taxApplicable = 1
        End Try

        If taxApplicable = 1 Then
            chkDoNOTApplyTax.Checked = False
        Else
            chkDoNOTApplyTax.Checked = True
        End If

        Dim queryPrecioSubTotal As String
        Dim precioSubTotal As Double = 0.0
        queryPrecioSubTotal = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage)*(1+ptf.dcardgainpercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p ON p.iprojectid = ptf.iprojectid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid

        precioSubTotal = getSQLQueryAsDouble(0, queryPrecioSubTotal)

        Dim precioTotal As Double = 0.0

        If chkDoNOTApplyTax.Checked = True Then
            precioTotal = precioSubTotal
        Else
            precioTotal = precioSubTotal + (precioSubTotal * porcentajeIVA)
        End If

        txtPrecioPresupuestado.Text = FormatCurrency(precioTotal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim queryCostoPresupuestado As String
        Dim costoPresupuestado As Double = 0.0

        'queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo)))) AS dcardamount " & _
        queryCostoPresupuestado = "SELECT SUM(ptf.dcardqty*((IF(costoMAT.costo IS NULL, 0, costoMAT.costo) + IF(costoMO.costo IS NULL, 0, costoMO.costo) + IF(costoEQ.costo IS NULL, 0, costoEQ.costo))*(1+ptf.dcardindirectcostspercentage))) AS dcardamount " & _
        "FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " p " & _
        "JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON p.iprojectid = ptf.iprojectid " & _
        "JOIN cardlegacycategories ptflc ON ptf.scardlegacycategoryid = ptflc.scardlegacycategoryid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, (costoMO.costo*ptfi.dcardinputqty) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid JOIN (SELECT ptfi.iprojectid, ptfi.icardid AS icardid, 0 AS iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid ) AS costoMO ON ptfi.iinputid = costoMO.iinputid AND ptfi.icardid = costoMO.icardid GROUP BY ptfi.icardid, ptfi.iprojectid) AS costoEQ ON ptf.iprojectid = costoEQ.iprojectid AND ptf.icardid = costoEQ.icardid " & _
        "JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, SUM(ptfi.dcardinputqty*pp.dinputfinalprice) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MANO DE OBRA' GROUP BY ptf.icardid, ptfi.iprojectid) AS costoMO ON ptf.iprojectid = costoMO.iprojectid AND ptf.icardid = costoMO.icardid " & _
        "LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, IF(SUM(ptfi.dcardinputqty*pp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*pp.dinputfinalprice))+IF(SUM(ptfi.dcardinputqty*cipp.dinputfinalprice) IS NULL, 0, SUM(ptfi.dcardinputqty*cipp.dinputfinalprice)) AS costo FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards ptf LEFT JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi ON ptf.iprojectid = ptfi.iprojectid AND ptf.icardid = ptfi.icardid LEFT JOIN inputs i ON ptfi.iinputid = i.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) pp GROUP BY iinputid, iprojectid) pp ON ptfi.iprojectid = pp.iprojectid AND i.iinputid = pp.iinputid LEFT JOIN (SELECT ptfi.iprojectid, ptfi.icardid, ptfi.iinputid, cipp.iupdatedate, cipp.supdatetime, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputpricewithoutIVA, 0.00000 AS dinputprotectionpercentage, SUM(ptfci.dcompoundinputqty*cipp.dinputfinalprice) AS dinputfinalprice FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs ptfi JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs ptfci ON ptfci.iprojectid = ptfi.iprojectid AND ptfci.icardid = ptfi.icardid AND ptfci.iinputid = ptfi.iinputid LEFT JOIN (SELECT * FROM (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices ORDER BY iupdatedate DESC, supdatetime DESC) cipp GROUP BY iinputid, iprojectid) cipp ON cipp.iprojectid = ptfci.iprojectid AND cipp.iinputid = ptfci.icompoundinputid GROUP BY ptfci.iprojectid, ptfci.icardid, ptfi.iinputid) cipp ON ptfi.iprojectid = cipp.iprojectid AND ptfi.icardid = cipp.icardid AND i.iinputid = cipp.iinputid JOIN inputtypes it ON i.iinputid = it.iinputid WHERE it.sinputtypedescription = 'MATERIALES' GROUP BY ptfi.iprojectid, ptfi.icardid ORDER BY ptfi.iprojectid, ptfi.icardid, ptfi.iinputid) AS costoMAT ON ptf.iprojectid = costoMAT.iprojectid AND ptf.icardid = costoMAT.icardid " & _
        "WHERE p.iprojectid = " & iprojectid
        costoPresupuestado = getSQLQueryAsDouble(0, queryCostoPresupuestado)

        txtCostoPresupuestado.Text = FormatCurrency(costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        txtUtilidadPrevistaDeEjecucion.Text = FormatCurrency(precioTotal - costoPresupuestado, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePrevistoDeUtilidadEnObra.Text = FormatCurrency((1 - (costoPresupuestado / precioTotal)) * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObra As Double = 0.0
        Dim porcentajeComisionCierre As Double = 0.0

        Try
            porcentajeComisionObra = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObra = 0.0
        End Try

        Try
            porcentajeComisionCierre = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierre = 0.0
        End Try

        txtPorcentajeDeComisionDeObraPresupuestada.Text = FormatCurrency(porcentajeComisionObra * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisionDeObraPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionPresupuestada.Text = FormatCurrency(porcentajeComisionCierre * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionPresupuestada.Text = FormatCurrency((precioTotal - costoPresupuestado) * porcentajeComisionCierre, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalPrevista.Text = FormatCurrency((precioTotal - costoPresupuestado) - ((precioTotal - costoPresupuestado) * porcentajeComisionObra) - ((precioTotal - costoPresupuestado) * porcentajeComisionCierre), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim querySumaEntradas As String = ""
        Dim querySumaSalidas As String = ""
        Dim querySumaFacturasAsignadas As String = ""
        Dim querySumaValesCombustible As String = ""
        Dim querySumaNominas As String = ""
        Dim querySumaGastosAdminAsignados As String = ""

        querySumaFacturasAsignadas = "SELECT SUM(total) FROM ( " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, SUM(sii.dsupplierinvoiceinputunitprice*sip.dinputqty)*(1+si.dIVApercentage) as total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "AND si.isupplierinvoiceid NOT IN (SELECT isupplierinvoiceid FROM supplierinvoicediscounts) " & _
        "GROUP BY si.isupplierinvoiceid " & _
        "UNION " & _
        "SELECT sip.iprojectid, sip.isupplierinvoiceid, IF((SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage) IS NULL, 0, (SUM(sii.dsupplierinvoiceinputtotalprice) - (SUM(sii.dsupplierinvoiceinputtotalprice) * sid.dsupplierinvoicediscountpercentage))*(1+si.dIVApercentage)) AS total " & _
        "FROM supplierinvoiceprojects sip " & _
        "JOIN supplierinvoices si ON sip.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "JOIN supplierinvoiceinputs sii ON si.isupplierinvoiceid = sii.isupplierinvoiceid AND sii.iinputid = sip.iinputid " & _
        "JOIN supplierinvoicediscounts sid ON sid.isupplierinvoiceid = si.isupplierinvoiceid " & _
        "WHERE sip.iprojectid = " & iprojectid & " " & _
        "GROUP BY si.isupplierinvoiceid " & _
        ") tmpA"

        querySumaValesCombustible = "" & _
        "SELECT FORMAT(IF(SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed) IS NULL, 0, SUM(gvp.dliters)*(gv.dgasvoucheramount/gv.dlitersdispensed)), 2) AS totalvalesasignados " & _
        "FROM gasvoucherprojects gvp " & _
        "JOIN gasvouchers gv ON gvp.igasvoucherid = gv.igasvoucherid " & _
        "WHERE gvp.iprojectid = " & iprojectid & " "

        querySumaNominas = "" & _
        "SELECT FORMAT(IF(SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) - prpe.ddiscountamount) IS NULL, 0, SUM((prpe.ddaysworked * prpe.ddaysalary) + (prpe.dextrahours * prpe.dextrahoursalary) + prpe.dextraincomeamount - prpe.ddiscountamount)), 2) AS total " & _
        "FROM payrolls pr " & _
        "JOIN payrollpeople prpe ON pr.ipayrollid = prpe.ipayrollid " & _
        "WHERE pr.iprojectid = " & iprojectid & " "

        querySumaGastosAdminAsignados = "SELECT SUM(dprojectadmincost) AS dprojectadmincost FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts WHERE iprojectid = " & iprojectid

        querySumaEntradas = "SELECT SUM(ic.dincomeamount) FROM incomes ic JOIN incomeprojects icp ON ic.iincomeid = icp.iincomeid WHERE icp.iprojectid = " & iprojectid & " GROUP BY icp.iprojectid "
        querySumaSalidas = "SELECT SUM(py.dpaymentamount) FROM payments py LEFT JOIN paymenttypes pyt ON py.ipaymenttypeid = pyt.ipaymenttypeid JOIN supplierinvoicepayments sipy ON py.ipaymentid = sipy.ipaymentid LEFT JOIN supplierinvoiceprojects sip ON sipy.isupplierinvoiceid = sip.isupplierinvoiceid WHERE sip.iprojectid = " & iprojectid & " GROUP BY sip.iprojectid"

        Dim sumaFacturasAsignadas As Double = 0.0
        Dim sumaEntradas As Double = 0.0
        Dim sumaSalidas As Double = 0.0
        Dim sumaFacturasCombustible As Double = 0.0
        Dim sumaNominas As Double = 0.0
        Dim sumaGastosAdminAsignados As Double = 0.0

        sumaFacturasAsignadas = getSQLQueryAsDouble(0, querySumaFacturasAsignadas)
        sumaEntradas = getSQLQueryAsDouble(0, querySumaEntradas)
        sumaSalidas = getSQLQueryAsDouble(0, querySumaSalidas)
        sumaFacturasCombustible = getSQLQueryAsDouble(0, querySumaValesCombustible)
        sumaNominas = getSQLQueryAsDouble(0, querySumaNominas)
        sumaGastosAdminAsignados = getSQLQueryAsDouble(0, querySumaGastosAdminAsignados)

        txtEntradas.Text = FormatCurrency(sumaEntradas, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtCostoRealDeLaObra.Text = FormatCurrency(sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadDeEjecucionDeObraReal.Text = FormatCurrency(sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")


        Dim porcentajeDeAvanceDeObra As Double = 0.0
        Try
            porcentajeDeAvanceDeObra = ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / costoPresupuestado) * 100
        Catch ex As Exception

        End Try

        lblPorcentajeDeAvanceDeObra.Text = FormatCurrency(porcentajeDeAvanceDeObra, 2, TriState.True, TriState.False, TriState.True).Replace("$", "") & " % "

        If porcentajeDeAvanceDeObra < 25 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Blue
        ElseIf porcentajeDeAvanceDeObra > 25 And porcentajeDeAvanceDeObra < 50 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Green
        ElseIf porcentajeDeAvanceDeObra > 50 And porcentajeDeAvanceDeObra < 75 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.GreenYellow
        ElseIf porcentajeDeAvanceDeObra > 75 And porcentajeDeAvanceDeObra < 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.OrangeRed
        ElseIf porcentajeDeAvanceDeObra > 90 Then
            lblPorcentajeDeAvanceDeObra.ForeColor = Color.Red
        End If

        Dim porcentajeDeUtilidadEnObraReal As Double = 0.0
        Try
            porcentajeDeUtilidadEnObraReal = (1 - ((sumaFacturasAsignadas + sumaFacturasCombustible + sumaNominas + sumaGastosAdminAsignados) / sumaEntradas)) * 100
        Catch ex As Exception

        End Try

        txtPorcentajeDeUtilidadEnObraReal.Text = FormatCurrency(porcentajeDeUtilidadEnObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        Dim porcentajeComisionObraReal As Double = 0.0
        Dim porcentajeComisionCierreReal As Double = 0.0

        Try
            porcentajeComisionObraReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealbuildingcommission"))
        Catch ex As Exception
            porcentajeComisionObraReal = 0.0
        End Try

        Try
            porcentajeComisionCierreReal = CDbl(dsProyecto.Tables(0).Rows(0).Item("dprojectrealclosingcommission"))
        Catch ex As Exception
            porcentajeComisionCierreReal = 0.0
        End Try

        txtPorcentajeDeComisionDeObraReal.Text = FormatCurrency(porcentajeComisionObraReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImporteComisiónDeObraReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtPorcentajePorCierreDeOperacionReal.Text = FormatCurrency(porcentajeComisionCierreReal * 100, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtImportePorCierreDeOperacionReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal, 2, TriState.True, TriState.False, TriState.True).Replace("$", "")
        txtUtilidadFinalReal.Text = FormatCurrency((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionObraReal) - ((sumaEntradas - sumaFacturasAsignadas - sumaFacturasCombustible - sumaNominas - sumaGastosAdminAsignados) * porcentajeComisionCierreReal), 2, TriState.True, TriState.False, TriState.True).Replace("$", "")

        'tabchanger code ends here


        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Sub btnTerminarObra_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnTerminarObra.Click

        If validaAnalisisUtilidades(False) = True Then

            If MsgBox("¿Estás seguro de que deseas Marcar como Terminada este Proyecto?", MsgBoxStyle.YesNo, "Confirmación Terminación de Obra") = MsgBoxResult.Yes Then

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

                executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET iprojectrealclosingdate = " & getMySQLDate() & ", sprojectrealclosingtime = '" & getAppTime() & "', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)
                btnTerminarObra.Visible = False
                lblFechaTerminoReal.Visible = True
                dtFechaTerminoReal.Visible = True

            End If

        End If

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    Private Function validaAnalisisUtilidades(ByVal silent As Boolean) As Boolean

        If isFormReadyForAction = False Then
            Exit Function
        End If

        Dim strcaracteresprohibidos As String = "abcdefghijklmnopqrstuvwxyzñABCDEFGHIJKLMNOPQRSTUVWXYZÑ|°!#$%&/()=?¡*¨[]_:;,-{}+´¿'¬^`~@\<> "
        Dim arrayCaractProhib As Char() = strcaracteresprohibidos.ToCharArray

        txtPorcentajeDeComisionDeObraPresupuestada.Text = txtPorcentajeDeComisionDeObraPresupuestada.Text.Trim(arrayCaractProhib)
        txtPorcentajePorCierreDeOperacionPresupuestada.Text = txtPorcentajePorCierreDeOperacionPresupuestada.Text.Trim(arrayCaractProhib)
        txtPorcentajeDeComisionDeObraReal.Text = txtPorcentajeDeComisionDeObraReal.Text.Trim(arrayCaractProhib)
        txtPorcentajePorCierreDeOperacionReal.Text = txtPorcentajePorCierreDeOperacionReal.Text.Trim(arrayCaractProhib)

        Dim valorPorcentajeDeComisionDeObraPresupuestada As Double = 0.0
        Dim valorPorcentajePorCierreDeOperacionPresupuestada As Double = 0.0
        Dim valorPorcentajeDeComisionDeObraReal As Double = 0.0
        Dim valorPorcentajePorCierreDeOperacionReal As Double = 0.0

        Try
            valorPorcentajeDeComisionDeObraPresupuestada = CDbl(txtPorcentajeDeComisionDeObraPresupuestada.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
        Catch ex As Exception

        End Try

        Try
            valorPorcentajePorCierreDeOperacionPresupuestada = CDbl(txtPorcentajePorCierreDeOperacionPresupuestada.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
        Catch ex As Exception

        End Try

        Try
            valorPorcentajeDeComisionDeObraReal = CDbl(txtPorcentajeDeComisionDeObraReal.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
        Catch ex As Exception

        End Try

        Try
            valorPorcentajePorCierreDeOperacionReal = CDbl(txtPorcentajeDeComisionDeObraReal.Text.Trim.Trim("--").Trim("'").Trim("@", ""))
        Catch ex As Exception

        End Try

        If valorPorcentajeDeComisionDeObraPresupuestada = 0 Then

            tcProyecto.SelectedTab = tpAnalisisUtilidades
            txtPorcentajeDeComisionDeObraPresupuestada.Select()
            txtPorcentajeDeComisionDeObraPresupuestada.Focus()
            If silent = False Then
                MsgBox("¿Podrías poner un porcentaje de Comisión de Obra?", MsgBoxStyle.OkOnly, "Dato Faltante")
            End If
            alertaMostrada = True
            Return False

        End If

        If valorPorcentajePorCierreDeOperacionPresupuestada = 0 Then

            tcProyecto.SelectedTab = tpAnalisisUtilidades
            txtPorcentajePorCierreDeOperacionPresupuestada.Select()
            txtPorcentajePorCierreDeOperacionPresupuestada.Focus()
            If silent = False Then
                MsgBox("¿Podrías poner un porcentaje de Comisión de Cierre?", MsgBoxStyle.OkOnly, "Dato Faltante")
            End If
            alertaMostrada = True
            Return False

        End If

        If valorPorcentajeDeComisionDeObraReal = 0 Then

            tcProyecto.SelectedTab = tpAnalisisUtilidades
            txtPorcentajeDeComisionDeObraReal.Select()
            txtPorcentajeDeComisionDeObraReal.Focus()
            MsgBox("¿Podrías poner un porcentaje de Comisión de Obra Real?", MsgBoxStyle.OkOnly, "Dato Faltante")
            alertaMostrada = True
            Return False

        End If

        If valorPorcentajePorCierreDeOperacionReal = 0 Then

            tcProyecto.SelectedTab = tpAnalisisUtilidades
            txtPorcentajePorCierreDeOperacionReal.Select()
            txtPorcentajePorCierreDeOperacionReal.Focus()
            If silent = False Then
                MsgBox("¿Podrías poner un porcentaje de Comisión de Cierre Real?", MsgBoxStyle.OkOnly, "Dato Faltante")
            End If
            alertaMostrada = True
            Return False

        End If

        Return True

    End Function


    Private Sub dgvPedidosDeObra_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvPedidosDeObra.CellClick



    End Sub


    Private Sub dgvPedidosDeObra_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvPedidosDeObra.CellContentClick



    End Sub


    Private Sub dgvPedidosDeObra_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvPedidosDeObra.CellDoubleClick



    End Sub


    Private Sub dgvPedidosDeObra_CellContentDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvPedidosDeObra.CellContentDoubleClick



    End Sub


    Private Sub dgvEnviosALaObra_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEnviosALaObra.CellClick



    End Sub


    Private Sub dgvEnviosALaObra_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEnviosALaObra.CellContentClick



    End Sub


    Private Sub dgvEnviosALaObra_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEnviosALaObra.CellDoubleClick



    End Sub


    Private Sub dgvEnviosALaObra_CellContentDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEnviosALaObra.CellContentDoubleClick



    End Sub


    Private Sub dgvFacturas_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvFacturas.CellClick



    End Sub


    Private Sub dgvFacturas_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvFacturas.CellContentClick



    End Sub


    Private Sub dgvFacturas_CellContentDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvFacturas.CellContentDoubleClick



    End Sub


    Private Sub dgvFacturas_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvFacturas.CellDoubleClick



    End Sub


    Private Sub dgvEntradas_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEntradas.CellClick



    End Sub


    Private Sub dgvEntradas_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEntradas.CellContentClick



    End Sub


    Private Sub dgvEntradas_CellContentDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEntradas.CellContentDoubleClick



    End Sub


    Private Sub dgvEntradas_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvEntradas.CellDoubleClick



    End Sub


    Private Sub dgvSalidas_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvSalidas.CellClick



    End Sub


    Private Sub dgvSalidas_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvSalidas.CellContentClick



    End Sub


    Private Sub dgvSalidas_CellContentDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvSalidas.CellContentDoubleClick



    End Sub


    Private Sub dgvSalidas_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvSalidas.CellDoubleClick



    End Sub


    Private Sub btnGuardar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnGuardar.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim timesProjectIsOpen As Integer = 1

        timesProjectIsOpen = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid & "'")

        If timesProjectIsOpen > 1 And isEdit = True Then

            Cursor.Current = System.Windows.Forms.Cursors.Default

            If MsgBox("Otro usuario tiene abierto el mismo Proyecto. Guardar podría significar que esa persona perdiera sus cambios. ¿Deseas continuar guardando?", MsgBoxStyle.YesNo, "Confirmación Guardado") = MsgBoxResult.No Then

                Exit Sub

            Else

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            End If

        ElseIf timesProjectIsOpen > 1 And isEdit = False Then

            Dim newIdAddition As Integer = 1

            Do While getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid + newIdAddition & "'") > 1 And isEdit = False
                newIdAddition = newIdAddition + 1
            Loop

            'I got the new id (previousId + newIdAddition)

            Dim queriesNewId(33) As String

            queriesNewId(0) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition
            queriesNewId(1) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts"
            queriesNewId(2) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards"
            queriesNewId(3) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs"
            queriesNewId(4) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs"
            queriesNewId(5) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices"
            queriesNewId(6) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion"
            queriesNewId(7) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber"
            queriesNewId(8) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts"
            queriesNewId(9) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition
            queriesNewId(10) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts"
            queriesNewId(11) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards"
            queriesNewId(12) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs"
            queriesNewId(13) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs"
            queriesNewId(14) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices"
            queriesNewId(15) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber"
            queriesNewId(16) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardsAux"
            queriesNewId(17) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & " SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(18) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(19) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(20) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(21) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(22) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(23) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(24) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(25) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(26) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & " SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(27) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(28) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(29) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(30) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(31) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(32) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid

            If executeTransactedSQLCommand(0, queriesNewId) = True Then
                iprojectid = iprojectid + newIdAddition
            End If

        End If

        Dim baseid As Integer = 0

        baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

        If baseid = 0 Then
            baseid = 99999
        End If

        If iprojectid = 0 Then

            Dim fecha As Integer = getMySQLDate()
            Dim hora As String = getAppTime()

            iprojectid = getSQLQueryAsInteger(0, "SELECT IF(MAX(iprojectid) + 1 IS NULL, 1, MAX(iprojectid) + 1) AS iprojectid FROM projects")


            Dim queriesDropCreate(35) As String

            queriesDropCreate(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0"
            queriesDropCreate(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " ( `iprojectid` int(11) NOT NULL AUTO_INCREMENT, `iprojectdate` int(11) NOT NULL, `sprojecttime` varchar(11) CHARACTER SET latin1 NOT NULL, `sprojectname` varchar(200) CHARACTER SET latin1 NOT NULL, `sprojecttype` varchar(200) CHARACTER SET latin1 NOT NULL, `ipeopleid` int(11) NOT NULL COMMENT 'Client Id', `sprojectcompanyname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dprojectwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `sterrainlocation` varchar(400) CHARACTER SET latin1 NOT NULL, `sprojectfileslocation` varchar(1000) CHARACTER SET latin1 NOT NULL, `slastmodelapplied` varchar(200) CHARACTER SET latin1 NOT NULL, `dprojectindirectpercentagedefault` decimal(20,5) NOT NULL, `dprojectgainpercentagedefault` decimal(20,5) NOT NULL, `dprojectbuildingcommission` decimal(20,5) NOT NULL, `dprojectclosingcommission` decimal(20,5) NOT NULL, `dprojectrealbuildingcommission` decimal(20,5) DEFAULT NULL, `dprojectrealclosingcommission` decimal(20,5) DEFAULT NULL, `dprojectIVApercentage` decimal(20,5) NOT NULL DEFAULT '0.16000', `iprojectstarteddate` int(11) DEFAULT NULL, `sprojectstartedtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectforecastedclosingdate` int(11) DEFAULT NULL, `sprojectforecastedclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectrealclosingdate` int(11) DEFAULT NULL, `sprojectrealclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `sprojectTaxApplicable` int(1) DEFAULT 1, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`), KEY `peopleid` (`ipeopleid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(2) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0IndirectCosts"
            queriesDropCreate(3) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts" & " ( `iprojectid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sprojectcostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectcost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icostid`), KEY `projectid` (`iprojectid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(4) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Cards"
            queriesDropCreate(5) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `legacycategoryid` (`scardlegacycategoryid`), KEY `legacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(6) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardInputs"
            queriesDropCreate(7) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(8) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardCompoundInputs"
            queriesDropCreate(9) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(10) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Prices"
            queriesDropCreate(11) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices" & " ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `inputid` (`iinputid`), KEY `projectid` (`iprojectid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(12) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Explosion"
            queriesDropCreate(13) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputrealqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(14) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Timber"
            queriesDropCreate(15) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(16) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0AdminCosts"
            queriesDropCreate(17) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts ( `iprojectid` int(11) NOT NULL, `iadmincostid` int(11) NOT NULL, `sprojectadmincostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectadmincost` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iadmincostid`), KEY `projectid` (`iprojectid`), KEY `admincostid` (`iadmincostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(18) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs"
            queriesDropCreate(19) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(20) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs"
            queriesDropCreate(21) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(22) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards"
            queriesDropCreate(23) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `cardlegacycategoryid` (`scardlegacycategoryid`), KEY `cardlegacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(24) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts"
            queriesDropCreate(25) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts ( `ibaseid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sbasecostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dbasecost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icostid`), KEY `baseid` (`ibaseid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(26) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices"
            queriesDropCreate(27) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `baseid` (`ibaseid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(28) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid
            queriesDropCreate(29) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " ( `ibaseid` int(11) NOT NULL AUTO_INCREMENT, `sbasefileslocation` varchar(400) CHARACTER SET latin1 NOT NULL, `dbaseindirectpercentagedefault` decimal(20,5) NOT NULL, `dbasegainpercentagedefault` decimal(20,5) NOT NULL, `dbaseIVApercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(30) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0Timber"
            queriesDropCreate(31) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(32) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardsAux"

            queriesDropCreate(33) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " VALUES (" & iprojectid & ", " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", '00:00:00', '" & txtNombreProyecto.Text & "', '" & validaTipoDeConstruccion() & "', " & iclientid & ", '" & txtNombreEmpresa.Text & "', " & txtLongitudVivienda.Text & ", " & txtAnchoVivienda.Text & ", " & txtLongitudTerreno.Text & ", " & txtAnchoTerreno.Text & ", '" & txtLugar.Text & "', '" & txtRuta.Text.Replace("\", "/") & "', '', " & txtPorcentajeIndirectosDefault.Text & ", " & txtPorcentajeUtilidadDefault.Text & ", " & txtPorcentajeDeComisionDeObraPresupuestada.Text & ", " & txtPorcentajePorCierreDeOperacionPresupuestada.Text & ", " & txtPorcentajeDeComisionDeObraReal.Text & ", " & txtPorcentajePorCierreDeOperacionReal.Text & ", " & txtPorcentajeIVA.Text & ", 0, '00:00:00', 0, '00:00:00', 0, '00:00:00', 1, " & fecha & ", '" & hora & "', '" & susername & "')"

            executeTransactedSQLCommand(0, queriesDropCreate)

        Else

            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET iprojectdate = " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", sprojecttime = '00:00:00', sprojectname = '" & txtNombreProyecto.Text & "', sprojecttype = '" & validaTipoDeConstruccion() & "', ipeopleid = " & iclientid & ", sprojectcompanyname = '" & txtNombreEmpresa.Text & "', dprojectlength = " & txtLongitudVivienda.Text & ", dprojectwidth = " & txtLongitudVivienda.Text & ", dterrainlength = " & txtLongitudTerreno.Text & ", dterrainwidth = " & txtLongitudTerreno.Text & ", sterrainlocation = '" & txtLugar.Text & "', sprojectfileslocation = '" & txtRuta.Text.Replace("\", "/") & "', slastmodelapplied = '', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)

        End If

        Dim queries(50) As String

        queries(0) = "" & _
        "DELETE " & _
        "FROM projects " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp WHERE projects.iprojectid = tp.iprojectid) "

        queries(1) = "" & _
        "DELETE " & _
        "FROM projectindirectcosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic WHERE projectindirectcosts.iprojectid = tpic.iprojectid AND projectindirectcosts.icostid = tpic.icostid) "

        queries(2) = "" & _
        "DELETE " & _
        "FROM projectcards " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc WHERE projectcards.iprojectid = tpc.iprojectid AND projectcards.icardid = tpc.icardid) "

        queries(3) = "" & _
        "DELETE " & _
        "FROM projectcardinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci WHERE projectcardinputs.iprojectid = tpci.iprojectid AND projectcardinputs.icardid = tpci.icardid AND projectcardinputs.iinputid = tpci.iinputid) "

        queries(4) = "" & _
        "DELETE " & _
        "FROM projectcardcompoundinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci WHERE projectcardcompoundinputs.iprojectid = tpcci.iprojectid AND projectcardcompoundinputs.icardid = tpcci.icardid AND projectcardcompoundinputs.iinputid = tpcci.iinputid AND projectcardcompoundinputs.icompoundinputid = tpcci.icompoundinputid) "

        queries(5) = "" & _
        "DELETE " & _
        "FROM projectprices " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp WHERE projectprices.iprojectid = tpp.iprojectid AND projectprices.iinputid = tpp.iinputid AND projectprices.iupdatedate = tpp.iupdatedate AND projectprices.supdatetime = tpp.supdatetime) "

        queries(6) = "" & _
        "DELETE " & _
        "FROM projectexplosion " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex WHERE projectexplosion.iprojectid = tpex.iprojectid AND projectexplosion.iinputid = tpex.iinputid) "

        queries(7) = "" & _
        "DELETE " & _
        "FROM projecttimber " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt WHERE projecttimber.iprojectid = tpt.iprojectid AND projecttimber.iinputid = tpt.iinputid) "

        queries(47) = "" & _
        "DELETE " & _
        "FROM projectadmincosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac WHERE projectadmincosts.iprojectid = tpac.iprojectid AND projectadmincosts.iadmincostid = tpac.iadmincostid) "

        queries(8) = "" & _
        "UPDATE projects p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp ON tp.iprojectid = p.iprojectid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.iprojectdate = tp.iprojectdate, p.sprojecttime = tp.sprojecttime, p.sprojectname = tp.sprojectname, p.sprojecttype = tp.sprojecttype, p.ipeopleid = tp.ipeopleid, p.sprojectcompanyname = tp.sprojectcompanyname, p.dprojectlength = tp.dprojectlength, p.dprojectwidth = tp.dprojectwidth, p.dterrainlength = tp.dterrainlength, p.dterrainwidth = tp.dterrainwidth, p.sterrainlocation = tp.sterrainlocation, p.sprojectfileslocation = tp.sprojectfileslocation, p.slastmodelapplied = tp.slastmodelapplied, p.dprojectindirectpercentagedefault = tp.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault = tp.dprojectgainpercentagedefault, p.dprojectbuildingcommission = tp.dprojectbuildingcommission, p.dprojectclosingcommission = tp.dprojectclosingcommission, p.dprojectrealbuildingcommission = tp.dprojectrealbuildingcommission, p.dprojectrealclosingcommission = tp.dprojectrealclosingcommission, p.dprojectIVApercentage = tp.dprojectIVApercentage, p.iprojectstarteddate = tp.iprojectstarteddate, p.sprojectstartedtime = tp.sprojectstartedtime, p.iprojectforecastedclosingdate = tp.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime = tp.sprojectforecastedclosingtime, p.iprojectrealclosingdate = tp.iprojectrealclosingdate, p.sprojectrealclosingtime = tp.sprojectrealclosingtime, p.sprojectTaxApplicable = tp.sprojectTaxApplicable WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

        queries(9) = "" & _
        "UPDATE projectindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic ON tpic.iprojectid = pic.iprojectid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sprojectcostname = tpic.sprojectcostname, pic.dprojectcost = tpic.dprojectcost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

        queries(10) = "" & _
        "UPDATE projectcards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc ON tpc.iprojectid = pc.iprojectid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

        queries(11) = "" & _
        "UPDATE projectcardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci ON tpci.iprojectid = pci.iprojectid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

        queries(12) = "" & _
        "UPDATE projectcardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci ON tpcci.iprojectid = pcci.iprojectid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.iinputid = tpcci.iinputid, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

        queries(13) = "" & _
        "UPDATE projectprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp ON tpp.iprojectid = pp.iprojectid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

        queries(14) = "" & _
        "UPDATE projectexplosion pex JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex ON tpex.iprojectid = pex.iprojectid AND tpex.iinputid = pex.iinputid SET pex.iupdatedate = tpex.iupdatedate, pex.supdatetime = tpex.supdatetime, pex.supdateusername = tpex.supdateusername, pex.dinputrealqty = tpex.dinputrealqty WHERE STR_TO_DATE(CONCAT(tpex.iupdatedate, ' ', tpex.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pex.iupdatedate, ' ', pex.supdatetime), '%Y%c%d %T') "

        queries(15) = "" & _
        "UPDATE projecttimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt ON tpt.iprojectid = pt.iprojectid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

        queries(48) = "" & _
        "UPDATE projectadmincosts pac JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac ON tpac.iprojectid = pac.iprojectid AND tpac.iadmincostid = pac.iadmincostid SET pac.iupdatedate = tpac.iupdatedate, pac.supdatetime = tpac.supdatetime, pac.supdateusername = tpac.supdateusername, pac.sprojectadmincostname = tpac.sprojectadmincostname, pac.dprojectadmincost = tpac.dprojectadmincost WHERE STR_TO_DATE(CONCAT(tpac.iupdatedate, ' ', tpac.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pac.iupdatedate, ' ', pac.supdatetime), '%Y%c%d %T') "

        queries(16) = "" & _
        "INSERT INTO projects " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp " & _
        "WHERE NOT EXISTS (SELECT * FROM projects p WHERE p.iprojectid = tp.iprojectid AND p.iprojectid = " & iprojectid & ") "

        queries(17) = "" & _
        "INSERT INTO projectindirectcosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic " & _
        "WHERE NOT EXISTS (SELECT * FROM projectindirectcosts pic WHERE pic.iprojectid = tpic.iprojectid AND pic.icostid = tpic.icostid AND pic.iprojectid = " & iprojectid & ") "

        queries(18) = "" & _
        "INSERT INTO projectcards " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcards pc WHERE pc.iprojectid = tpc.iprojectid AND pc.icardid = tpc.icardid AND pc.iprojectid = " & iprojectid & ") "

        queries(19) = "" & _
        "INSERT INTO projectcardinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardinputs pci WHERE pci.iprojectid = tpci.iprojectid AND pci.icardid = tpci.icardid AND pci.iinputid = tpci.iinputid AND pci.iprojectid = " & iprojectid & ") "

        queries(20) = "" & _
        "INSERT INTO projectcardcompoundinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardcompoundinputs pcci WHERE pcci.iprojectid = tpcci.iprojectid AND pcci.icardid = tpcci.icardid AND pcci.iinputid = tpcci.iinputid AND pcci.icompoundinputid = tpcci.icompoundinputid AND pcci.iprojectid = " & iprojectid & ") "

        queries(21) = "" & _
        "INSERT INTO projectprices " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp " & _
        "WHERE NOT EXISTS (SELECT * FROM projectprices pp WHERE pp.iprojectid = tpp.iprojectid AND pp.iinputid = tpp.iinputid AND pp.iupdatedate = tpp.iupdatedate AND pp.supdatetime = tpp.supdatetime) "

        queries(22) = "" & _
        "INSERT INTO projectexplosion " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex " & _
        "WHERE NOT EXISTS (SELECT * FROM projectexplosion pex WHERE pex.iprojectid = tpex.iprojectid AND pex.iinputid = tpex.iinputid) "

        queries(23) = "" & _
        "INSERT INTO projecttimber " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt " & _
        "WHERE NOT EXISTS (SELECT * FROM projecttimber pt WHERE pt.iprojectid = tpt.iprojectid AND pt.iinputid = tpt.iinputid) "

        queries(49) = "" & _
        "INSERT INTO projectadmincosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac " & _
        "WHERE NOT EXISTS (SELECT * FROM projectadmincosts pac WHERE pac.iprojectid = tpac.iprojectid AND pac.iadmincostid = tpac.iadmincostid AND pac.iprojectid = " & iprojectid & ") "

        queries(24) = "" & _
        "DELETE " & _
        "FROM base " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb WHERE base.ibaseid = tb.ibaseid) "

        queries(25) = "" & _
        "DELETE " & _
        "FROM baseindirectcosts " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic WHERE baseindirectcosts.ibaseid = tbic.ibaseid AND baseindirectcosts.icostid = tbic.icostid) "

        queries(26) = "" & _
        "DELETE " & _
        "FROM basecards " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

        queries(27) = "" & _
        "DELETE " & _
        "FROM basecards " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

        queries(28) = "" & _
        "DELETE " & _
        "FROM basecardinputs " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci WHERE basecardinputs.ibaseid = tbci.ibaseid AND basecardinputs.icardid = tbci.icardid AND basecardinputs.iinputid = tbci.iinputid) "

        queries(29) = "" & _
        "DELETE " & _
        "FROM basecardcompoundinputs " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci WHERE basecardcompoundinputs.ibaseid = tbcci.ibaseid AND basecardcompoundinputs.icardid = tbcci.icardid AND basecardcompoundinputs.iinputid = tbcci.iinputid AND basecardcompoundinputs.icompoundinputid = tbcci.icompoundinputid) "

        queries(30) = "" & _
        "DELETE " & _
        "FROM baseprices " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp WHERE baseprices.ibaseid = tbp.ibaseid AND baseprices.iinputid = tbp.iinputid AND baseprices.iupdatedate = tbp.iupdatedate AND baseprices.supdatetime = tbp.supdatetime) "

        queries(31) = "" & _
        "DELETE " & _
        "FROM basetimber " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt WHERE basetimber.ibaseid = tbt.ibaseid AND basetimber.iinputid = tbt.iinputid) "

        queries(32) = "" & _
        "UPDATE base p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tp ON tp.ibaseid = p.ibaseid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.sbasefileslocation = tp.sbasefileslocation, p.dbaseindirectpercentagedefault = tp.dbaseindirectpercentagedefault, p.dbasegainpercentagedefault = tp.dbasegainpercentagedefault, p.dbaseIVApercentage = tp.dbaseIVApercentage WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

        queries(33) = "" & _
        "UPDATE baseindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tpic ON tpic.ibaseid = pic.ibaseid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sbasecostname = tpic.sbasecostname, pic.dbasecost = tpic.dbasecost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

        queries(34) = "" & _
        "UPDATE basecards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tpc ON tpc.ibaseid = pc.ibaseid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

        queries(35) = "" & _
        "UPDATE basecardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tpci ON tpci.ibaseid = pci.ibaseid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

        queries(36) = "" & _
        "UPDATE basecardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tpcci ON tpcci.ibaseid = pcci.ibaseid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

        queries(37) = "" & _
        "UPDATE baseprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tpp ON tpp.ibaseid = pp.ibaseid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

        queries(38) = "" & _
        "UPDATE basetimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tpt ON tpt.ibaseid = pt.ibaseid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

        queries(39) = "" & _
        "INSERT INTO base " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb " & _
        "WHERE NOT EXISTS (SELECT * FROM base b WHERE b.ibaseid = tb.ibaseid AND b.ibaseid = " & baseid & ") "

        queries(40) = "" & _
        "INSERT INTO baseindirectcosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic " & _
        "WHERE NOT EXISTS (SELECT * FROM baseindirectcosts bic WHERE tbic.ibaseid = bic.ibaseid AND tbic.icostid = bic.icostid AND bic.ibaseid = " & baseid & ") "

        queries(41) = "" & _
        "INSERT INTO basecards " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc " & _
        "WHERE NOT EXISTS (SELECT * FROM basecards bc WHERE tbc.ibaseid = bc.ibaseid AND tbc.icardid = bc.icardid AND bc.ibaseid = " & baseid & ") "

        queries(42) = "" & _
        "INSERT INTO basecardinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardinputs bci WHERE tbci.ibaseid = bci.ibaseid AND tbci.icardid = bci.icardid AND tbci.iinputid = bci.iinputid AND bci.ibaseid = " & baseid & ") "

        queries(43) = "" & _
        "INSERT INTO basecardcompoundinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardcompoundinputs bcci WHERE tbcci.ibaseid = bcci.ibaseid AND tbcci.icardid = bcci.icardid AND tbcci.iinputid = bcci.iinputid AND tbcci.icompoundinputid = bcci.icompoundinputid AND bcci.ibaseid = " & baseid & ") "

        queries(44) = "" & _
        "INSERT INTO baseprices " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp " & _
        "WHERE NOT EXISTS (SELECT * FROM baseprices bp WHERE tbp.ibaseid = bp.ibaseid AND tbp.iinputid = bp.iinputid AND tbp.iupdatedate = bp.iupdatedate AND tbp.supdatetime = bp.supdatetime AND bp.ibaseid = " & baseid & ") "

        queries(45) = "" & _
        "INSERT INTO basetimber " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt " & _
        "WHERE NOT EXISTS (SELECT * FROM basetimber bt WHERE tbt.ibaseid = bt.ibaseid AND tbt.iinputid = bt.iinputid AND bt.ibaseid = " & baseid & ") "

        queries(46) = "INSERT IGNORE INTO logs VALUES (" & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "', " & susersession & ", '" & suserip & "', '" & susermachinename & "', 'Guardó cambios al Proyecto " & iprojectid & ": " & txtNombreProyecto.Text.Replace("--", "").Replace("'", "") & "', 'OK')"

        If executeTransactedSQLCommand(0, queries) = True Then
            MsgBox("Guardado exitosamente", MsgBoxStyle.OkOnly, "")
            btnRevisiones.Enabled = True
        Else
            MsgBox("Hubo un error al Guardar. Probablemente un error de Red. Intenta nuevamente", MsgBoxStyle.OkOnly, "")
            Exit Sub
        End If

        wasCreated = True

        Cursor.Current = System.Windows.Forms.Cursors.Default



    End Sub


    Private Sub btnGuardarYCerrar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnGuardarYCerrar.Click

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim timesProjectIsOpen As Integer = 1

        timesProjectIsOpen = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid & "'")

        If timesProjectIsOpen > 1 And isEdit = True Then

            If MsgBox("Otro usuario tiene abierto el mismo Proyecto. Guardar podría significar que esa persona perdiera sus cambios. ¿Deseas continuar guardando?", MsgBoxStyle.YesNo, "Confirmación Guardado") = MsgBoxResult.No Then

                Cursor.Current = System.Windows.Forms.Cursors.Default
                Exit Sub

            End If

        ElseIf timesProjectIsOpen > 1 And isEdit = False Then

            Dim newIdAddition As Integer = 1

            Do While getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid + newIdAddition & "'") > 1 And isEdit = False
                newIdAddition = newIdAddition + 1
            Loop

            'I got the new id (previousId + newIdAddition)

            Dim queriesNewId(33) As String

            queriesNewId(0) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition
            queriesNewId(1) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts"
            queriesNewId(2) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards"
            queriesNewId(3) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs"
            queriesNewId(4) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs"
            queriesNewId(5) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices"
            queriesNewId(6) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion"
            queriesNewId(7) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber"
            queriesNewId(8) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts"
            queriesNewId(9) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition
            queriesNewId(10) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts"
            queriesNewId(11) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards"
            queriesNewId(12) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs"
            queriesNewId(13) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs"
            queriesNewId(14) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices"
            queriesNewId(15) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber"
            queriesNewId(16) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardsAux"
            queriesNewId(17) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & " SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(18) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(19) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(20) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(21) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(22) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(23) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(24) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(25) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(26) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & " SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(27) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(28) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(29) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(30) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(31) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(32) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid

            If executeTransactedSQLCommand(0, queriesNewId) = True Then
                iprojectid = iprojectid + newIdAddition
            End If

        End If

        Dim baseid As Integer = 0

        baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

        If baseid = 0 Then
            baseid = 99999
        End If

        If iprojectid = 0 Then

            Dim fecha As Integer = getMySQLDate()
            Dim hora As String = getAppTime()

            iprojectid = getSQLQueryAsInteger(0, "SELECT IF(MAX(iprojectid) + 1 IS NULL, 1, MAX(iprojectid) + 1) AS iprojectid FROM projects")

            Dim queriesDropCreate(35) As String

            queriesDropCreate(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0"
            queriesDropCreate(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " ( `iprojectid` int(11) NOT NULL AUTO_INCREMENT, `iprojectdate` int(11) NOT NULL, `sprojecttime` varchar(11) CHARACTER SET latin1 NOT NULL, `sprojectname` varchar(200) CHARACTER SET latin1 NOT NULL, `sprojecttype` varchar(200) CHARACTER SET latin1 NOT NULL, `ipeopleid` int(11) NOT NULL COMMENT 'Client Id', `sprojectcompanyname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dprojectwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `sterrainlocation` varchar(400) CHARACTER SET latin1 NOT NULL, `sprojectfileslocation` varchar(1000) CHARACTER SET latin1 NOT NULL, `slastmodelapplied` varchar(200) CHARACTER SET latin1 NOT NULL, `dprojectindirectpercentagedefault` decimal(20,5) NOT NULL, `dprojectgainpercentagedefault` decimal(20,5) NOT NULL, `dprojectbuildingcommission` decimal(20,5) NOT NULL, `dprojectclosingcommission` decimal(20,5) NOT NULL, `dprojectrealbuildingcommission` decimal(20,5) DEFAULT NULL, `dprojectrealclosingcommission` decimal(20,5) DEFAULT NULL, `dprojectIVApercentage` decimal(20,5) NOT NULL DEFAULT '0.16000', `iprojectstarteddate` int(11) DEFAULT NULL, `sprojectstartedtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectforecastedclosingdate` int(11) DEFAULT NULL, `sprojectforecastedclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectrealclosingdate` int(11) DEFAULT NULL, `sprojectrealclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `sprojectTaxApplicable` int(1) DEFAULT 1, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`), KEY `peopleid` (`ipeopleid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(2) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0IndirectCosts"
            queriesDropCreate(3) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts" & " ( `iprojectid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sprojectcostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectcost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icostid`), KEY `projectid` (`iprojectid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(4) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Cards"
            queriesDropCreate(5) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `legacycategoryid` (`scardlegacycategoryid`), KEY `legacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(6) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardInputs"
            queriesDropCreate(7) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(8) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardCompoundInputs"
            queriesDropCreate(9) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(10) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Prices"
            queriesDropCreate(11) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices" & " ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `inputid` (`iinputid`), KEY `projectid` (`iprojectid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(12) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Explosion"
            queriesDropCreate(13) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputrealqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(14) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Timber"
            queriesDropCreate(15) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(16) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0AdminCosts"
            queriesDropCreate(17) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts ( `iprojectid` int(11) NOT NULL, `iadmincostid` int(11) NOT NULL, `sprojectadmincostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectadmincost` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iadmincostid`), KEY `projectid` (`iprojectid`), KEY `admincostid` (`iadmincostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(18) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs"
            queriesDropCreate(19) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(20) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs"
            queriesDropCreate(21) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(22) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards"
            queriesDropCreate(23) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `cardlegacycategoryid` (`scardlegacycategoryid`), KEY `cardlegacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(24) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts"
            queriesDropCreate(25) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts ( `ibaseid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sbasecostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dbasecost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icostid`), KEY `baseid` (`ibaseid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(26) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices"
            queriesDropCreate(27) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `baseid` (`ibaseid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(28) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid
            queriesDropCreate(29) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " ( `ibaseid` int(11) NOT NULL AUTO_INCREMENT, `sbasefileslocation` varchar(400) CHARACTER SET latin1 NOT NULL, `dbaseindirectpercentagedefault` decimal(20,5) NOT NULL, `dbasegainpercentagedefault` decimal(20,5) NOT NULL, `dbaseIVApercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(30) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0Timber"
            queriesDropCreate(31) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(32) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardsAux"

            queriesDropCreate(33) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " VALUES (" & iprojectid & ", " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", '00:00:00', '" & txtNombreProyecto.Text & "', '" & validaTipoDeConstruccion() & "', " & iclientid & ", '" & txtNombreEmpresa.Text & "', " & txtLongitudVivienda.Text & ", " & txtAnchoVivienda.Text & ", " & txtLongitudTerreno.Text & ", " & txtAnchoTerreno.Text & ", '" & txtLugar.Text & "', '" & txtRuta.Text.Replace("\", "/") & "', '', " & txtPorcentajeIndirectosDefault.Text & ", " & txtPorcentajeUtilidadDefault.Text & ", " & txtPorcentajeDeComisionDeObraPresupuestada.Text & ", " & txtPorcentajePorCierreDeOperacionPresupuestada.Text & ", " & txtPorcentajeDeComisionDeObraReal.Text & ", " & txtPorcentajePorCierreDeOperacionReal.Text & ", " & txtPorcentajeIVA.Text & ", 0, '00:00:00', 0, '00:00:00', 0, '00:00:00', 1, " & fecha & ", '" & hora & "', '" & susername & "')"

            executeTransactedSQLCommand(0, queriesDropCreate)

        Else

            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET iprojectdate = " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", sprojecttime = '00:00:00', sprojectname = '" & txtNombreProyecto.Text & "', sprojecttype = '" & validaTipoDeConstruccion() & "', ipeopleid = " & iclientid & ", sprojectcompanyname = '" & txtNombreEmpresa.Text & "', dprojectlength = " & txtLongitudVivienda.Text & ", dprojectwidth = " & txtLongitudVivienda.Text & ", dterrainlength = " & txtLongitudTerreno.Text & ", dterrainwidth = " & txtLongitudTerreno.Text & ", sterrainlocation = '" & txtLugar.Text & "', sprojectfileslocation = '" & txtRuta.Text.Replace("\", "/") & "', slastmodelapplied = '', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)

        End If

        Dim queries(50) As String

        queries(0) = "" & _
        "DELETE " & _
        "FROM projects " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp WHERE projects.iprojectid = tp.iprojectid) "

        queries(1) = "" & _
        "DELETE " & _
        "FROM projectindirectcosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic WHERE projectindirectcosts.iprojectid = tpic.iprojectid AND projectindirectcosts.icostid = tpic.icostid) "

        queries(2) = "" & _
        "DELETE " & _
        "FROM projectcards " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc WHERE projectcards.iprojectid = tpc.iprojectid AND projectcards.icardid = tpc.icardid) "

        queries(3) = "" & _
        "DELETE " & _
        "FROM projectcardinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci WHERE projectcardinputs.iprojectid = tpci.iprojectid AND projectcardinputs.icardid = tpci.icardid AND projectcardinputs.iinputid = tpci.iinputid) "

        queries(4) = "" & _
        "DELETE " & _
        "FROM projectcardcompoundinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci WHERE projectcardcompoundinputs.iprojectid = tpcci.iprojectid AND projectcardcompoundinputs.icardid = tpcci.icardid AND projectcardcompoundinputs.iinputid = tpcci.iinputid AND projectcardcompoundinputs.icompoundinputid = tpcci.icompoundinputid) "

        queries(5) = "" & _
        "DELETE " & _
        "FROM projectprices " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp WHERE projectprices.iprojectid = tpp.iprojectid AND projectprices.iinputid = tpp.iinputid AND projectprices.iupdatedate = tpp.iupdatedate AND projectprices.supdatetime = tpp.supdatetime) "

        queries(6) = "" & _
        "DELETE " & _
        "FROM projectexplosion " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex WHERE projectexplosion.iprojectid = tpex.iprojectid AND projectexplosion.iinputid = tpex.iinputid) "

        queries(7) = "" & _
        "DELETE " & _
        "FROM projecttimber " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt WHERE projecttimber.iprojectid = tpt.iprojectid AND projecttimber.iinputid = tpt.iinputid) "

        queries(47) = "" & _
        "DELETE " & _
        "FROM projectadmincosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac WHERE projectadmincosts.iprojectid = tpac.iprojectid AND projectadmincosts.iadmincostid = tpac.iadmincostid) "

        queries(8) = "" & _
        "UPDATE projects p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp ON tp.iprojectid = p.iprojectid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.iprojectdate = tp.iprojectdate, p.sprojecttime = tp.sprojecttime, p.sprojectname = tp.sprojectname, p.sprojecttype = tp.sprojecttype, p.ipeopleid = tp.ipeopleid, p.sprojectcompanyname = tp.sprojectcompanyname, p.dprojectlength = tp.dprojectlength, p.dprojectwidth = tp.dprojectwidth, p.dterrainlength = tp.dterrainlength, p.dterrainwidth = tp.dterrainwidth, p.sterrainlocation = tp.sterrainlocation, p.sprojectfileslocation = tp.sprojectfileslocation, p.slastmodelapplied = tp.slastmodelapplied, p.dprojectindirectpercentagedefault = tp.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault = tp.dprojectgainpercentagedefault, p.dprojectbuildingcommission = tp.dprojectbuildingcommission, p.dprojectclosingcommission = tp.dprojectclosingcommission, p.dprojectrealbuildingcommission = tp.dprojectrealbuildingcommission, p.dprojectrealclosingcommission = tp.dprojectrealclosingcommission, p.dprojectIVApercentage = tp.dprojectIVApercentage, p.iprojectstarteddate = tp.iprojectstarteddate, p.sprojectstartedtime = tp.sprojectstartedtime, p.iprojectforecastedclosingdate = tp.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime = tp.sprojectforecastedclosingtime, p.iprojectrealclosingdate = tp.iprojectrealclosingdate, p.sprojectrealclosingtime = tp.sprojectrealclosingtime, p.sprojectTaxApplicable = tp.sprojectTaxApplicable WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

        queries(9) = "" & _
        "UPDATE projectindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic ON tpic.iprojectid = pic.iprojectid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sprojectcostname = tpic.sprojectcostname, pic.dprojectcost = tpic.dprojectcost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

        queries(10) = "" & _
        "UPDATE projectcards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc ON tpc.iprojectid = pc.iprojectid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

        queries(11) = "" & _
        "UPDATE projectcardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci ON tpci.iprojectid = pci.iprojectid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

        queries(12) = "" & _
        "UPDATE projectcardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci ON tpcci.iprojectid = pcci.iprojectid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.iinputid = tpcci.iinputid, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

        queries(13) = "" & _
        "UPDATE projectprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp ON tpp.iprojectid = pp.iprojectid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

        queries(14) = "" & _
        "UPDATE projectexplosion pex JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex ON tpex.iprojectid = pex.iprojectid AND tpex.iinputid = pex.iinputid SET pex.iupdatedate = tpex.iupdatedate, pex.supdatetime = tpex.supdatetime, pex.supdateusername = tpex.supdateusername, pex.dinputrealqty = tpex.dinputrealqty WHERE STR_TO_DATE(CONCAT(tpex.iupdatedate, ' ', tpex.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pex.iupdatedate, ' ', pex.supdatetime), '%Y%c%d %T') "

        queries(15) = "" & _
        "UPDATE projecttimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt ON tpt.iprojectid = pt.iprojectid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

        queries(48) = "" & _
        "UPDATE projectadmincosts pac JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac ON tpac.iprojectid = pac.iprojectid AND tpac.iadmincostid = pac.iadmincostid SET pac.iupdatedate = tpac.iupdatedate, pac.supdatetime = tpac.supdatetime, pac.supdateusername = tpac.supdateusername, pac.sprojectadmincostname = tpac.sprojectadmincostname, pac.dprojectadmincost = tpac.dprojectadmincost WHERE STR_TO_DATE(CONCAT(tpac.iupdatedate, ' ', tpac.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pac.iupdatedate, ' ', pac.supdatetime), '%Y%c%d %T') "

        queries(16) = "" & _
        "INSERT INTO projects " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp " & _
        "WHERE NOT EXISTS (SELECT * FROM projects p WHERE p.iprojectid = tp.iprojectid AND p.iprojectid = " & iprojectid & ") "

        queries(17) = "" & _
        "INSERT INTO projectindirectcosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic " & _
        "WHERE NOT EXISTS (SELECT * FROM projectindirectcosts pic WHERE pic.iprojectid = tpic.iprojectid AND pic.icostid = tpic.icostid AND pic.iprojectid = " & iprojectid & ") "

        queries(18) = "" & _
        "INSERT INTO projectcards " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcards pc WHERE pc.iprojectid = tpc.iprojectid AND pc.icardid = tpc.icardid AND pc.iprojectid = " & iprojectid & ") "

        queries(19) = "" & _
        "INSERT INTO projectcardinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardinputs pci WHERE pci.iprojectid = tpci.iprojectid AND pci.icardid = tpci.icardid AND pci.iinputid = tpci.iinputid AND pci.iprojectid = " & iprojectid & ") "

        queries(20) = "" & _
        "INSERT INTO projectcardcompoundinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardcompoundinputs pcci WHERE pcci.iprojectid = tpcci.iprojectid AND pcci.icardid = tpcci.icardid AND pcci.iinputid = tpcci.iinputid AND pcci.icompoundinputid = tpcci.icompoundinputid AND pcci.iprojectid = " & iprojectid & ") "

        queries(21) = "" & _
        "INSERT INTO projectprices " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp " & _
        "WHERE NOT EXISTS (SELECT * FROM projectprices pp WHERE pp.iprojectid = tpp.iprojectid AND pp.iinputid = tpp.iinputid AND pp.iupdatedate = tpp.iupdatedate AND pp.supdatetime = tpp.supdatetime) "

        queries(22) = "" & _
        "INSERT INTO projectexplosion " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex " & _
        "WHERE NOT EXISTS (SELECT * FROM projectexplosion pex WHERE pex.iprojectid = tpex.iprojectid AND pex.iinputid = tpex.iinputid) "

        queries(23) = "" & _
        "INSERT INTO projecttimber " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt " & _
        "WHERE NOT EXISTS (SELECT * FROM projecttimber pt WHERE pt.iprojectid = tpt.iprojectid AND pt.iinputid = tpt.iinputid) "

        queries(49) = "" & _
        "INSERT INTO projectadmincosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac " & _
        "WHERE NOT EXISTS (SELECT * FROM projectadmincosts pac WHERE pac.iprojectid = tpac.iprojectid AND pac.iadmincostid = tpac.iadmincostid AND pac.iprojectid = " & iprojectid & ") "

        queries(24) = "" & _
        "DELETE " & _
        "FROM base " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb WHERE base.ibaseid = tb.ibaseid) "

        queries(25) = "" & _
        "DELETE " & _
        "FROM baseindirectcosts " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic WHERE baseindirectcosts.ibaseid = tbic.ibaseid AND baseindirectcosts.icostid = tbic.icostid) "

        queries(26) = "" & _
        "DELETE " & _
        "FROM basecards " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

        queries(27) = "" & _
        "DELETE " & _
        "FROM basecards " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

        queries(28) = "" & _
        "DELETE " & _
        "FROM basecardinputs " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci WHERE basecardinputs.ibaseid = tbci.ibaseid AND basecardinputs.icardid = tbci.icardid AND basecardinputs.iinputid = tbci.iinputid) "

        queries(29) = "" & _
        "DELETE " & _
        "FROM basecardcompoundinputs " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci WHERE basecardcompoundinputs.ibaseid = tbcci.ibaseid AND basecardcompoundinputs.icardid = tbcci.icardid AND basecardcompoundinputs.iinputid = tbcci.iinputid AND basecardcompoundinputs.icompoundinputid = tbcci.icompoundinputid) "

        queries(30) = "" & _
        "DELETE " & _
        "FROM baseprices " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp WHERE baseprices.ibaseid = tbp.ibaseid AND baseprices.iinputid = tbp.iinputid AND baseprices.iupdatedate = tbp.iupdatedate AND baseprices.supdatetime = tbp.supdatetime) "

        queries(31) = "" & _
        "DELETE " & _
        "FROM basetimber " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt WHERE basetimber.ibaseid = tbt.ibaseid AND basetimber.iinputid = tbt.iinputid) "

        queries(32) = "" & _
        "UPDATE base p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tp ON tp.ibaseid = p.ibaseid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.sbasefileslocation = tp.sbasefileslocation, p.dbaseindirectpercentagedefault = tp.dbaseindirectpercentagedefault, p.dbasegainpercentagedefault = tp.dbasegainpercentagedefault, p.dbaseIVApercentage = tp.dbaseIVApercentage WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

        queries(33) = "" & _
        "UPDATE baseindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tpic ON tpic.ibaseid = pic.ibaseid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sbasecostname = tpic.sbasecostname, pic.dbasecost = tpic.dbasecost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

        queries(34) = "" & _
        "UPDATE basecards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tpc ON tpc.ibaseid = pc.ibaseid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

        queries(35) = "" & _
        "UPDATE basecardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tpci ON tpci.ibaseid = pci.ibaseid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

        queries(36) = "" & _
        "UPDATE basecardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tpcci ON tpcci.ibaseid = pcci.ibaseid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

        queries(37) = "" & _
        "UPDATE baseprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tpp ON tpp.ibaseid = pp.ibaseid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

        queries(38) = "" & _
        "UPDATE basetimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tpt ON tpt.ibaseid = pt.ibaseid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

        queries(39) = "" & _
        "INSERT INTO base " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb " & _
        "WHERE NOT EXISTS (SELECT * FROM base b WHERE b.ibaseid = tb.ibaseid AND b.ibaseid = " & baseid & ") "

        queries(40) = "" & _
        "INSERT INTO baseindirectcosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic " & _
        "WHERE NOT EXISTS (SELECT * FROM baseindirectcosts bic WHERE tbic.ibaseid = bic.ibaseid AND tbic.icostid = bic.icostid AND bic.ibaseid = " & baseid & ") "

        queries(41) = "" & _
        "INSERT INTO basecards " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc " & _
        "WHERE NOT EXISTS (SELECT * FROM basecards bc WHERE tbc.ibaseid = bc.ibaseid AND tbc.icardid = bc.icardid AND bc.ibaseid = " & baseid & ") "

        queries(42) = "" & _
        "INSERT INTO basecardinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardinputs bci WHERE tbci.ibaseid = bci.ibaseid AND tbci.icardid = bci.icardid AND tbci.iinputid = bci.iinputid AND bci.ibaseid = " & baseid & ") "

        queries(43) = "" & _
        "INSERT INTO basecardcompoundinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardcompoundinputs bcci WHERE tbcci.ibaseid = bcci.ibaseid AND tbcci.icardid = bcci.icardid AND tbcci.iinputid = bcci.iinputid AND tbcci.icompoundinputid = bcci.icompoundinputid AND bcci.ibaseid = " & baseid & ") "

        queries(44) = "" & _
        "INSERT INTO baseprices " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp " & _
        "WHERE NOT EXISTS (SELECT * FROM baseprices bp WHERE tbp.ibaseid = bp.ibaseid AND tbp.iinputid = bp.iinputid AND tbp.iupdatedate = bp.iupdatedate AND tbp.supdatetime = bp.supdatetime AND bp.ibaseid = " & baseid & ") "

        queries(45) = "" & _
        "INSERT INTO basetimber " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt " & _
        "WHERE NOT EXISTS (SELECT * FROM basetimber bt WHERE tbt.ibaseid = bt.ibaseid AND tbt.iinputid = bt.iinputid AND bt.ibaseid = " & baseid & ") "

        queries(46) = "INSERT IGNORE INTO logs VALUES (" & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "', " & susersession & ", '" & suserip & "', '" & susermachinename & "', 'Guardó cambios al Proyecto " & iprojectid & ": " & txtNombreProyecto.Text.Replace("--", "").Replace("'", "") & "', 'OK')"

        If executeTransactedSQLCommand(0, queries) = True Then
            MsgBox("Guardado exitosamente", MsgBoxStyle.OkOnly, "")
        Else
            MsgBox("Hubo un error al Guardar. Probablemente un error de Red. Intenta nuevamente", MsgBoxStyle.OkOnly, "")
            Exit Sub
        End If

        wasCreated = True

        Cursor.Current = System.Windows.Forms.Cursors.Default

        Me.DialogResult = Windows.Forms.DialogResult.OK
        Me.Close()

    End Sub


    Private Sub btnCancelar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancelar.Click

        wasCreated = False

        Me.DialogResult = Windows.Forms.DialogResult.Cancel
        Me.Close()

    End Sub


    Private Sub btnRevisiones_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRevisiones.Click

        If MsgBox("Revisar un Proyecto automáticamente guarda sus cambios. ¿Deseas guardar este Proyecto ahora?", MsgBoxStyle.YesNo, "Pregunta Guardado") = MsgBoxResult.No Then
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

        Dim timesProjectIsOpen As Integer = 1

        timesProjectIsOpen = getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid & "'")

        If timesProjectIsOpen > 1 And isEdit = True Then

            Cursor.Current = System.Windows.Forms.Cursors.Default

            If MsgBox("Otro usuario tiene abierto el mismo Proyecto. Guardar podría significar que esa persona perdiera sus cambios. ¿Deseas continuar guardando?", MsgBoxStyle.YesNo, "Confirmación Guardado") = MsgBoxResult.No Then

                Exit Sub

            Else

                Cursor.Current = System.Windows.Forms.Cursors.WaitCursor

            End If

        ElseIf timesProjectIsOpen > 1 And isEdit = False Then

            Dim newIdAddition As Integer = 1

            Do While getSQLQueryAsInteger(0, "SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_NAME LIKE '%Project" & iprojectid + newIdAddition & "'") > 1 And isEdit = False
                newIdAddition = newIdAddition + 1
            Loop

            'I got the new id (previousId + newIdAddition)

            Dim queriesNewId(33) As String

            queriesNewId(0) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition
            queriesNewId(1) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts"
            queriesNewId(2) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards"
            queriesNewId(3) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs"
            queriesNewId(4) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs"
            queriesNewId(5) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices"
            queriesNewId(6) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion"
            queriesNewId(7) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber"
            queriesNewId(8) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts"
            queriesNewId(9) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition
            queriesNewId(10) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts"
            queriesNewId(11) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards"
            queriesNewId(12) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs"
            queriesNewId(13) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs"
            queriesNewId(14) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices"
            queriesNewId(15) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber"
            queriesNewId(16) = "ALTER TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardsAux RENAME TO oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardsAux"
            queriesNewId(17) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & " SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(18) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "IndirectCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(19) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Cards SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(20) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(21) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "CardCompoundInputs SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(22) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Prices SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(23) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Explosion SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(24) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "Timber SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(25) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid + newIdAddition & "AdminCosts SET iprojectid = " & iprojectid + newIdAddition & " WHERE iprojectid = " & iprojectid
            queriesNewId(26) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & " SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(27) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "IndirectCosts SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(28) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Cards SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(29) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(30) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "CardCompoundInputs SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(31) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Prices SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid
            queriesNewId(32) = "UPDATE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid + newIdAddition & "Timber SET ibaseid = " & iprojectid + newIdAddition & " WHERE ibaseid = " & iprojectid

            If executeTransactedSQLCommand(0, queriesNewId) = True Then
                iprojectid = iprojectid + newIdAddition
            End If

        End If

        Dim baseid As Integer = 0

        baseid = getSQLQueryAsInteger(0, "SELECT ibaseid FROM base ORDER BY iupdatedate DESC, supdatetime DESC LIMIT 1")

        If baseid = 0 Then
            baseid = 99999
        End If

        If iprojectid = 0 Then

            Dim fecha As Integer = getMySQLDate()
            Dim hora As String = getAppTime()

            iprojectid = getSQLQueryAsInteger(0, "SELECT IF(MAX(iprojectid) + 1 IS NULL, 1, MAX(iprojectid) + 1) AS iprojectid FROM projects")

            Dim queriesDropCreate(35) As String

            queriesDropCreate(0) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0"
            queriesDropCreate(1) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " ( `iprojectid` int(11) NOT NULL AUTO_INCREMENT, `iprojectdate` int(11) NOT NULL, `sprojecttime` varchar(11) CHARACTER SET latin1 NOT NULL, `sprojectname` varchar(200) CHARACTER SET latin1 NOT NULL, `sprojecttype` varchar(200) CHARACTER SET latin1 NOT NULL, `ipeopleid` int(11) NOT NULL COMMENT 'Client Id', `sprojectcompanyname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dprojectwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainlength` varchar(100) CHARACTER SET latin1 NOT NULL, `dterrainwidth` varchar(100) CHARACTER SET latin1 NOT NULL, `sterrainlocation` varchar(400) CHARACTER SET latin1 NOT NULL, `sprojectfileslocation` varchar(1000) CHARACTER SET latin1 NOT NULL, `slastmodelapplied` varchar(200) CHARACTER SET latin1 NOT NULL, `dprojectindirectpercentagedefault` decimal(20,5) NOT NULL, `dprojectgainpercentagedefault` decimal(20,5) NOT NULL, `dprojectbuildingcommission` decimal(20,5) NOT NULL, `dprojectclosingcommission` decimal(20,5) NOT NULL, `dprojectrealbuildingcommission` decimal(20,5) DEFAULT NULL, `dprojectrealclosingcommission` decimal(20,5) DEFAULT NULL, `dprojectIVApercentage` decimal(20,5) NOT NULL DEFAULT '0.16000', `iprojectstarteddate` int(11) DEFAULT NULL, `sprojectstartedtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectforecastedclosingdate` int(11) DEFAULT NULL, `sprojectforecastedclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `iprojectrealclosingdate` int(11) DEFAULT NULL, `sprojectrealclosingtime` varchar(11) CHARACTER SET latin1 DEFAULT NULL, `sprojectTaxApplicable` int(1) DEFAULT 1, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`), KEY `peopleid` (`ipeopleid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(2) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0IndirectCosts"
            queriesDropCreate(3) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts" & " ( `iprojectid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sprojectcostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectcost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icostid`), KEY `projectid` (`iprojectid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(4) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Cards"
            queriesDropCreate(5) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `legacycategoryid` (`scardlegacycategoryid`), KEY `legacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(6) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardInputs"
            queriesDropCreate(7) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(8) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardCompoundInputs"
            queriesDropCreate(9) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs" & " ( `iprojectid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `projectid` (`iprojectid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(10) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Prices"
            queriesDropCreate(11) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices" & " ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `inputid` (`iinputid`), KEY `projectid` (`iprojectid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(12) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Explosion"
            queriesDropCreate(13) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputrealqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `projectid` (`iprojectid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(14) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0Timber"
            queriesDropCreate(15) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber ( `iprojectid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(16) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0AdminCosts"
            queriesDropCreate(17) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts ( `iprojectid` int(11) NOT NULL, `iadmincostid` int(11) NOT NULL, `sprojectadmincostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dprojectadmincost` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`iprojectid`,`iadmincostid`), KEY `projectid` (`iprojectid`), KEY `admincostid` (`iadmincostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(18) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs"
            queriesDropCreate(19) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `icompoundinputid` int(11) NOT NULL, `scompoundinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcompoundinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`,`icompoundinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `compoundinputid` (`icompoundinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(20) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs"
            queriesDropCreate(21) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `scardinputunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardinputqty` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`,`iinputid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(22) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards"
            queriesDropCreate(23) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards ( `ibaseid` int(11) NOT NULL, `icardid` int(11) NOT NULL, `scardlegacycategoryid` varchar(10) CHARACTER SET latin1 NOT NULL, `scardlegacyid` varchar(10) CHARACTER SET latin1 NOT NULL, `scarddescription` varchar(1000) CHARACTER SET latin1 NOT NULL, `scardunit` varchar(50) CHARACTER SET latin1 NOT NULL, `dcardqty` decimal(20,5) NOT NULL, `dcardindirectcostspercentage` decimal(20,5) NOT NULL, `dcardgainpercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icardid`), KEY `baseid` (`ibaseid`), KEY `cardid` (`icardid`), KEY `cardlegacycategoryid` (`scardlegacycategoryid`), KEY `cardlegacyid` (`scardlegacyid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(24) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts"
            queriesDropCreate(25) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts ( `ibaseid` int(11) NOT NULL, `icostid` int(11) NOT NULL, `sbasecostname` varchar(500) CHARACTER SET latin1 NOT NULL, `dbasecost` decimal(20,5) NOT NULL, `dcompanyprojectedearnings` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`icostid`), KEY `baseid` (`ibaseid`), KEY `costid` (`icostid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(26) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices"
            queriesDropCreate(27) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputpricewithoutIVA` decimal(20,5) NOT NULL, `dinputprotectionpercentage` decimal(20,5) NOT NULL, `dinputfinalprice` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`,`iupdatedate`,`supdatetime`), KEY `baseid` (`ibaseid`), KEY `inputid` (`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(28) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid
            queriesDropCreate(29) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " ( `ibaseid` int(11) NOT NULL AUTO_INCREMENT, `sbasefileslocation` varchar(400) CHARACTER SET latin1 NOT NULL, `dbaseindirectpercentagedefault` decimal(20,5) NOT NULL, `dbasegainpercentagedefault` decimal(20,5) NOT NULL, `dbaseIVApercentage` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(30) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base0Timber"
            queriesDropCreate(31) = "CREATE TABLE oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber ( `ibaseid` int(11) NOT NULL, `iinputid` int(11) NOT NULL, `dinputtimberespesor` decimal(20,5) NOT NULL, `dinputtimberancho` decimal(20,5) NOT NULL, `dinputtimberlargo` decimal(20,5) NOT NULL, `dinputtimberpreciopiecubico` decimal(20,5) NOT NULL, `iupdatedate` int(11) NOT NULL, `supdatetime` varchar(11) CHARACTER SET latin1 NOT NULL, `supdateusername` varchar(100) CHARACTER SET latin1 NOT NULL, PRIMARY KEY (`ibaseid`,`iinputid`), KEY `updateuser` (`supdateusername`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_spanish_ci"

            queriesDropCreate(32) = "DROP TABLE IF EXISTS oversight.tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project0CardsAux"

            queriesDropCreate(33) = "INSERT INTO tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " VALUES (" & iprojectid & ", " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", '00:00:00', '" & txtNombreProyecto.Text & "', '" & validaTipoDeConstruccion() & "', " & iclientid & ", '" & txtNombreEmpresa.Text & "', " & txtLongitudVivienda.Text & ", " & txtAnchoVivienda.Text & ", " & txtLongitudTerreno.Text & ", " & txtAnchoTerreno.Text & ", '" & txtLugar.Text & "', '" & txtRuta.Text.Replace("\", "/") & "', '', " & txtPorcentajeIndirectosDefault.Text & ", " & txtPorcentajeUtilidadDefault.Text & ", " & txtPorcentajeDeComisionDeObraPresupuestada.Text & ", " & txtPorcentajePorCierreDeOperacionPresupuestada.Text & ", " & txtPorcentajeDeComisionDeObraReal.Text & ", " & txtPorcentajePorCierreDeOperacionReal.Text & ", " & txtPorcentajeIVA.Text & ", 0, '00:00:00', 0, '00:00:00', 0, '00:00:00', 1, " & fecha & ", '" & hora & "', '" & susername & "')"

            executeTransactedSQLCommand(0, queriesDropCreate)

        Else

            executeSQLCommand(0, "UPDATE tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " SET iprojectdate = " & convertDDdashMMdashYYYYtoYYYYMMDD(dtFechaPresupuesto.Value) & ", sprojecttime = '00:00:00', sprojectname = '" & txtNombreProyecto.Text & "', sprojecttype = '" & validaTipoDeConstruccion() & "', ipeopleid = " & iclientid & ", sprojectcompanyname = '" & txtNombreEmpresa.Text & "', dprojectlength = " & txtLongitudVivienda.Text & ", dprojectwidth = " & txtLongitudVivienda.Text & ", dterrainlength = " & txtLongitudTerreno.Text & ", dterrainwidth = " & txtLongitudTerreno.Text & ", sterrainlocation = '" & txtLugar.Text & "', sprojectfileslocation = '" & txtRuta.Text.Replace("\", "/") & "', slastmodelapplied = '', iupdatedate = " & getMySQLDate() & ", supdatetime = '" & getAppTime() & "', supdateusername = '" & susername & "' WHERE iprojectid = " & iprojectid)

        End If

        Dim queries(50) As String

        queries(0) = "" & _
        "DELETE " & _
        "FROM projects " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp WHERE projects.iprojectid = tp.iprojectid) "

        queries(1) = "" & _
        "DELETE " & _
        "FROM projectindirectcosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic WHERE projectindirectcosts.iprojectid = tpic.iprojectid AND projectindirectcosts.icostid = tpic.icostid) "

        queries(2) = "" & _
        "DELETE " & _
        "FROM projectcards " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc WHERE projectcards.iprojectid = tpc.iprojectid AND projectcards.icardid = tpc.icardid) "

        queries(3) = "" & _
        "DELETE " & _
        "FROM projectcardinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci WHERE projectcardinputs.iprojectid = tpci.iprojectid AND projectcardinputs.icardid = tpci.icardid AND projectcardinputs.iinputid = tpci.iinputid) "

        queries(4) = "" & _
        "DELETE " & _
        "FROM projectcardcompoundinputs " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci WHERE projectcardcompoundinputs.iprojectid = tpcci.iprojectid AND projectcardcompoundinputs.icardid = tpcci.icardid AND projectcardcompoundinputs.iinputid = tpcci.iinputid AND projectcardcompoundinputs.icompoundinputid = tpcci.icompoundinputid) "

        queries(5) = "" & _
        "DELETE " & _
        "FROM projectprices " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp WHERE projectprices.iprojectid = tpp.iprojectid AND projectprices.iinputid = tpp.iinputid AND projectprices.iupdatedate = tpp.iupdatedate AND projectprices.supdatetime = tpp.supdatetime) "

        queries(6) = "" & _
        "DELETE " & _
        "FROM projectexplosion " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex WHERE projectexplosion.iprojectid = tpex.iprojectid AND projectexplosion.iinputid = tpex.iinputid) "

        queries(7) = "" & _
        "DELETE " & _
        "FROM projecttimber " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt WHERE projecttimber.iprojectid = tpt.iprojectid AND projecttimber.iinputid = tpt.iinputid) "

        queries(47) = "" & _
        "DELETE " & _
        "FROM projectadmincosts " & _
        "WHERE iprojectid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac WHERE projectadmincosts.iprojectid = tpac.iprojectid AND projectadmincosts.iadmincostid = tpac.iadmincostid) "

        queries(8) = "" & _
        "UPDATE projects p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp ON tp.iprojectid = p.iprojectid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.iprojectdate = tp.iprojectdate, p.sprojecttime = tp.sprojecttime, p.sprojectname = tp.sprojectname, p.sprojecttype = tp.sprojecttype, p.ipeopleid = tp.ipeopleid, p.sprojectcompanyname = tp.sprojectcompanyname, p.dprojectlength = tp.dprojectlength, p.dprojectwidth = tp.dprojectwidth, p.dterrainlength = tp.dterrainlength, p.dterrainwidth = tp.dterrainwidth, p.sterrainlocation = tp.sterrainlocation, p.sprojectfileslocation = tp.sprojectfileslocation, p.slastmodelapplied = tp.slastmodelapplied, p.dprojectindirectpercentagedefault = tp.dprojectindirectpercentagedefault, p.dprojectgainpercentagedefault = tp.dprojectgainpercentagedefault, p.dprojectbuildingcommission = tp.dprojectbuildingcommission, p.dprojectclosingcommission = tp.dprojectclosingcommission, p.dprojectrealbuildingcommission = tp.dprojectrealbuildingcommission, p.dprojectrealclosingcommission = tp.dprojectrealclosingcommission, p.dprojectIVApercentage = tp.dprojectIVApercentage, p.iprojectstarteddate = tp.iprojectstarteddate, p.sprojectstartedtime = tp.sprojectstartedtime, p.iprojectforecastedclosingdate = tp.iprojectforecastedclosingdate, p.sprojectforecastedclosingtime = tp.sprojectforecastedclosingtime, p.iprojectrealclosingdate = tp.iprojectrealclosingdate, p.sprojectrealclosingtime = tp.sprojectrealclosingtime, p.sprojectTaxApplicable = tp.sprojectTaxApplicable WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

        queries(9) = "" & _
        "UPDATE projectindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic ON tpic.iprojectid = pic.iprojectid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sprojectcostname = tpic.sprojectcostname, pic.dprojectcost = tpic.dprojectcost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

        queries(10) = "" & _
        "UPDATE projectcards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc ON tpc.iprojectid = pc.iprojectid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

        queries(11) = "" & _
        "UPDATE projectcardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci ON tpci.iprojectid = pci.iprojectid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

        queries(12) = "" & _
        "UPDATE projectcardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci ON tpcci.iprojectid = pcci.iprojectid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.iinputid = tpcci.iinputid, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

        queries(13) = "" & _
        "UPDATE projectprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp ON tpp.iprojectid = pp.iprojectid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

        queries(14) = "" & _
        "UPDATE projectexplosion pex JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex ON tpex.iprojectid = pex.iprojectid AND tpex.iinputid = pex.iinputid SET pex.iupdatedate = tpex.iupdatedate, pex.supdatetime = tpex.supdatetime, pex.supdateusername = tpex.supdateusername, pex.dinputrealqty = tpex.dinputrealqty WHERE STR_TO_DATE(CONCAT(tpex.iupdatedate, ' ', tpex.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pex.iupdatedate, ' ', pex.supdatetime), '%Y%c%d %T') "

        queries(15) = "" & _
        "UPDATE projecttimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt ON tpt.iprojectid = pt.iprojectid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

        queries(48) = "" & _
        "UPDATE projectadmincosts pac JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac ON tpac.iprojectid = pac.iprojectid AND tpac.iadmincostid = pac.iadmincostid SET pac.iupdatedate = tpac.iupdatedate, pac.supdatetime = tpac.supdatetime, pac.supdateusername = tpac.supdateusername, pac.sprojectadmincostname = tpac.sprojectadmincostname, pac.dprojectadmincost = tpac.dprojectadmincost WHERE STR_TO_DATE(CONCAT(tpac.iupdatedate, ' ', tpac.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pac.iupdatedate, ' ', pac.supdatetime), '%Y%c%d %T') "

        queries(16) = "" & _
        "INSERT INTO projects " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & " tp " & _
        "WHERE NOT EXISTS (SELECT * FROM projects p WHERE p.iprojectid = tp.iprojectid AND p.iprojectid = " & iprojectid & ") "

        queries(17) = "" & _
        "INSERT INTO projectindirectcosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "IndirectCosts tpic " & _
        "WHERE NOT EXISTS (SELECT * FROM projectindirectcosts pic WHERE pic.iprojectid = tpic.iprojectid AND pic.icostid = tpic.icostid AND pic.iprojectid = " & iprojectid & ") "

        queries(18) = "" & _
        "INSERT INTO projectcards " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Cards tpc " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcards pc WHERE pc.iprojectid = tpc.iprojectid AND pc.icardid = tpc.icardid AND pc.iprojectid = " & iprojectid & ") "

        queries(19) = "" & _
        "INSERT INTO projectcardinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardInputs tpci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardinputs pci WHERE pci.iprojectid = tpci.iprojectid AND pci.icardid = tpci.icardid AND pci.iinputid = tpci.iinputid AND pci.iprojectid = " & iprojectid & ") "

        queries(20) = "" & _
        "INSERT INTO projectcardcompoundinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "CardCompoundInputs tpcci " & _
        "WHERE NOT EXISTS (SELECT * FROM projectcardcompoundinputs pcci WHERE pcci.iprojectid = tpcci.iprojectid AND pcci.icardid = tpcci.icardid AND pcci.iinputid = tpcci.iinputid AND pcci.icompoundinputid = tpcci.icompoundinputid AND pcci.iprojectid = " & iprojectid & ") "

        queries(21) = "" & _
        "INSERT INTO projectprices " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Prices tpp " & _
        "WHERE NOT EXISTS (SELECT * FROM projectprices pp WHERE pp.iprojectid = tpp.iprojectid AND pp.iinputid = tpp.iinputid AND pp.iupdatedate = tpp.iupdatedate AND pp.supdatetime = tpp.supdatetime) "

        queries(22) = "" & _
        "INSERT INTO projectexplosion " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Explosion tpex " & _
        "WHERE NOT EXISTS (SELECT * FROM projectexplosion pex WHERE pex.iprojectid = tpex.iprojectid AND pex.iinputid = tpex.iinputid) "

        queries(23) = "" & _
        "INSERT INTO projecttimber " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "Timber tpt " & _
        "WHERE NOT EXISTS (SELECT * FROM projecttimber pt WHERE pt.iprojectid = tpt.iprojectid AND pt.iinputid = tpt.iinputid) "

        queries(49) = "" & _
        "INSERT INTO projectadmincosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Project" & iprojectid & "AdminCosts tpac " & _
        "WHERE NOT EXISTS (SELECT * FROM projectadmincosts pac WHERE pac.iprojectid = tpac.iprojectid AND pac.iadmincostid = tpac.iadmincostid AND pac.iprojectid = " & iprojectid & ") "

        queries(24) = "" & _
        "DELETE " & _
        "FROM base " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb WHERE base.ibaseid = tb.ibaseid) "

        queries(25) = "" & _
        "DELETE " & _
        "FROM baseindirectcosts " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic WHERE baseindirectcosts.ibaseid = tbic.ibaseid AND baseindirectcosts.icostid = tbic.icostid) "

        queries(26) = "" & _
        "DELETE " & _
        "FROM basecards " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

        queries(27) = "" & _
        "DELETE " & _
        "FROM basecards " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc WHERE basecards.ibaseid = tbc.ibaseid AND basecards.icardid = tbc.icardid) "

        queries(28) = "" & _
        "DELETE " & _
        "FROM basecardinputs " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci WHERE basecardinputs.ibaseid = tbci.ibaseid AND basecardinputs.icardid = tbci.icardid AND basecardinputs.iinputid = tbci.iinputid) "

        queries(29) = "" & _
        "DELETE " & _
        "FROM basecardcompoundinputs " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci WHERE basecardcompoundinputs.ibaseid = tbcci.ibaseid AND basecardcompoundinputs.icardid = tbcci.icardid AND basecardcompoundinputs.iinputid = tbcci.iinputid AND basecardcompoundinputs.icompoundinputid = tbcci.icompoundinputid) "

        queries(30) = "" & _
        "DELETE " & _
        "FROM baseprices " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp WHERE baseprices.ibaseid = tbp.ibaseid AND baseprices.iinputid = tbp.iinputid AND baseprices.iupdatedate = tbp.iupdatedate AND baseprices.supdatetime = tbp.supdatetime) "

        queries(31) = "" & _
        "DELETE " & _
        "FROM basetimber " & _
        "WHERE ibaseid = " & iprojectid & " AND " & _
        "NOT EXISTS (SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt WHERE basetimber.ibaseid = tbt.ibaseid AND basetimber.iinputid = tbt.iinputid) "

        queries(32) = "" & _
        "UPDATE base p JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tp ON tp.ibaseid = p.ibaseid SET p.iupdatedate = tp.iupdatedate, p.supdatetime = tp.supdatetime, p.supdateusername = tp.supdateusername, p.sbasefileslocation = tp.sbasefileslocation, p.dbaseindirectpercentagedefault = tp.dbaseindirectpercentagedefault, p.dbasegainpercentagedefault = tp.dbasegainpercentagedefault, p.dbaseIVApercentage = tp.dbaseIVApercentage WHERE STR_TO_DATE(CONCAT(tp.iupdatedate, ' ', tp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(p.iupdatedate, ' ', p.supdatetime), '%Y%c%d %T') "

        queries(33) = "" & _
        "UPDATE baseindirectcosts pic JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tpic ON tpic.ibaseid = pic.ibaseid AND tpic.icostid = pic.icostid SET pic.iupdatedate = tpic.iupdatedate, pic.supdatetime = tpic.supdatetime, pic.supdateusername = tpic.supdateusername, pic.sbasecostname = tpic.sbasecostname, pic.dbasecost = tpic.dbasecost, pic.dcompanyprojectedearnings = tpic.dcompanyprojectedearnings WHERE STR_TO_DATE(CONCAT(tpic.iupdatedate, ' ', tpic.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pic.iupdatedate, ' ', pic.supdatetime), '%Y%c%d %T') "

        queries(34) = "" & _
        "UPDATE basecards pc JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tpc ON tpc.ibaseid = pc.ibaseid AND tpc.icardid = pc.icardid SET pc.iupdatedate = tpc.iupdatedate, pc.supdatetime = tpc.supdatetime, pc.supdateusername = tpc.supdateusername, pc.scardlegacycategoryid = tpc.scardlegacycategoryid, pc.scardlegacyid = tpc.scardlegacyid, pc.scarddescription = tpc.scarddescription, pc.scardunit = tpc.scardunit, pc.dcardqty = tpc.dcardqty, pc.dcardindirectcostspercentage = tpc.dcardindirectcostspercentage, pc.dcardgainpercentage = tpc.dcardgainpercentage WHERE STR_TO_DATE(CONCAT(tpc.iupdatedate, ' ', tpc.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pc.iupdatedate, ' ', pc.supdatetime), '%Y%c%d %T') "

        queries(35) = "" & _
        "UPDATE basecardinputs pci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tpci ON tpci.ibaseid = pci.ibaseid AND tpci.icardid = pci.icardid AND tpci.iinputid = pci.iinputid SET pci.iupdatedate = tpci.iupdatedate, pci.supdatetime = tpci.supdatetime, pci.supdateusername = tpci.supdateusername, pci.scardinputunit = tpci.scardinputunit, pci.dcardinputqty = tpci.dcardinputqty WHERE STR_TO_DATE(CONCAT(tpci.iupdatedate, ' ', tpci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pci.iupdatedate, ' ', pci.supdatetime), '%Y%c%d %T') "

        queries(36) = "" & _
        "UPDATE basecardcompoundinputs pcci JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tpcci ON tpcci.ibaseid = pcci.ibaseid AND tpcci.icardid = pcci.icardid AND tpcci.iinputid = pcci.iinputid AND tpcci.icompoundinputid = pcci.icompoundinputid SET pcci.iupdatedate = tpcci.iupdatedate, pcci.supdatetime = tpcci.supdatetime, pcci.supdateusername = tpcci.supdateusername, pcci.scompoundinputunit = tpcci.scompoundinputunit, pcci.dcompoundinputqty = tpcci.dcompoundinputqty WHERE STR_TO_DATE(CONCAT(tpcci.iupdatedate, ' ', tpcci.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pcci.iupdatedate, ' ', pcci.supdatetime), '%Y%c%d %T') "

        queries(37) = "" & _
        "UPDATE baseprices pp JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tpp ON tpp.ibaseid = pp.ibaseid AND tpp.iinputid = pp.iinputid AND tpp.iupdatedate = pp.iupdatedate AND tpp.supdatetime = pp.supdatetime SET pp.iupdatedate = tpp.iupdatedate, pp.supdatetime = tpp.supdatetime, pp.supdateusername = tpp.supdateusername, pp.dinputpricewithoutIVA = tpp.dinputpricewithoutIVA, pp.dinputprotectionpercentage = tpp.dinputprotectionpercentage, pp.dinputfinalprice = tpp.dinputfinalprice WHERE STR_TO_DATE(CONCAT(tpp.iupdatedate, ' ', tpp.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pp.iupdatedate, ' ', pp.supdatetime), '%Y%c%d %T') "

        queries(38) = "" & _
        "UPDATE basetimber pt JOIN tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tpt ON tpt.ibaseid = pt.ibaseid AND tpt.iinputid = pt.iinputid SET pt.iupdatedate = tpt.iupdatedate, pt.supdatetime = tpt.supdatetime, pt.supdateusername = tpt.supdateusername, pt.dinputtimberespesor = tpt.dinputtimberespesor, pt.dinputtimberancho = tpt.dinputtimberancho, pt.dinputtimberlargo = tpt.dinputtimberlargo, pt.dinputtimberpreciopiecubico = tpt.dinputtimberpreciopiecubico WHERE STR_TO_DATE(CONCAT(tpt.iupdatedate, ' ', tpt.supdatetime), '%Y%c%d %T') > STR_TO_DATE(CONCAT(pt.iupdatedate, ' ', pt.supdatetime), '%Y%c%d %T') "

        queries(39) = "" & _
        "INSERT INTO base " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & " tb " & _
        "WHERE NOT EXISTS (SELECT * FROM base b WHERE b.ibaseid = tb.ibaseid AND b.ibaseid = " & baseid & ") "

        queries(40) = "" & _
        "INSERT INTO baseindirectcosts " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "IndirectCosts tbic " & _
        "WHERE NOT EXISTS (SELECT * FROM baseindirectcosts bic WHERE tbic.ibaseid = bic.ibaseid AND tbic.icostid = bic.icostid AND bic.ibaseid = " & baseid & ") "

        queries(41) = "" & _
        "INSERT INTO basecards " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Cards tbc " & _
        "WHERE NOT EXISTS (SELECT * FROM basecards bc WHERE tbc.ibaseid = bc.ibaseid AND tbc.icardid = bc.icardid AND bc.ibaseid = " & baseid & ") "

        queries(42) = "" & _
        "INSERT INTO basecardinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardInputs tbci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardinputs bci WHERE tbci.ibaseid = bci.ibaseid AND tbci.icardid = bci.icardid AND tbci.iinputid = bci.iinputid AND bci.ibaseid = " & baseid & ") "

        queries(43) = "" & _
        "INSERT INTO basecardcompoundinputs " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "CardCompoundInputs tbcci " & _
        "WHERE NOT EXISTS (SELECT * FROM basecardcompoundinputs bcci WHERE tbcci.ibaseid = bcci.ibaseid AND tbcci.icardid = bcci.icardid AND tbcci.iinputid = bcci.iinputid AND tbcci.icompoundinputid = bcci.icompoundinputid AND bcci.ibaseid = " & baseid & ") "

        queries(44) = "" & _
        "INSERT INTO baseprices " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Prices tbp " & _
        "WHERE NOT EXISTS (SELECT * FROM baseprices bp WHERE tbp.ibaseid = bp.ibaseid AND tbp.iinputid = bp.iinputid AND tbp.iupdatedate = bp.iupdatedate AND tbp.supdatetime = bp.supdatetime AND bp.ibaseid = " & baseid & ") "

        queries(45) = "" & _
        "INSERT INTO basetimber " & _
        "SELECT * FROM tmp" & susername.Substring(0, 1).ToUpper & susername.Substring(1) & "S" & susersession & "Base" & iprojectid & "Timber tbt " & _
        "WHERE NOT EXISTS (SELECT * FROM basetimber bt WHERE tbt.ibaseid = bt.ibaseid AND tbt.iinputid = bt.iinputid AND bt.ibaseid = " & baseid & ") "

        queries(46) = "INSERT IGNORE INTO logs VALUES (" & getMySQLDate() & ", '" & getAppTime() & "', '" & susername & "', " & susersession & ", '" & suserip & "', '" & susermachinename & "', 'Guardó cambios al Proyecto " & iprojectid & ": " & txtNombreProyecto.Text.Replace("--", "").Replace("'", "") & "', 'OK')"

        If executeTransactedSQLCommand(0, queries) = True Then

            MsgBox("Guardado exitosamente", MsgBoxStyle.OkOnly, "")

            Dim br As New BuscaRevisiones

            br.susername = susername
            br.bactive = bactive
            br.bonline = bonline
            br.suserfullname = suserfullname
            br.suseremail = suseremail
            br.susersession = susersession
            br.susermachinename = susermachinename
            br.suserip = suserip

            br.isEdit = True

            br.srevisiondocument = "Proyecto"
            br.sid = iprojectid

            If Me.WindowState = FormWindowState.Maximized Then
                br.WindowState = FormWindowState.Maximized
            End If

            Me.Visible = False
            br.ShowDialog(Me)
            Me.Visible = True

        Else
            MsgBox("Hubo un error al Guardar. Probablemente un error de Red. Intenta nuevamente", MsgBoxStyle.OkOnly, "")
            Exit Sub
        End If

        wasCreated = True

        Cursor.Current = System.Windows.Forms.Cursors.Default

    End Sub


    'Private Sub btnExportarReporte_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnExportarReporte.Click

    '    If currentSelectedTabtcReportes = "Comparación Presupuestado vs Utilizado" Then

    '        MsgBox("Hola")

    '    End If

    'End Sub

    'Private Sub btnExportarReporte_Click() Handles btnExportarReporte.Click

    '    If currentSelectedTabtcReportes = "Comparación Presupuestado vs Utilizado" Then

    '        MsgBox("Hola2")

    '    End If

    'End Sub


End Class